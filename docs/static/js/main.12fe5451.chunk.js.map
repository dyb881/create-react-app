{"version":3,"sources":["utils/index.ts","pages/login/index.tsx","pages/admin/account/modal.tsx","config/routers.ts","pages/index.tsx","pages/admin/account/index.tsx","pages/admin/role/index.tsx","pages/home/index.tsx","pages/user/index.jsx","pages/login/style.module.less","components/antd/public.ts","components/antd/menu.tsx","components/antd/layout/index.tsx","components/antd/breadcrumb.tsx","components/antd/input.tsx","components/antd/data_show.tsx","components/antd/form/item.tsx","components/antd/form/create_form_item.tsx","components/antd/form/form.tsx","components/antd/form/form_modal.tsx","components/antd/select.tsx","components/antd/radio.tsx","components/antd/checkbox.tsx","components/custom/layout.tsx","components/custom/tablePage.tsx","components/custom/formPage.tsx","components/index.ts","components/custom/style.module.less","pages/admin/account/info.tsx","pages sync /^/.//.*$","store/view.ts","store/user.ts","store/index.ts","App.tsx","serviceWorker.ts","index.tsx","pages/admin/account/config.tsx","config/menuData.ts","config/request.ts","api/request.ts","api/index.ts"],"names":["sleep","outTime","Promise","r","setTimeout","inject","observer","store","useState","loading","setLoading","onSub","useCallback","values","a","message","success","user","onLogin","className","style","title","form","defaultItemProps","width","Item","label","name","placeholder","size","prefix","type","htmlType","block","data","children","id","admin","account","ok","before","formProps","initialValues","rules","select","fill","options","role","initialValue","state","isButton","regip","loginip","regtime","logintime","routersPaths","getMenuRouters","routers","Object","keys","reduce","path","page","require","default","view","onClickItem","setKey","isLogin","key","menuData","header","transition","useTable","use","dispatch","formSearchProps","paginationProps","current","pageSize","dataSource","getList","search","pageNum","res","list","total","useEffect","tableProps","useMemo","createTableProps","extra","to","refresh","React","Component","backgroundColor","module","exports","toOptions","map","k","value","SubMenu","Menu","collapsed","openKeys","onOpenChange","props","menuContent","JSON","stringify","computeProps","onClick","param","item","undefined","filter","i","hidden","icon","child","some","data-info","MenuNav","reload","history","useHistory","location","useLocation","useReducer","newState","selectedKey","Set","selectedKeys","getOpenKeys","forEach","matchPath","pathname","exact","openKeys_","mode","theme","push","moment","locale","Header","Content","Sider","Layout","logo","drawer","show","sider","placement","closable","visible","onClose","zh_CN","query","onChange","matches","fontSize","cursor","Box","box","useRef","getPopupContainer","document","body","ref","target","spinning","tip","PageHeader","classNames","Breadcrumb","text","Input","maxLength","autoComplete","this","Password","defaultPaginationProps","showTotal","showQuickJumper","showSizeChanger","pageSizeOptions","Table","pagination","rowKey","Pagination","onShowSizeChange","ratio","labelCol","wrapperCol","ratios","split","residue","span","colon","createFormItem","getFieldDecorator","formItemProps","valuePropName","validator","itemProps","Children","toArray","other","isValidElement","cloneElement","required","_rule","callback","msg","space","test","FormComponent","boxClassName","onErr","defaultFieldsValue","deleteNullValue","setFieldsValue","FormItem","submit","validateFieldsAndScroll","err","v","reset","resetFields","resetSubmit","onSubmit","e","preventDefault","stopPropagation","nativeEvent","stopImmediatePropagation","formRef","useImperativeHandle","forwardRef","Form","create","FormModal","onShow","onHide","confirmLoading","hide","onOk","onCancel","maskClosable","destroyOnClose","wrappedComponentRef","Option","Select","scroll","currentTarget","clientHeight","scrollHeight","scrollTop","max","length","setState","filterOption","filterKey","toLowerCase","includes","onDropdownVisibleChange","open","paging","selects","Array","isArray","optionLabelProp","onPopupScroll","onSearch","allowClear","Radio","Button","Group","buttonStyle","PageBox","pageBox","RouterBreadcrumb","getItems","items","items_","marginBottom","RouterTitle","after","RouterPageHeader","useAutoResize","resize","Date","window","addEventListener","removeEventListener","AutoBox","styles","maxHeight","top","offsetTop","innerHeight","autoBox","AutoTable","thead","getElementsByTagName","nextElementSibling","bottom","height","y","marginTop","x","Page","pageKey","defaultSearch","getKey","selectedRowKeys","showButton","FormSearch","layout","toScrollX","columns","additional","sum","Action","index","FormPage","FormModalPage","useInfo","defaultData","setData","match","params","details","getData","goBack","onBack","webpackContext","req","webpackContextResolve","__webpack_require__","o","Error","code","resolve","View","root","observable","action","toJS","tab","User","bind","when","configure","enforceActions","setTitle","Boolean","hostname","RenderApp","App","hot","ReactDOM","render","getElementById","navigator","serviceWorker","ready","then","registration","unregister","dataIndex","fixed","menu","slice","isProduction","protocol","qs","parse","successCode","config","host","apiPath","FetchReques","interceptorsRequest","log","request","interceptorsResponse","errorText","responseType","error","response","get","baseURL","post","put","patch","del","upload","edit","add"],"mappings":"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","file":"static/js/main.12fe5451.chunk.js","sourcesContent":["/**\n * 暂停\n */\nexport const sleep = (outTime: number) => new Promise(r => setTimeout(r, outTime));\n","import React, { useState, useCallback } from 'react';\nimport { inject, observer } from 'mobx-react';\nimport { Icon, Button, message } from 'antd';\nimport { Form, Password } from 'components';\nimport { TStore } from 'types';\nimport { sleep } from 'utils';\nimport style from './style.module.less';\n\nconst Page: React.SFC<TStore> = ({ store }) => {\n  const [loading, setLoading] = useState<string | boolean>(false);\n\n  /**\n   * 提交数据\n   */\n  const onSub = useCallback(async (values: any) => {\n    setLoading('正在登录');\n    // --------------------------- 请求前处理提交数据 --------------------------- //\n    // values\n    console.log(values);\n    // --------------------------- 请求前处理提交数据 --------------------------- //\n    await sleep(1000);\n    setLoading(false);\n    message.success('登录成功');\n    store!.user.onLogin(true);\n  }, []);\n\n  return (\n    <div className=\"fill center\">\n      <div>\n        <p className={style.title}>登录后台管理系统</p>\n        <Form\n          onSub={onSub}\n          className={style.form}\n          defaultItemProps={{\n            width: 1,\n          }}\n        >\n          {Item => (\n            <>\n              <Item label=\"\" name=\"username\" placeholder=\"请输入用户名\" size=\"large\" prefix={<Icon type=\"user\" />} />\n              <Item label=\"\" name=\"password\" placeholder=\"请输入密码\" size=\"large\" prefix={<Icon type=\"lock\" />}>\n                <Password />\n              </Item>\n              <Button htmlType=\"submit\" size=\"large\" type=\"primary\" block loading={!!loading}>\n                {loading || '登录'}\n              </Button>\n            </>\n          )}\n        </Form>\n      </div>\n    </div>\n  );\n};\n\nexport default inject('store')(observer(Page));\n","import React, { useCallback } from 'react';\nimport { inject, observer } from 'mobx-react';\nimport { message } from 'antd';\nimport { RouterTitle, FormModalPage, Select, Radio } from 'components';\nimport { TStore } from 'types';\nimport { options } from './config';\nimport { admin } from 'api';\n\nconst InfoModal: React.SFC<TStore & { data?: any }> = ({ data, children }) => {\n  /**\n   * 提交数据\n   */\n  const onSub = useCallback(async (values: any) => {\n    // --------------------------- 请求前处理提交数据 --------------------------- //\n    if (data) values.id = data.id;\n    // values\n    // --------------------------- 请求前处理提交数据 --------------------------- //\n    const res = await admin.account[data ? 'edit' : 'add'](values);\n    if (res.ok) {\n      message.success(`添加成功`);\n      return true;\n    }\n  }, []);\n\n  return (\n    <FormModalPage\n      title={<RouterTitle before={data ? '编辑' : '添加'} />}\n      onSub={onSub}\n      formProps={{ initialValues: data }}\n    >\n      {children}\n      {Item => (\n        <>\n          <Item label=\"用户名\" name=\"username\" placeholder rules />\n          <Item label=\"昵称\" name=\"nickname\" placeholder rules />\n          <Item label=\"角色\" name=\"role\" placeholder rules select fill>\n            <Select options={options.role} />\n          </Item>\n          <Item label=\"状态\" name=\"state\" fill initialValue={0}>\n            <Radio options={options.state} isButton />\n          </Item>\n          {!data || (\n            <>\n              <Item label=\"注册IP\">{data.regip}</Item>\n              <Item label=\"登陆IP\">{data.loginip}</Item>\n              <Item label=\"注册时间\">{data.regtime}</Item>\n              <Item label=\"登陆时间\">{data.logintime}</Item>\n            </>\n          )}\n        </>\n      )}\n    </FormModalPage>\n  );\n};\n\nexport default inject('store')(observer(InfoModal));\n","import { getMenuRouters } from './menuData';\n\n/**\n * 路由绑定组件路径\n * 默认为 /src/pages 下的文件或文件夹\n */\nexport type TRouters = {\n  // 路由地址：绑定组件路径\n  [path: string]: string;\n};\n\nconst routersPaths: TRouters = {\n  ...getMenuRouters(), // 菜单信息中解析路由\n};\n\n/**\n * 路由配置\n */\nconst routers = Object.keys(routersPaths).reduce(\n  (routers, path) => {\n    const page = require('pages/' + routersPaths[path]).default;\n    routers[path] = page;\n    return routers;\n  },\n  {} as {\n    [key: string]: React.ComponentType<any>;\n  }\n);\n\nexport default routers;\n","import React, { useCallback } from 'react';\nimport { inject, observer } from 'mobx-react';\nimport routers from 'config/routers';\nimport Router from '@dyb881/router';\nimport '@dyb881/router/lib/style.css';\nimport Transition from '@dyb881/transition';\nimport '@dyb881/transition/lib/style.css';\nimport menuData from 'config/menuData';\nimport { Layout, Header } from 'components';\nimport Login from './login';\nimport { TStore } from 'types';\n\n/**\n * 全局布局以及路由注册\n */\nconst Pages: React.SFC<TStore> = ({ store }) => {\n  const { view, user } = store!;\n\n  /**\n   * 点击左侧导航菜单\n   */\n  const onClickItem = useCallback(() => {\n    view.setKey('root', {}); // 清空表格页数据\n  }, []);\n\n  return (\n    <Transition name=\"fade\">\n      {user.isLogin ? (\n        <Layout key=\"layout\" menuData={menuData} header={<Header />} onClickItem={onClickItem}>\n          <Router routers={routers} transition />\n        </Layout>\n      ) : (\n        <Login key=\"login\" />\n      )}\n    </Transition>\n  );\n};\n\nexport default inject('store')(observer(Pages));\n","import React, { useEffect, useMemo, useCallback } from 'react';\nimport { Link } from 'react-router-dom';\nimport { inject, observer } from 'mobx-react';\nimport { Button } from 'antd';\nimport { useTable, Page, RouterPageHeader, FormSearch, AutoTable, Pagination } from 'components';\nimport { TPage } from 'types';\nimport { createTableProps } from './config';\nimport { admin } from 'api';\nimport Modal from './modal';\n\nconst TablePage: React.SFC<TPage> = () => {\n  const { state, use, dispatch, setLoading, formSearchProps, paginationProps } = useTable('root');\n  const { current, pageSize, dataSource, loading } = state;\n\n  /**\n   * 请求列表数据\n   */\n  const getList = useCallback(async () => {\n    setLoading('请求列表数据');\n    // 展开避免副作用\n    const search = { ...state.search };\n    // --------------------------- 请求前处理搜索值 --------------------------- //\n    // search\n    // --------------------------- 请求前处理搜索值 --------------------------- //\n    const res = await admin.account.getList({ pageNum: current, pageSize, ...search });\n    res.ok && dispatch({ dataSource: res.data.list, total: res.data.total });\n    setLoading(false);\n  }, use);\n\n  /**\n   * 根据监听条件自动请求最新列表\n   */\n  useEffect(() => {\n    getList();\n  }, use);\n\n  /**\n   * 生成表格配置数据\n   */\n  const tableProps = useMemo(() => createTableProps(), []);\n\n  /**\n   * 右上角按钮及内容\n   */\n  const extra = (\n    <>\n      <Modal>\n        <Button>弹窗添加</Button>\n      </Modal>\n      <Link to=\"/admin/account/info\">\n        <Button type=\"primary\">添加</Button>\n      </Link>\n    </>\n  );\n\n  return (\n    <Page loading={loading}>\n      <RouterPageHeader extra={extra}>\n        <FormSearch {...formSearchProps} refresh={getList}>\n          {Item => (\n            <>\n              <Item label=\"用户名\" name=\"username\" placeholder />\n              <Item label=\"昵称\" name=\"nickname\" placeholder />\n            </>\n          )}\n        </FormSearch>\n      </RouterPageHeader>\n      <AutoTable {...tableProps} dataSource={dataSource} />\n      <Pagination {...paginationProps} />\n    </Page>\n  );\n};\n\nexport default inject('store')(observer(TablePage));\n","import React from 'react';\nimport { inject, observer } from 'mobx-react';\nimport { Page, RouterPageHeader } from 'components';\nimport { TStore } from 'types';\n\n@inject('store')\n@observer\nexport default class extends React.Component<TStore> {\n  componentDidMount() {\n    // this.props.store!.view.loading();\n  }\n\n  render() {\n    return (\n      <Page>\n        <RouterPageHeader />\n      </Page>\n    );\n  }\n}\n","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nexport default () => (\n  <div className=\"fill\">\n    页面 <Link to=\"/user\">go User</Link>\n  </div>\n);\n","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nexport default () => (\n  <div className=\"fill\" style={{ backgroundColor: '#f00' }}>\n    页面 <Link to=\"/\">go Home</Link>\n  </div>\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"src-pages-login-style-module__title--2TKrn\",\"form\":\"src-pages-login-style-module__form--2xwYB\"};","/**\n * 转为选项值\n */\nexport const toOptions = (options: any[] | any) =>\n  Object.keys(options).map((k: any) =>\n    typeof options[k] === 'object' ? options[k] : { label: options[k], value: +k || +k === 0 ? +k : k }\n  );\n","import React, { useReducer, useEffect, useMemo } from 'react';\nimport { matchPath, useLocation, useHistory } from 'react-router-dom';\nimport { Menu as MenuOld, Icon } from 'antd';\nimport { MenuProps, ClickParam } from 'antd/es/menu';\n\nconst { SubMenu, Item } = MenuOld;\n\nexport type TMenuData = {\n  to?: string; // 跳转地址\n  icon?: React.ReactNode;\n  title: string; // 标题\n  onClick?: () => void; // 点击事件\n  child?: TMenuData[]; // 子菜单\n  hidden?: boolean; // 隐藏当前项\n  [key: string]: any;\n};\n\nexport type TMenuProps = MenuProps & {\n  data: TMenuData[]; // 导航菜单配置数据\n  onClickItem?: (data: TMenuData, key: string) => void; // 点击导航菜单 item 时执行\n  collapsed?: boolean; // 是否隐藏状态\n};\n\n/**\n * 递归树状的导航菜单\n * 根据配置，可无限生成子菜单\n */\nexport const Menu: React.SFC<TMenuProps> = ({ data, onClickItem, collapsed, openKeys, onOpenChange, ...props }) => {\n  const onClick = (param: ClickParam) => onClickItem!(param.item.props['data-info'], param.key);\n  const children = useMemo(() => menuContent(data), [JSON.stringify(data)]);\n  const computeProps = collapsed ? {} : { openKeys, onOpenChange };\n\n  return (\n    <MenuOld {...computeProps} onClick={onClickItem ? onClick : undefined} {...props}>\n      {children}\n    </MenuOld>\n  );\n};\n\n/**\n * 递归生成子菜单\n */\nconst menuContent = (data: TMenuData[], prefix = '') =>\n  data\n    .filter(i => !i.hidden)\n    .map((i, k) => {\n      const key = `item${prefix}${k}`;\n      const title = (\n        <>\n          {typeof i.icon === 'string' ? <Icon type={i.icon} /> : i.icon}\n          <span>{i.title}</span>\n        </>\n      );\n      return i.child && i.child.some(i => !i.hidden) ? (\n        <SubMenu key={key} title={title}>\n          {menuContent(i.child, prefix + k)}\n        </SubMenu>\n      ) : (\n        <Item key={key} data-info={i}>\n          {title}\n        </Item>\n      );\n    });\n\nexport type TMenuNavProps = TMenuProps & {\n  reload?: () => void; // 刷新\n  onEmpty?: () => void; // 空地址\n};\n\n/**\n * 左边导航栏\n * 根据路由自动打开并选中菜单\n */\nexport const MenuNav: React.SFC<TMenuNavProps> = ({ reload, ...props }) => {\n  const history = useHistory();\n  const location = useLocation();\n\n  const [state, dispatch] = useReducer(\n    (state, newState) => {\n      const { type, openKeys, selectedKey } = newState;\n      return type === 'AUTO_OPEN_SELECT'\n        ? { openKeys: [...new Set([...state.openKeys, ...openKeys])], selectedKeys: [selectedKey] }\n        : { ...state, ...newState };\n    },\n    { openKeys: [], selectedKeys: [] }\n  );\n\n  useEffect(() => {\n    // 当前选中\n    let selectedKey = '';\n\n    const getOpenKeys = (data: TMenuData[], prefix = ''): string[] | false => {\n      // 默认没有被选中\n      let openKeys: string[] | false = false;\n      data.forEach((i, k) => {\n        const key = `item${prefix}${k}`;\n        // 匹配当前地址\n        if (matchPath(location.pathname, { path: i.to, exact: true })) {\n          if (!i.hidden) {\n            // 选中\n            selectedKey = key;\n          }\n          // 确定当前路径被选中\n          openKeys = [];\n        } else if (i.child) {\n          const openKeys_ = getOpenKeys(i.child, prefix + k);\n          // 根据选中路径，往上寻找并打开菜单\n          if (openKeys_) openKeys = [key, ...openKeys_];\n          // 选中\n          if (!selectedKey) selectedKey = key;\n        }\n      });\n      return openKeys;\n    };\n\n    // 需要打开的菜单\n    const openKeys = getOpenKeys(props.data);\n\n    // 执行 自动打开菜单并选中\n    dispatch({ type: 'AUTO_OPEN_SELECT', openKeys: openKeys || [], selectedKey });\n  }, [location.pathname, JSON.stringify(props.data)]);\n\n  const onOpenChange = (openKeys: string[]) => dispatch({ openKeys });\n\n  const onClickItem = (data: TMenuData, key: string) => {\n    props.onClickItem && props.onClickItem(data, key);\n    data.onClick && data.onClick();\n    if (location.pathname === data.to) {\n      // 跳转地址和当前地址相同，执行刷新\n      reload && reload();\n    } else {\n      // 跳转对应地址\n      data.to && history.push(data.to);\n    }\n  };\n\n  return (\n    <Menu {...state} onOpenChange={onOpenChange} mode=\"inline\" theme=\"dark\" {...props} onClickItem={onClickItem} />\n  );\n};\n\nexport default Menu;\n","import React, { useRef, useReducer } from 'react';\nimport { Layout as LayoutOld, ConfigProvider, BackTop, Spin, Drawer, Icon, PageHeader as PageHeaderOld } from 'antd';\nimport { PageHeaderProps } from 'antd/es/page-header';\nimport { MenuNav, TMenuProps } from '../menu';\nimport Media from 'react-media';\nimport classNames from 'classnames';\n\n/**\n * 设置为中文简体\n */\nimport zh_CN from 'antd/es/locale-provider/zh_CN';\nimport moment from 'moment';\nimport 'moment/locale/zh-cn';\nmoment.locale('zh-cn');\n\nconst { Header, Content, Sider } = LayoutOld;\n\ntype TProps = React.HTMLProps<HTMLDivElement> & {\n  logo?: React.ReactNode;\n  header?: React.ReactNode; // 顶部内容，默认右对齐\n  loading?: boolean | string; // 在 Content 中显示加载状态\n  menuData: TMenuProps['data']; // 菜单导航配置\n  onClickItem?: TMenuProps['onClickItem'];\n};\n\n/**\n * 后台主体布局\n * 左侧 logo 和菜单导航，顶部信息栏\n */\nexport const Layout: React.SFC<TProps> = ({ logo, header, menuData, children, onClickItem }) => {\n  const [{ key, drawer, show }, dispatch] = useReducer((state, newState) => ({ ...state, ...newState }), {\n    key: 0,\n    drawer: false,\n    show: true,\n  });\n\n  // 菜单导航重复点击当前\n  const reload = () => dispatch({ key: key + 1 });\n\n  let sider = (\n    <Sider className=\"dyb-layout-sider\" collapsed={!show}>\n      {logo || <div className=\"dyb-layout-logo\" />}\n      <MenuNav data={menuData} reload={reload} collapsed={!show} onClickItem={onClickItem} />\n    </Sider>\n  );\n\n  if (drawer) {\n    sider = (\n      <Drawer\n        placement=\"left\"\n        closable={false}\n        width={200}\n        className=\"dyb-drawer\"\n        visible={show}\n        onClose={() => dispatch({ show: false })}\n      >\n        {sider}\n      </Drawer>\n    );\n  }\n\n  return (\n    <ConfigProvider locale={zh_CN}>\n      <LayoutOld className=\"dyb-layout\">\n        <Media\n          query=\"(max-width: 600px)\"\n          onChange={matches => dispatch({ drawer: matches, show: matches ? false : show })}\n        />\n        <Media query=\"(max-width: 1000px)\" onChange={matches => dispatch({ show: !matches })} />\n        {sider}\n        <LayoutOld>\n          <Header className=\"dyb-layout-header\">\n            <Icon\n              type={show ? 'menu-fold' : 'menu-unfold'}\n              onClick={() => dispatch({ show: !show })}\n              style={{ fontSize: 20, cursor: 'pointer' }}\n            />\n            <span>{header || '一定程度的限制，是为了更广阔的拓展'}</span>\n          </Header>\n          <Content className=\"dyb-layout-content\" key={key}>\n            {children}\n          </Content>\n        </LayoutOld>\n      </LayoutOld>\n    </ConfigProvider>\n  );\n};\n\nexport type TBoxProps = React.HTMLProps<HTMLDivElement> & {\n  loading?: boolean | string; // 显示加载状态\n};\n\n/**\n * 布局盒子\n * 填满当前元素 + 滚动 + 回到顶部按钮 + antd Spin\n */\nexport const Box: React.SFC<TBoxProps> = ({ loading, ...props }) => {\n  const box = useRef(null);\n  return (\n    <ConfigProvider getPopupContainer={() => box.current || document.body}>\n      <div ref={box} className=\"dyb-layout-box\">\n        {box.current && <BackTop target={() => box.current!} />}\n        <Spin spinning={!!loading} tip={typeof loading === 'string' ? loading : undefined}>\n          <div {...props} />\n        </Spin>\n      </div>\n    </ConfigProvider>\n  );\n};\n\n/**\n * 头部模块\n * 在原有基础上追加 min-height: 32px\n */\nexport const PageHeader: React.SFC<PageHeaderProps> = ({ className, ...props }) => (\n  <PageHeaderOld className={classNames('dyb-layout-pageHeader', className)} {...props} />\n);\n\nexport default Layout;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { Breadcrumb as BreadcrumbOld } from 'antd';\nimport { BreadcrumbProps, BreadcrumbItemProps } from 'antd/es/breadcrumb';\n\ntype TBreadcrumbItemProps = BreadcrumbItemProps & {\n  to?: string; // 跳转地址\n  text: string; // 显示文本\n};\n\nexport type TBreadcrumbProps = BreadcrumbProps & {\n  data: TBreadcrumbItemProps[];\n};\n\n/**\n * 面包屑\n * 可由配置生成可跳转的面包屑\n */\nexport const Breadcrumb: React.SFC<TBreadcrumbProps> = ({ data, ...props }) => (\n  <BreadcrumbOld {...props}>\n    {data.map(({ to, text, ...i }, k) => (\n      <BreadcrumbOld.Item key={k} {...i}>\n        {to ? <Link to={to}>{text}</Link> : text}\n      </BreadcrumbOld.Item>\n    ))}\n  </BreadcrumbOld>\n);\n\nexport default Breadcrumb;\n","import React from 'react';\nimport { Input as InputOld, InputNumber as InputNumberOld, AutoComplete as AutoCompleteOld } from 'antd';\nimport { InputProps, SearchProps, TextAreaProps } from 'antd/es/input';\nimport { InputNumberProps } from 'antd/es/input-number';\nimport { AutoCompleteProps } from 'antd/es/auto-complete';\nimport classNames from 'classnames';\nimport { TInputNotRequired } from 'types';\n\n/**\n * 文本框\n */\nexport class Input extends React.Component<InputProps> {\n  render() {\n    return <InputOld maxLength={30} autoComplete=\"off\" {...this.props} />;\n  }\n}\n\n/**\n * 大文本框\n */\nexport class TextArea extends React.Component<TextAreaProps> {\n  render() {\n    const { value = '', maxLength = 255, className, ...props } = this.props;\n    return (\n      <div className={classNames('dyb-textArea', className)}>\n        <InputOld.TextArea rows={4} maxLength={maxLength} value={value} {...props} />\n        <p>\n          {('' + value).length} / {maxLength}\n        </p>\n      </div>\n    );\n  }\n}\n\n/**\n * 密码输入框\n */\nexport class Password extends React.Component<InputProps> {\n  render() {\n    return <InputOld.Password maxLength={30} autoComplete=\"current-password\" {...this.props} />;\n  }\n}\n\n/**\n * 搜索框\n */\nexport class Search extends React.Component<SearchProps> {\n  render() {\n    return <InputOld.Search maxLength={30} enterButton {...this.props} />;\n  }\n}\n\ntype TInputNumberProps = InputNumberProps & {\n  unit?: string | JSX.Element;\n  minus?: boolean;\n}\n\n/**\n * 数字文本框\n */\nexport class InputNumber extends React.Component<TInputNumberProps> {\n  render() {\n    const { unit, minus, className, ...props } = this.props;\n    return (\n      <div className={classNames('dyb-inputNumber', className)}>\n        <InputNumberOld min={minus ? -99999999 : 0} max={99999999} step={1} precision={0} {...props} />\n        {unit && <span className=\"dyb-unit\">{unit}</span>}\n      </div>\n    );\n  }\n}\n\n/**\n * 自动完成\n */\nexport class AutoComplete extends React.Component<AutoCompleteProps> {\n  render() {\n    return (\n      <AutoCompleteOld\n        filterOption={(inputValue, option: any) =>\n          option.props.children.toUpperCase().includes(inputValue.toUpperCase())\n        }\n        {...this.props}\n      />\n    );\n  }\n}\n\nexport type TInputInterceptProps = TInputNotRequired & {\n  onIntercept(onChange: (value: any) => void): (value: any) => void;\n  onConvert?: (value: any) => any;\n  children: JSX.Element;\n}\n\n/**\n * 输入拦截器\n */\nexport class InputIntercept extends React.Component<TInputInterceptProps> {\n  render() {\n    const { onIntercept, onConvert, children, value, onChange } = this.props;\n    return (\n      <>\n        {React.cloneElement(children, {\n          value: onConvert && onConvert(value),\n          onChange: onChange && onIntercept(onChange),\n        })}\n      </>\n    );\n  }\n}\n\ntype TInputMultilineProps = TInputNotRequired<any[]> & {\n  children: JSX.Element;\n  delButton?: JSX.Element; // 删除按钮\n  addButton?: JSX.Element; // 添加按钮\n  fixed?: boolean; // 固定数组\n}\n\n/**\n * 多行输入字段\n */\nexport class InputMultiline extends React.Component<TInputMultilineProps> {\n  setValue = (value: any[]) => {\n    const { onChange } = this.props;\n    onChange && onChange(value);\n  };\n\n  add = () => {\n    const { value = [] } = this.props;\n    this.setValue([...value, undefined]);\n  };\n\n  del = (index: number) => {\n    let { value = [] } = this.props;\n    value = [...value];\n    value.splice(index, 1);\n    this.setValue(value);\n  };\n\n  onChange = (index: number) => (e: any) => {\n    let { value = [] } = this.props;\n    value = [...value];\n    value[index] = e && e.target ? e.target.value : e;\n    this.setValue(value);\n  };\n\n  render() {\n    const { delButton, addButton, children, value = [], fixed } = this.props;\n    return (\n      <>\n        {value.map((val: any, index: number) => (\n          <div className=\"dyb-input-multiline-item\" key={index}>\n            <div>\n              {React.cloneElement(children, {\n                value: val,\n                onChange: this.onChange(index),\n              })}\n            </div>\n            {fixed ||\n              React.cloneElement(delButton || <span>删除</span>, {\n                onClick: () => this.del(index),\n              })}\n          </div>\n        ))}\n        {fixed ||\n          React.cloneElement(addButton || <span>添加</span>, {\n            onClick: this.add,\n          })}\n      </>\n    );\n  }\n}\n","import React from 'react';\nimport { Table as TableOld, Pagination as PaginationOld, Popover } from 'antd';\nimport { TableProps } from 'antd/es/table';\nimport { PaginationProps } from 'antd/es/pagination';\nimport { PopoverProps } from 'antd/es/popover';\nimport classNames from 'classnames';\n\n/**\n * 默认分页配置\n */\nconst defaultPaginationProps = {\n  showTotal: (total: number) => `总计 ${total} 条`, // 统计信息\n  showQuickJumper: true, // 跳转\n  showSizeChanger: true, // pageSize 变动\n  pageSizeOptions: ['10', '20', '30', '50', '100'], // pageSize 候选列表，默认为 10\n};\n\n/**\n * 表格\n * 默认使用 id 作为 key\n * 追加分页默认配置\n */\nexport const Table: React.SFC<TableProps<any>> = ({ pagination, ...props }) => (\n  <TableOld\n    rowKey=\"id\"\n    pagination={pagination === false ? false : { ...defaultPaginationProps, ...pagination }}\n    {...props}\n  />\n);\n\n/**\n * 分页\n * 追加分页默认配置\n */\nexport const Pagination: React.SFC<PaginationProps> = ({ onChange, ...props }) => {\n  return (\n    <div className=\"dyb-pagination\">\n      <PaginationOld {...defaultPaginationProps} onChange={onChange} onShowSizeChange={onChange} {...props} />\n    </div>\n  );\n};\n\ntype TLongTextProps = React.HTMLProps<HTMLDivElement> & {\n  popover?: PopoverProps; // 是否气泡展示详情\n};\n\n/**\n * 长文本隐藏\n * 不换行溢出隐藏\n * 可选使用气泡展示，默认左上弹出，trigger:hover\n */\nexport const LongText: React.SFC<TLongTextProps> = ({ children, className, popover, ...props }) => {\n  let res = (\n    <div className={classNames('dyb-long-text', className)} {...props}>\n      <div>{children}</div>\n    </div>\n  );\n\n  if (!popover) return res;\n\n  return (\n    <Popover placement=\"topLeft\" trigger=\"hover\" content={children} {...popover}>\n      {res}\n    </Popover>\n  );\n};\n","import React, { useMemo } from 'react';\nimport { Form } from 'antd';\nimport { FormItemProps } from 'antd/es/form';\n\nexport type TItemProps = FormItemProps & {\n  width?: number; // 0 - 1，宽度比值\n  ratio?: string; // 比值，例：8:16 冒号两边的值和 < 24，该值用于使用 antd 的栅格\n  fill?: boolean; // 是否填满\n};\n\n/**\n * 表单 Item\n */\nexport const Item: React.SFC<TItemProps> = ({ width, ratio, fill, label, style, labelCol, wrapperCol, ...props }) => {\n  // 计算 Props\n  const computeProps = useMemo(() => {\n    if (ratio) {\n      // 计算占比栅格\n      const ratios = ratio.split(':').map(i => +i || 0);\n\n      // 计算占满时，所占栅格\n      if (fill && width) {\n        const residue = 24 - ratios[0] - ratios[1];\n        ratios[0] *= width;\n        ratios[1] = 24 - ratios[0] - residue * width;\n      }\n\n      // 写入占比栅格\n      labelCol = { span: ~~ratios[0], ...labelCol };\n      wrapperCol = { span: ~~ratios[1], ...wrapperCol };\n    }\n\n    // 计算宽度\n    if (width) {\n      style = { width: `${fill ? 100 : 100 * width}%`, ...style };\n    }\n\n    return {\n      // label 为空时，需要保持占位，并\n      label: label === undefined ? <span /> : label,\n      // 去掉冒号：\n      colon: !!label,\n      style,\n      // 设置占比栅格\n      labelCol,\n      wrapperCol,\n    };\n  }, [\n    width,\n    ratio,\n    fill,\n    label,\n    JSON.stringify(style),\n    JSON.stringify(labelCol),\n    JSON.stringify(wrapperCol),\n  ]) as TItemProps;\n\n  return <Form.Item {...computeProps} {...props} />;\n};\n\nexport default Item;\n","import React from 'react';\nimport { Input } from '../input';\nimport { ValidationRule } from 'antd/es/form';\nimport { WrappedFormUtils, GetFieldDecoratorOptions } from 'antd/es/form/Form';\nimport { Item, TItemProps } from './item';\n\nexport type TFormItemProps = {\n  label?: React.ReactNode; // 标签名\n  name?: string; // 字段名\n  children?: React.ReactNode;\n  valuePropName?: string; // 值对应字段\n  initialValue?: any; // 默认值\n  rules?: true | string | ValidationRule[]; // 验证规则\n  validator?: (value: any) => string | undefined; // 额外验证器\n  options?: GetFieldDecoratorOptions; // getFieldDecorator(id, options) to options\n  itemProps?: TItemProps; // Form.Item to Props\n  fill?: boolean; // 占满整行\n  select?: boolean; // 是否选择器\n  placeholder?: boolean | string | string[]; // 占位符\n  [key: string]: any;\n}\n\n/**\n * 初始值\n */\nexport type TInitialValues = {\n  [key: string]: TFormItemProps['initialValue'];\n}\n\n/**\n * 创建表单 Item 组件\n */\nexport const createFormItem = (\n  getFieldDecorator: WrappedFormUtils['getFieldDecorator'],\n  defaultItemProps?: TItemProps,\n  initialValues?: TInitialValues\n) => {\n  /**\n   * 表单 Item\n   * 用于快速绑定字段生成表单\n   */\n  const FormItem: React.SFC<TFormItemProps> = formItemProps => {\n    let {\n      label,\n      name,\n      children,\n      valuePropName = 'value',\n      initialValue = initialValues && name ? initialValues[name] : undefined,\n      rules = [],\n      validator,\n      options,\n      itemProps = defaultItemProps,\n      fill,\n      select,\n      ...props\n    } = formItemProps as TFormItemProps;\n\n    // 获取第一个标签和剩余标签\n    let [child = name ? <Input /> : undefined, ...other] = children ? React.Children.toArray(children) : [];\n\n    // 当第一个元素为有效 react 组件时，合并 props\n    if (React.isValidElement(child)) {\n      // 默认提示语\n      let text = select ? '请选择' : '请输入';\n      // 接入label，如 label:用户名 = 请输入用户名\n      if (typeof label === 'string') text += label;\n\n      // placeholder 和 rules，当值 == true 时，读取对方的值，若对方的值也为 true，则使用默认提示语\n      if (props.placeholder === true) props.placeholder = typeof rules === 'string' ? rules : text;\n      if (rules === true) rules = typeof props.placeholder === 'string' ? props.placeholder : text;\n\n      // 给第一个标签写入额外参数\n      child = React.cloneElement(child, props);\n\n      if (name) {\n        // 自动加入必填提示\n        if (typeof rules === 'string') rules = [{ required: true, message: rules }];\n\n        // 追加验证器\n        rules.push({\n          validator: (_rule, value, callback) => {\n            let msg;\n            // 不可提交空格\n            if (value && typeof value === 'string' && !space.test(value)) msg = '不可提交空格';\n            // 自定义验证器\n            if (!msg && validator) msg = validator(value);\n            callback(msg);\n          },\n        });\n\n        // 绑定字段\n        child = getFieldDecorator(name, { valuePropName, initialValue, rules, ...options })(child) as JSX.Element;\n      }\n    }\n\n    return (\n      <Item {...itemProps} label={label} fill={fill}>\n        {child}\n        {other}\n      </Item>\n    );\n  };\n\n  return FormItem;\n};\n\n/**\n * 非全空格，即字符串内包含非空格的时候不匹配，一般用于 !space.test('  ') === true 判断字符串是否都是空格\n */\nconst space = /^[\\s\\S]*.*[^\\s][\\s\\S]*$/;\n\nexport default createFormItem;\n","import React, { useRef, useMemo, useImperativeHandle, forwardRef, useEffect } from 'react';\nimport { Form as FormOld, ConfigProvider } from 'antd';\nimport { FormProps, FormComponentProps } from 'antd/es/form';\nimport { RcBaseFormProps, WrappedFormUtils } from 'antd/es/form/Form';\nimport { createFormItem, TFormItemProps, TInitialValues } from './create_form_item';\nimport { TItemProps } from './item';\nimport classNames from 'classnames';\nimport { pickBy } from 'lodash';\n\nexport type TFormRef = {\n  submit(): void;\n  reset(): void;\n  resetSubmit(): void;\n  form: WrappedFormUtils;\n};\n\nexport type TFormProps = FormProps &\n  RcBaseFormProps & {\n    boxClassName?: string; // box 类名\n    onSub?: (values: any) => void; // 提交表单回调\n    onErr?: (err: any) => void; // 表单错误回调\n    children?: (FormItem: React.SFC<TFormItemProps>, formRef: TFormRef) => JSX.Element; // 表单值创建组件\n    defaultItemProps?: TItemProps; // FormItem 默认配置\n    initialValues?: TInitialValues; // 表单初始值\n    defaultFieldsValue?: object; // 表单默认值\n    deleteNullValue?: boolean; // 删除空值\n  };\n\nlet FormComponent: React.SFC<TFormProps & FormComponentProps> = (\n  {\n    form,\n    boxClassName,\n    className,\n    onSub,\n    onErr,\n    children,\n    defaultItemProps,\n    initialValues,\n    defaultFieldsValue,\n    deleteNullValue,\n    ...props\n  },\n  ref\n) => {\n  const box = useRef(null);\n\n  useEffect(() => {\n    // 第一次获取默认值的时候写入默认值\n    defaultFieldsValue && form.setFieldsValue(defaultFieldsValue);\n  }, [!defaultFieldsValue]);\n\n  /**\n   * 表单 FormItem\n   * 用于快速绑定字段生成表单\n   */\n  const FormItem = useMemo(() => createFormItem(form.getFieldDecorator, defaultItemProps, initialValues), [\n    JSON.stringify(defaultItemProps),\n    JSON.stringify(initialValues),\n  ]);\n\n  const { submit, reset, resetSubmit, onSubmit } = useMemo(() => {\n    /**\n     * 提交表单方法\n     */\n    const submit = () => {\n      form.validateFieldsAndScroll((err, values) => {\n        if (err) {\n          // 提交表单失败\n          onErr && onErr(err);\n        } else {\n          // 删除空值\n          if (deleteNullValue) {\n            values = pickBy(values, v => v !== undefined && v !== null && v !== '');\n          }\n\n          // 成功提交表单\n          onSub && onSub(values);\n        }\n      });\n    };\n\n    /**\n     * 重置清空表单\n     */\n    const reset = () => {\n      form.resetFields();\n    };\n\n    /**\n     * 重置清空表单，并提交表单\n     */\n    const resetSubmit = () => {\n      reset();\n      submit();\n    };\n\n    /**\n     * 表单提交执行\n     */\n    const onSubmit = (e: React.FormEvent) => {\n      e.preventDefault();\n      e.stopPropagation();\n      e.nativeEvent.stopImmediatePropagation();\n      submit();\n    };\n\n    return { submit, reset, resetSubmit, onSubmit };\n  }, []);\n\n  /**\n   * 表单相关方法和对象\n   */\n  const formRef: TFormRef = { submit, reset, resetSubmit, form };\n\n  // 暴露提交表单方法\n  useImperativeHandle(ref, () => formRef, []);\n\n  return (\n    <ConfigProvider getPopupContainer={() => box.current || document.body}>\n      <div ref={box} className={boxClassName}>\n        <FormOld className={classNames('dyb-form', className)} onSubmit={onSubmit} {...props}>\n          {children && children(FormItem, formRef)}\n        </FormOld>\n      </div>\n    </ConfigProvider>\n  );\n};\n\nFormComponent = forwardRef(FormComponent);\n\n/**\n * 表单\n */\nexport const Form = (FormOld.create as any)()(FormComponent) as React.ComponentClass<TFormProps>;\n\nexport default Form;\n","import React, { useRef, useReducer, useCallback } from 'react';\nimport { Modal } from 'antd';\nimport { ModalProps } from 'antd/es/modal';\nimport { Form, TFormProps, TFormRef } from './form';\n\nexport type TFormModalProps = ModalProps & {\n  onShow?: () => void; // 显示回调，常用于表单值初始化\n  onHide?: () => void; // 隐藏回调\n  children: [React.ReactNode, TFormProps['children']]; // 弹出按钮，绑定点击事件，和表单 render\n  onSub?: (values: any) => Promise<boolean | undefined>; // 提交表单回调，返回 true 则隐藏弹窗\n  formProps?: TFormProps;\n}\n\n/**\n * 表单弹窗\n */\nexport let FormModal: React.SFC<TFormModalProps> = ({ onShow, onHide, children, onSub, formProps = {}, ...props }) => {\n  const formRef = useRef<TFormRef>(null);\n  const [state, dispatch] = useReducer((state, newState) => ({ ...state, ...newState }), {\n    visible: false,\n    confirmLoading: false,\n  });\n\n  const show = useCallback(() => {\n    dispatch({ visible: true });\n    onShow && onShow();\n  }, []);\n\n  const hide = useCallback(() => {\n    dispatch({ visible: false });\n    onHide && onHide();\n  }, []);\n\n  // 点击确认按钮提交表单\n  const onOk = useCallback(() => {\n    formRef.current && formRef.current.submit();\n  }, [!formRef.current]);\n\n  // 提交表单执行并根据返回值决定是否隐藏弹窗\n  const onSubmit = useCallback(async (values: any) => {\n    const state: any = { confirmLoading: true };\n    dispatch(state);\n    if (onSub) state.visible = !(await onSub(values));\n    state.confirmLoading = false;\n    dispatch(state);\n    formProps.onSub && formProps.onSub(values);\n  }, []);\n\n  return (\n    <>\n      {React.isValidElement(children[0]) ? React.cloneElement(children[0], { onClick: show }) : children[0]}\n      <Modal onCancel={hide} maskClosable={false} destroyOnClose onOk={onOk} {...state} {...props}>\n        <Form {...formProps} onSub={onSubmit} wrappedComponentRef={formRef}>\n          {children[1]}\n        </Form>\n      </Modal>\n    </>\n  );\n};\n\nexport default FormModal;\n","import React from 'react';\nimport { Select as SelectOld } from 'antd';\nimport { SelectProps, OptionProps } from 'antd/es/select';\nimport { toOptions } from './public';\n\ntype TOptionProps = OptionProps & {\n  label: string | JSX.Element; // 选择的内容\n};\n\ntype TProps = SelectProps & {\n  options: TOptionProps[] | (string | number)[] | object;\n  filterKey?: string; // 过滤key\n  pageSize?: number; // 一页多少行\n  paging?: boolean; // 是否分页\n};\n\ntype TState = {\n  max: number;\n  search: string;\n};\n\nconst { Option } = SelectOld;\n\n/**\n * 下拉选择器\n * 追加筛选以及滚动分页，避免一次性同时渲染太多行导致卡顿\n */\nexport class Select extends React.Component<TProps, TState> {\n  pageSize = 0;\n  constructor(props: TProps) {\n    super(props);\n    this.pageSize = props.pageSize || 20;\n    this.state = {\n      max: this.pageSize,\n      search: '',\n    };\n  }\n\n  scroll = (e: React.UIEvent<HTMLDivElement>) => {\n    const { clientHeight, scrollHeight, scrollTop } = e.currentTarget;\n    const { max } = this.state;\n    if (scrollHeight - clientHeight - 1 < scrollTop && Object.keys(this.props.options).length > max) {\n      this.setState({ max: max + this.pageSize });\n    }\n  };\n\n  search = (search: string) => this.setState({ search });\n\n  filterOption = (item: any) => {\n    const value = ('' + item[this.props.filterKey || 'label']).toLowerCase();\n    const text = this.state.search.toLowerCase();\n    return value.includes(text);\n  };\n\n  onDropdownVisibleChange = (open: boolean) => {\n    const { onDropdownVisibleChange } = this.props;\n    onDropdownVisibleChange && onDropdownVisibleChange(open);\n    open || this.setState({ max: this.pageSize });\n  };\n\n  render() {\n    const { options, filterKey, pageSize, paging, onDropdownVisibleChange, ...props } = this.props;\n    const { max, search } = this.state;\n    // 转为选项值并过滤\n    let list = toOptions(options).filter(this.filterOption);\n    // 分页\n    if (paging && list.length > max) {\n      // 当前选中的值会合并追加到列表，避免无法正常展示选中值\n      const selects: any[] = Array.isArray(props.value) ? props.value : [props.value]; // 选中列表\n      // 过滤分页或选中值\n      list = list.filter((i, k) => k < max || selects.includes(i.value));\n    }\n    return (\n      <SelectOld\n        optionLabelProp=\"title\"\n        onPopupScroll={this.scroll}\n        onSearch={this.search}\n        filterOption={() => true}\n        placeholder=\"请选择\"\n        allowClear\n        onDropdownVisibleChange={this.onDropdownVisibleChange}\n        {...props}\n      >\n        {list.map(({ label, title = label, ...i }) => (\n          <Option key={search + i.value} title={'' + title} {...i}>\n            {label}\n          </Option>\n        ))}\n      </SelectOld>\n    );\n  }\n}\n\nexport default Select;\n","import React from 'react';\nimport { Radio as RadioOld } from 'antd';\nimport { RadioGroupProps } from 'antd/es/radio';\nimport { toOptions } from './public';\n\ntype TProps = RadioGroupProps & {\n  isButton?: boolean; // 启用按钮样式\n};\n\n/**\n * 单选框\n */\nexport class Radio extends React.Component<TProps> {\n  Item: any = RadioOld;\n\n  constructor(props: TProps) {\n    super(props);\n    this.Item = props.isButton ? RadioOld.Button : RadioOld;\n  }\n\n  render() {\n    const { Item } = this;\n    const { options, isButton, ...props } = this.props;\n    return (\n      <RadioOld.Group buttonStyle=\"solid\" {...props}>\n        {toOptions(options || []).map(({ label, ...i }) => (\n          <Item key={'' + i.value} {...i}>\n            {label}\n          </Item>\n        ))}\n      </RadioOld.Group>\n    );\n  }\n}\n\nexport default Radio;\n","import React from 'react';\nimport { Checkbox as CheckboxOld } from 'antd';\nimport { CheckboxGroupProps } from 'antd/es/checkbox';\nimport { toOptions } from './public';\n\n/**\n * 多选框\n */\nexport class Checkbox extends React.Component<CheckboxGroupProps> {\n  render() {\n    const { options, ...props } = this.props;\n    return <CheckboxOld.Group options={toOptions(options || [])} {...props} />;\n  }\n}\n\nexport default Checkbox;\n","/**\n * 通用布局\n */\nimport React, { useMemo, useRef, useState, useEffect } from 'react';\nimport { matchPath, useLocation } from 'react-router-dom';\nimport { Box, TBoxProps, Breadcrumb, TBreadcrumbProps, TMenuProps, PageHeader, Table } from '../antd';\nimport { BreadcrumbProps } from 'antd/es/breadcrumb';\nimport { PageHeaderProps } from 'antd/es/page-header';\nimport { TableProps } from 'antd/es/table';\nimport { TNotRequired } from 'types';\nimport classNames from 'classnames';\nimport menuData from 'config/menuData';\nimport { debounce } from 'lodash';\nimport style from './style.module.less';\n\n/**\n * 顶部右边信息\n */\nexport const Header = () => (\n  <>\n    <span>你好管理员！</span>\n    <span className=\"error\">注销</span>\n  </>\n);\n\n/**\n * 自定义页面盒子\n * 添加内边距，从上到下排列，并子元素固定间隔 16px\n */\nexport const PageBox: React.SFC<TBoxProps> = ({ className, ...props }) => (\n  <Box className={classNames(style.pageBox, className)} {...props} />\n);\n\n/**\n * 路由面包屑\n * 自动根据路由和导航配置 config/menuData.ts 生成对应配置写入\n */\nexport const RouterBreadcrumb: React.SFC<BreadcrumbProps> = ({ style, ...props }) => {\n  const location = useLocation();\n\n  /**\n   * 计算得出面包屑配置\n   */\n  const data = useMemo(() => {\n    const getItems = (data: TMenuProps['data']) => {\n      let items: TBreadcrumbProps['data'] = [];\n      data.forEach(({ to, title, child }) => {\n        if (matchPath(location.pathname, { path: to, exact: true })) {\n          items = [{ text: title }];\n        } else if (child) {\n          const items_ = getItems(child);\n          if (items_.length) items = [{ to, text: title }, ...items_];\n        }\n      });\n      return items;\n    };\n\n    return getItems(menuData);\n  }, [location.pathname]);\n\n  return <Breadcrumb data={data} style={{ marginBottom: 16, ...style }} {...props} />;\n};\n\ntype TRouterTitleProps = React.HTMLProps<HTMLSpanElement> & {\n  before?: string; // 之前\n  after?: string; // 之后\n};\n\n/**\n * 路由标题\n * 自动根据路由和导航配置 config/menuData.ts 生成对应标题\n */\nexport const RouterTitle: React.SFC<TRouterTitleProps> = ({ before, after, ...props }) => {\n  const location = useLocation();\n\n  /**\n   * 计算得出页面标题\n   */\n  const title = useMemo(() => {\n    const getItems = (data: TMenuProps['data']) => {\n      let items = '';\n      data.forEach(({ to, title, child }) => {\n        if (matchPath(location.pathname, { path: to, exact: true })) {\n          items = title;\n        } else if (!items && child) {\n          items = getItems(child);\n        }\n      });\n      return items;\n    };\n\n    return getItems(menuData);\n  }, [location.pathname]);\n\n  return (\n    <span {...props}>\n      {before}\n      {title}\n      {after}\n    </span>\n  );\n};\n\n/**\n * 路由页头\n * 自动根据路由和导航配置 config/menuData.ts 生成对应标题\n */\nexport const RouterPageHeader: React.SFC<TNotRequired<PageHeaderProps>> = props => (\n  <PageHeader title={<RouterTitle />} {...props} />\n);\n\n/**\n * 自动获取 key 的更新时机\n */\nconst useAutoResize = () => {\n  const box = useRef<HTMLDivElement>(null);\n  const [key, setKey] = useState(0);\n\n  useEffect(() => {\n    const resize = debounce(() => setKey(+new Date()), 1000);\n    window.addEventListener('resize', resize);\n    return () => {\n      window.removeEventListener('resize', resize);\n    };\n  }, []);\n\n  return { box, key };\n};\n\n/**\n * 自动计算高度的盒子\n */\nexport let AutoBox: React.SFC<React.HTMLProps<HTMLDivElement>> = ({ className, style: styles, ...props }) => {\n  const { box, key } = useAutoResize();\n\n  const maxHeight = useMemo(() => {\n    if (box.current) {\n      const top = box.current.offsetTop + 64;\n      const bottom = 16; // 边距\n      const maxHeight = window.innerHeight - top - bottom;\n\n      return maxHeight;\n    }\n    return undefined;\n  }, [box.current && box.current.offsetTop, key]);\n\n  return <div ref={box} className={classNames(style.autoBox, className)} style={{ maxHeight, ...styles }} {...props} />;\n};\n\n/**\n * 自动计算高度的表格\n */\nexport const AutoTable: React.SFC<TableProps<any>> = ({ scroll, ...props }) => {\n  const { box, key } = useAutoResize();\n\n  const { height, y } = useMemo(() => {\n    if (box.current) {\n      const thead = box.current.getElementsByTagName('thead')[0];\n      const pagination = box.current.nextElementSibling;\n\n      const top = box.current.offsetTop + 64;\n      const bottom = (pagination ? pagination.clientHeight : 0) + 16 + 16; // 分页栏高度 + 边距 + 边距\n      const height = window.innerHeight - top - bottom;\n\n      return {\n        height,\n        y: height - thead.clientHeight,\n      };\n    }\n    return {\n      height: undefined,\n      y: true,\n    };\n  }, [box.current && box.current.offsetTop, key]);\n\n  return (\n    <div ref={box} style={{ height, marginBottom: 16, marginTop: 16 }}>\n      <Table pagination={false} scroll={{ y, x: true, ...scroll }} {...props} />\n    </div>\n  );\n};\n\n/**\n * 创建页面元素\n * 自定义页面盒子 PageBox + 自动路由面包屑 RouterBreadcrumb\n */\nexport const Page: React.SFC<TBoxProps> = ({ children, ...props }) => (\n  <PageBox {...props}>\n    <RouterBreadcrumb />\n    {children}\n  </PageBox>\n);\n","/**\n * 表格页\n */\nimport React, { useReducer, useCallback } from 'react';\nimport { Button, Divider } from 'antd';\nimport { ColumnProps } from 'antd/es/table';\nimport { Form, TFormProps } from '../antd';\nimport { pick } from 'lodash';\n\n/**\n * 表格页 Hooks\n * 自定义 Hooks，内置表格页常用数据\n * pageKey:        string  页面key，用于储存页面数据\n * defaultSearch?: object  搜索表单默认数据\n *\n * 默认 state\n *  search           object   搜索值\n *  current          number   当前页面\n *  pageSize         number   每页展示多少条数据\n *  total            number   页面总数\n *  dataSource       any[]    表格数据\n *  selectedRowKeys  string[] 表格数据\n *  loading          boolean  加载状态\n */\nexport const useTable = (pageKey: string, defaultSearch?: object) => {\n  const { getKey, setKey } = window.store.view;\n\n  const [state, dispatch] = useReducer(\n    (state, newState) => {\n      const res = { ...state, ...newState };\n      // 页面数据变动回调\n      setKey(pageKey, pick(res, ['search', 'current', 'pageSize']));\n      return res;\n    },\n    {\n      // 写入默认搜索信息\n      search: defaultSearch || {},\n      current: 1,\n      pageSize: 10,\n      // 写入页面数据\n      ...getKey(pageKey),\n      total: 0, // 页面总数\n      dataSource: [], // 表格数据\n      selectedRowKeys: [], // 选中行\n      loading: false, // 加载中\n    }\n  );\n\n  const { search, current, pageSize, total } = state;\n\n  /**\n   * use 监听条件，数组的任意一个值发生变动时，执行对应更新\n   */\n  const use = [current, pageSize, JSON.stringify(search)];\n\n  /**\n   * 表单提交\n   */\n  const onSub = useCallback((search: any) => dispatch({ search, current: 1 }), []);\n\n  /**\n   * 搜索表单配置\n   */\n  const formSearchProps = { showButton: true, initialValues: defaultSearch, defaultFieldsValue: search, onSub };\n\n  /**\n   * 分页变动\n   */\n  const onChange = useCallback((current: number, pageSize?: number) => dispatch({ current, pageSize }), []);\n\n  /**\n   * 分页配置\n   */\n  const paginationProps = { current, pageSize, total, onChange };\n\n  /**\n   * 编辑加载状态\n   */\n  const setLoading: (loading: boolean | string) => void = useCallback((loading = true) => dispatch({ loading }), []);\n\n  return { state, use, dispatch, formSearchProps, paginationProps, setLoading };\n};\n\ntype TFormSearchProps = TFormProps & {\n  showButton?: boolean; // 展示默认按钮\n  refresh?: () => void; // 刷新按钮回调\n};\n\n/**\n * 搜索栏表单\n */\nexport const FormSearch: React.SFC<TFormSearchProps> = ({ children, showButton, refresh, ...props }) => (\n  <Form layout=\"inline\" deleteNullValue {...props}>\n    {(Item, formRef) => (\n      <>\n        {children && children(Item, formRef)}\n        {showButton && (\n          <Item label=\"\" fill htmlType=\"submit\">\n            <Button type=\"primary\">搜索</Button>\n            <Button onClick={formRef.resetSubmit}>重置</Button>\n            {refresh && <Button onClick={refresh}>刷新</Button>}\n          </Item>\n        )}\n      </>\n    )}\n  </Form>\n);\n\n/**\n * 计算所有列之和，并追加宽度\n */\nexport const toScrollX = (columns: ColumnProps<any>[], additional = 0) =>\n  columns.reduce((v, i) => {\n    let sum = (+i.width! || 0) + v;\n    if (i.children) sum += toScrollX(i.children);\n    return sum;\n  }, 0) + additional;\n\n/**\n * 动作组件，自动添加分割线\n */\nexport const Action: React.SFC = ({ children }) => (\n  <>\n    {React.Children.map(children, (child, index) => (\n      <>\n        {index > 0 && <Divider type=\"vertical\" />}\n        {child}\n      </>\n    ))}\n  </>\n);\n","/**\n * 表单页\n */\nimport React, { useReducer, useCallback } from 'react';\nimport { Button } from 'antd';\nimport { Form, TFormProps, FormModal, TFormModalProps, InputIntercept } from '../antd';\nimport { AutoBox } from './layout';\nimport { TInputNotRequired } from 'types';\nimport moment from 'moment';\n\ntype TFormPageProps = TFormProps & {\n  showButton?: boolean; // 展示默认按钮\n};\n\n/**\n * 表单页面\n */\nexport const FormPage: React.SFC<TFormPageProps> = ({ children, showButton = true, ...props }) => (\n  <AutoBox>\n    <Form\n      defaultItemProps={{\n        width: 0.5,\n        ratio: '6:16',\n      }}\n      {...props}\n    >\n      {(Item, formRef) => (\n        <>\n          {children && children(Item, formRef)}\n          {showButton && (\n            <Item fill htmlType=\"submit\">\n              <Button type=\"primary\">搜索</Button>\n              <Button onClick={formRef.reset}>重置</Button>\n            </Item>\n          )}\n        </>\n      )}\n    </Form>\n  </AutoBox>\n);\n\n/**\n * 表单弹窗\n */\nexport const FormModalPage: React.SFC<TFormModalProps> = ({ formProps = {}, ...props }) => (\n  <FormModal\n    formProps={{\n      ...formProps,\n      defaultItemProps: {\n        width: 0.5,\n        ratio: '6:16',\n        ...formProps.defaultItemProps,\n      },\n    }}\n    width={600}\n    {...props}\n  />\n);\n\n/**\n * 表单信息页 Hooks\n * 自定义 Hooks，内置表格页常用数据\n * defaultData: any    表单默认数据\n *\n * 默认 state\n *  data             object   表单数据\n *  loading          boolean  加载状态\n */\nexport const useInfo = (defaultData: any) => {\n  const [state, dispatch] = useReducer((state, newState) => ({ ...state, ...newState }), {\n    data: defaultData,\n    loading: false,\n  });\n\n  /**\n   * 编辑表单数据\n   */\n  const setData = useCallback((data: any) => dispatch({ data }), []);\n\n  /**\n   * 编辑加载状态\n   */\n  const setLoading: (loading: boolean | string) => void = useCallback((loading = true) => dispatch({ loading }), []);\n\n  return { state, setData, setLoading };\n};\n\ntype TMomentInterceptProps = TInputNotRequired & {\n  format?: string;\n  children: JSX.Element;\n};\n\n/**\n * 时间输入拦截器\n */\nexport const MomentIntercept: React.SFC<TMomentInterceptProps> = ({ format = 'YYYY-MM-DD HH:mm:ss', ...props }) => {\n  /**\n   * 编辑拦截\n   */\n  const onIntercept = useCallback(\n    (onChange: (value: any) => void) => (value: any) => {\n      onChange && onChange(moment.isMoment(value) ? value.format(format) : value);\n    },\n    []\n  );\n\n  /**\n   * 输入转换\n   */\n  const onConvert = useCallback((value: string) => value && moment(value), []);\n\n  return <InputIntercept onIntercept={onIntercept} onConvert={onConvert} {...props} />;\n};\n","export * from './lazy';\nexport * from './antd'; // antd 二次封装\nexport * from './custom'; // 自定义组件，针对项目创建的组件","// extracted by mini-css-extract-plugin\nmodule.exports = {\"pageBox\":\"src-components-custom-style-module__pageBox--1se1c\",\"autoBox\":\"src-components-custom-style-module__autoBox--3GMS-\"};","import React, { useCallback, useEffect } from 'react';\nimport { inject, observer } from 'mobx-react';\nimport { message } from 'antd';\nimport { useInfo, Page, RouterPageHeader, FormPage, Select, Radio } from 'components';\nimport { TPage } from 'types';\nimport { options } from './config';\nimport { admin } from 'api';\n\nconst InfoPage: React.SFC<TPage<{ id?: string }>> = ({ match, history }) => {\n  const { id } = match.params;\n  const { state, setData, setLoading } = useInfo({ state: 0 });\n  const { data, loading } = state;\n\n  /**\n   * 根据 id 是否存在判断是否编辑页面，编辑页面需要执行请求数据\n   */\n  useEffect(() => {\n    if (!id) return;\n    const getData = async () => {\n      setLoading('请求数据');\n      const res = await admin.account.details(id);\n      res.ok && setData(res.data);\n      setLoading(false);\n    };\n    getData();\n  }, []);\n\n  /**\n   * 提交数据\n   */\n  const onSub = useCallback(async (values: any) => {\n    setLoading('提交数据');\n    // --------------------------- 请求前处理提交数据 --------------------------- //\n    if (id) values.id = id;\n    // values\n    // --------------------------- 请求前处理提交数据 --------------------------- //\n    const res = await admin.account[id ? 'edit' : 'add'](values);\n    setLoading(false);\n    if (res.ok) {\n      message.success(`${id ? '编辑' : '添加'}成功`);\n      history.goBack();\n    }\n  }, []);\n\n  return (\n    <Page loading={loading}>\n      <RouterPageHeader onBack={history.goBack} />\n      <FormPage initialValues={data} onSub={onSub}>\n        {Item => (\n          <>\n            <Item label=\"用户名\" name=\"username\" placeholder rules />\n            <Item label=\"昵称\" name=\"nickname\" placeholder rules />\n            <Item label=\"角色\" name=\"role\" placeholder rules select fill>\n              <Select options={options.role} />\n            </Item>\n            {!id || (\n              <>\n                <Item label=\"注册IP\">{data.regip}</Item>\n                <Item label=\"登陆IP\">{data.loginip}</Item>\n                <Item label=\"注册时间\">{data.regtime}</Item>\n                <Item label=\"登陆时间\">{data.logintime}</Item>\n              </>\n            )}\n            <Item label=\"状态\" name=\"state\" fill>\n              <Radio options={options.state} isButton />\n            </Item>\n          </>\n        )}\n      </FormPage>\n    </Page>\n  );\n};\n\nexport default inject('store')(observer(InfoPage));\n","var map = {\n\t\"./\": 112,\n\t\"./admin/account\": 120,\n\t\"./admin/account/\": 120,\n\t\"./admin/account/config\": 65,\n\t\"./admin/account/config.tsx\": 65,\n\t\"./admin/account/index\": 120,\n\t\"./admin/account/index.tsx\": 120,\n\t\"./admin/account/info\": 257,\n\t\"./admin/account/info.tsx\": 257,\n\t\"./admin/account/modal\": 101,\n\t\"./admin/account/modal.tsx\": 101,\n\t\"./admin/role\": 137,\n\t\"./admin/role/\": 137,\n\t\"./admin/role/index\": 137,\n\t\"./admin/role/index.tsx\": 137,\n\t\"./home\": 138,\n\t\"./home/\": 138,\n\t\"./home/index\": 138,\n\t\"./home/index.tsx\": 138,\n\t\"./index\": 112,\n\t\"./index.tsx\": 112,\n\t\"./login\": 100,\n\t\"./login/\": 100,\n\t\"./login/index\": 100,\n\t\"./login/index.tsx\": 100,\n\t\"./login/style.module.less\": 156,\n\t\"./user\": 139,\n\t\"./user/\": 139,\n\t\"./user/index\": 139,\n\t\"./user/index.jsx\": 139\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 289;","import { observable, action, toJS } from 'mobx';\nimport Store from './';\n\n/**\n * 视图相关管理\n */\nexport default class View {\n  root: Store;\n\n  constructor(root: Store) {\n    this.root = root;\n  }\n\n  /**\n   * 页面标题\n   */\n  @observable title: string = window.document.title;\n  @action setTitle = (title: string) => {\n    window.document.title = this.title = title;\n  };\n\n  /**\n   * 视图 key 列表\n   */\n  @observable keys: any = {};\n  @action setKey = (key: string, value: any) => {\n    this.keys[key] = value;\n  };\n  @action getKey = (key?: string) => {\n    return toJS(key ? this.keys[key] : this.keys);\n  };\n\n  /**\n   * tabbarkey\n   */\n  @observable tab: number = 0;\n  @action setTab = (tab: number) => {\n    this.tab = tab;\n  };\n}\n","import { observable, action, when } from 'mobx';\nimport Store from './';\n\n/**\n * 用户管理\n */\nexport default class User {\n  root: Store;\n\n  constructor(root: Store) {\n    this.root = root;\n  }\n\n  /**\n   * 是否登录\n   */\n  @observable isLogin: boolean = false;\n\n  /**\n   * 登陆状态监听\n   */\n  @action onLogin = (bind: boolean | (() => void)) => {\n    if (typeof bind === 'boolean') {\n      this.isLogin = bind;\n    } else {\n      when(() => this.isLogin, bind);\n    }\n  };\n}\n","import { configure } from 'mobx';\nimport View from './view';\nimport User from './user';\n\nconfigure({\n  enforceActions: 'observed',\n});\n\n/**\n * 主状态\n */\nexport default class Store {\n  /**\n   * 视图相关管理\n   */\n  view = new View(this);\n\n  /**\n   * 用户管理\n   */\n  user = new User(this);\n}","import React from 'react';\nimport { Provider } from 'mobx-react';\nimport { HashRouter as Router } from 'react-router-dom';\nimport Store from 'store';\nimport Pages from 'pages';\nimport 'normalize.css';\nimport 'App.less';\n\n/**\n * 初始化并缓存全局状态\n * 针对热更新友好，刷新文件时不会清空状态\n */\nwindow.store = window.store || new Store();\n\n/**\n * 状态初始化设置\n */\nwindow.store.view.setTitle('后台管理系统'); // 设置默认标题，可在页面内单独设置\n// window.store.user.onLogin(true); // 模拟登录，修改状态为已登录，并执行使用 onLogin(() => {}) 注册的方法\n\n/**\n * 状态以及路由注入\n */\nexport default () => (\n  <Provider store={window.store}>\n    <Router>\n      <Pages />\n    </Router>\n  </Provider>\n);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\n(async () => {\n  let RenderApp = App;\n  // 开发环境\n  if (process.env.NODE_ENV === 'development') {\n    // 添加热更新\n    const { hot } = await import('react-hot-loader/root');\n    RenderApp = hot(App);\n  }\n  ReactDOM.render(<RenderApp />, document.getElementById('root'));\n})();\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { ColumnProps, TableProps } from 'antd/es/table';\nimport { Action, toScrollX } from 'components';\nimport Modal from './modal';\n\n/**\n * 生成表格配置数据\n */\nexport const createTableProps = () => {\n  const columns: ColumnProps<any>[] = [\n    {\n      title: '用户名',\n      dataIndex: 'username',\n      width: 120,\n    },\n    {\n      title: '昵称',\n      dataIndex: 'nickname',\n    },\n    {\n      title: '角色',\n      dataIndex: 'role',\n      render: v => options.role[v],\n      width: 120,\n    },\n    {\n      title: '注册IP',\n      dataIndex: 'regip',\n      width: 140,\n    },\n    {\n      title: '登陆IP',\n      dataIndex: 'loginip',\n      width: 140,\n    },\n    {\n      title: '注册时间',\n      dataIndex: 'regtime',\n      width: 180,\n    },\n    {\n      title: '登陆时间',\n      dataIndex: 'logintime',\n      width: 180,\n    },\n    {\n      title: '状态',\n      dataIndex: 'state',\n      width: 75,\n      fixed: 'right',\n      render: v => options.state[v],\n    },\n    {\n      title: '操作',\n      key: 'action',\n      width: 160,\n      fixed: 'right',\n      render: (data: any) => (\n        <Action>\n          <Modal data={data}>\n            <span className=\"edit pointer\">弹窗编辑</span>\n          </Modal>\n          <Link to={`/admin/account/info/${data.id}`} className=\"edit\">\n            编辑\n          </Link>\n        </Action>\n      ),\n    },\n  ];\n  return {\n    columns,\n    scroll: { x: toScrollX(columns, 200) },\n  } as TableProps<any>;\n};\n\nexport const options = {\n  role: ['超级管理员', '编辑员'],\n  state: ['未审核', '已审核', '冻结'],\n};\n","import { TRouters } from './routers';\nimport { TMenuProps } from 'components';\n\n/**\n * 左侧导航数据和标题数据\n * 除了菜单导航数据外，path 是相对 /src/pages 引用文件的路径\n */\nexport const menuData: TMenuProps['data'] = [\n  {\n    title: '管理员',\n    icon: 'user',\n    child: [\n      {\n        to: '/admin/account',\n        title: '管理员账号',\n        child: [\n          {\n            to: '/admin/account/info',\n            title: '添加管理员账号',\n            hidden: true,\n          },\n          {\n            to: '/admin/account/info/:id',\n            title: '编辑管理员账号',\n            hidden: true,\n          },\n        ],\n      },\n      {\n        to: '/admin/role',\n        title: '管理员角色',\n      },\n    ],\n  },\n  {\n    title: '用户中心',\n    icon: 'team',\n    child: [\n      {\n        title: '用户账号',\n      },\n      {\n        title: '用户角色',\n      },\n    ],\n  },\n  {\n    title: '栏目管理',\n    icon: 'bars',\n    child: [\n      {\n        title: '栏目分类',\n      },\n      {\n        title: '栏目列表',\n      },\n    ],\n  },\n  {\n    title: '文件管理',\n    icon: 'folder',\n    child: [\n      {\n        title: '图片',\n      },\n      {\n        title: '视频',\n      },\n      {\n        title: '音频',\n      },\n      {\n        title: '其他',\n      },\n    ],\n  },\n  {\n    title: '系统设置',\n    icon: 'setting',\n    child: [\n      {\n        title: '站点配置',\n      },\n      {\n        title: '文件配置',\n      },\n      {\n        title: '自定义配置',\n      },\n      {\n        title: '系统日志',\n      },\n    ],\n  },\n];\n\n/**\n * 获取导航数据中路由信息\n */\nexport const getMenuRouters = (menu = menuData) => {\n  let routers: TRouters = {};\n  menu.forEach(i => {\n    if (i.to) routers[i.to] = i.path || i.to.slice(1).split('/:')[0];\n    if (i.child) routers = { ...routers, ...getMenuRouters(i.child) };\n  });\n  return routers;\n};\n\nexport default menuData;\n","import qs from 'qs';\n\nconst { search, protocol } = window.location;\n\n/**\n * 是否生产环境\n */\nexport const isProduction = protocol === 'https:';\n\n/**\n * 链接参数\n */\nexport const params = qs.parse(search.slice(1));\n\n/**\n * 成功状态码\n */\nexport const successCode = [0, 200, '0000', 1000, 1001, 1002, 1003, 1004, 1005, 2000];\n\n/**\n * 请求配置\n */\nexport const config = {\n  host: 'https://www.test.com', // 生产地址\n  apiPath: '/api', // API地址基础目录\n};\n\n// 非生产环境下，使用测试地址，并可以手动指定 host\nif (!isProduction) {\n  config.host = params.host || 'http://www.test.com'; // 测试地址\n}\n","import FetchReques, { log } from '@dyb881/fetch-request';\nimport { config, successCode } from 'config/request';\nimport { message } from 'antd';\n\n/**\n * 请求模块初始化并输出请求方法以及参数\n */\nexport const { baseURL, get, post, put, patch, del, upload } = new FetchReques({\n  ...config,\n  interceptorsRequest: config => {\n    log.request(config);\n    return config;\n  },\n  interceptorsResponse: (res, config) => {\n    if (!res.errorText && config.responseType === 'json' && !successCode.includes(res.code)) {\n      res.error = res.code;\n      res.errorText = res.msg || res.message || '请求异常';\n    }\n    res.ok = !res.errorText; // 请求结果状态 成功/失败\n    res.ok || message.error(res.errorText);\n    log.response(res, config, res.ok);\n    return res;\n  },\n});\n","import { get, post } from './request';\n\n/**\n * 对应模块下有多个接口\n * 当模块太多的时候可以分类拓展出多个文件并从该文件导出\n */\nexport const admin = {\n  account: {\n    getList: (data: any) => get('/admin/account', data, '获取管理员账号列表'),\n    details: (id: string) => get('/admin/account/details', { id }, '获取管理员账号详情'),\n    edit: (data: any) => post('/admin/account/edit', data, '编辑管理员账号'),\n    add: (data: any) => post('/admin/account/add', data, '添加管理员账号'),\n  },\n};\n"],"sourceRoot":""}