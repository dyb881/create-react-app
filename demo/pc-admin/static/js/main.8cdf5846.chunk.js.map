{"version":3,"sources":["pages/noLogin/login/index.tsx","common/routers.tsx","configs/routers.ts","pages/admin/account/index.tsx","pages/admin/role/index.tsx","pages/admin/account/info_modal.tsx","stores/view.ts","stores/user.ts","common/stores.tsx","stores/index.ts","pages/noLogin/login/style.module.less","images/logo.ico","components/content/style.module.less","common/request.ts","pages/admin/account/info.tsx","common/antd/form/form.tsx","common/antd/form/form_item.tsx","common/antd/input.tsx","common/antd/select.tsx","common/antd/radio.tsx","common/antd/menu.tsx","common/antd/dropdown.tsx","common/antd/breadcrumb.tsx","common/antd/modal.tsx","common/antd/index.ts","components/content/pageForm/style.module.less","components/layout/menu_nav.tsx","components/layout/header.tsx","components/layout/sider.tsx","components/layout/layout.tsx","components/content/pageTable/components.tsx","components/content/router_component.tsx","components/content/page.tsx","components/content/pageTable/virtual_table.tsx","components/content/pageTable/page_table.tsx","components/content/pageTable/use_table.ts","components/content/pageForm/components.tsx","components/content/pageForm/page_form.tsx","components/content/pageForm/use_info.ts","components/index.ts","common/index.ts","configs/public.ts","configs/request.ts","configs/menuNavData.tsx","configs/index.ts","components/layout/style.module.less","pages sync /^/.//.*$","images/login_bg.jpg","App.tsx","serviceWorker.ts","index.tsx","pages/admin/account/config.tsx","common/tool.ts","apis/index.ts","components/content/pageTable/style.module.less","pages/noLogin/index.tsx"],"names":["combine","stores","view","user","useState","loading","setLoading","onFinish","useCallback","values","a","console","log","Promise","r","setTimeout","success","login","useEffect","setTitle","defaultTitle","className","src","require","mode","style","formBox","alt","form","name","prefix","size","placeholder","required","htmlType","type","block","routers","listen","routersProps","routersConfig","forEach","to","path","component","default","match","pathname","router","matchPath","exact","createMatch","history","createHashHistory","createBrowserHistory","location","Router","props","Pages","createRouters","routersOptions","getMenuNavDataRouters","menuNavData","title","useTable","current","states","pageSize","search","admin","account","getList","pageNum","res","ok","setStates","dataSource","data","list","total","pageTableProps","formSearchProps","useInfo","modalForm","add","edit","columns","useMemo","createColumns","widthAddition","extra","onClick","label","useInfoModal","defaultData","state","isEdit","id","hide","formModalProps","funs","before","select","options","role","regip","loginip","regtime","logintime","View","tableDatas","setTableData","key","value","getTableData","this","resize","window","addEventListener","action","w","innerWidth","isMobile","collapsed","observable","jsonParse","localStorage","componentSize","undefined","theme","hiddenMenu","hiddenHeader","menuIconTop","headerIconRight","pageConfig","JSON","stringify","document","User","onLogin","logout","modalConfirm","okButtonProps","danger","onOk","bind","isLogin","when","configure","enforceActions","computedRequiresReaction","Component","Observer","observer","combinePage","module","exports","interceptorsRequest","requestConfig","interceptorsResponse","config","FetchReques","request","errorText","responseType","code","statusCodeKeys","reduce","successCodes","includes","error","messageKeys","msg","response","get","baseURL","post","put","patch","del","upload","params","getData","details","setData","goBack","pageFormProps","Form","layout","wrapperCol","labelCol","formProps","Object","assign","useForm","submit","reset","resetFields","resetSubmit","FormItem","hidden","validator","children","rules","valuePropName","formItemProps","text","push","message","_rule","space","test","reject","Item","React","isValidElement","cloneElement","Input","maxLength","autoComplete","Password","InputNumber","step","precision","selectFilterOption","input","option","toLowerCase","Select","selectOption","toOptions","map","i","Option","allowClear","filterOption","Radio","radioGroupOptions","Group","RadioButton","radioButtons","k","Button","Menu","onClickItem","inlineCollapsed","openKeys","onOpenChange","menuTree","computeProps","param","item","icon","menuItemTitle","length","SubMenu","data-info","Dropdown","selectedKeys","menuProps","overlay","Breadcrumb","breadcrumbItems","itemProps","funcProps","confirm","ExclamationCircleOutlined","MenuNav","reload","useHistory","useLocation","useStates","menuNavDataHidden","selectedKey","getOpenKeys","isSelect","filter","slice","split","Header","showHeader","setShowHeader","visible","setVisible","setPageConfig","onShow","onClose","onShowHeader","onValuesChange","changeValue","keys","classNames","header","left","logo","MenuSwitch","UserOutlined","userName","placement","Fullscreen","SettingOutlined","initialValues","buttonStyle","componentSizeOptions","themeOptions","min","right","MobileOutlined","dark","light","Interval","interval","siderOnChange","MenuUnfoldOutlined","MenuFoldOutlined","forwardRef","ref","getElement","documentElement","isFullscreen","setIsFullscreen","s","screenfull","isEnabled","exit","content","FullscreenExitOutlined","FullscreenOutlined","Sider","isCollapsed","sider","menuIcon","top","moment","locale","timeout","Content","LayoutBox","setKey","body","setAttribute","zh_CN","RouterTitle","after","getMenuNavDataTitle","menuNavDatatitle","RouterBreadcrumb","datas","getMenuNavDatas","menuNavDatas","childrenMenuNavDatas","RouterPageHeader","onBack","PageBox","configProviderProps","box","useRef","getPopupContainer","page","target","spinning","tip","Page","FormMobile","FormItemMobile","ButtonMobile","shape","Img","loadedTip","reloadTip","ReloadOutlined","VirtualTable","tableWidth","gridRef","scroll","x","y","resetAfterIndices","rowIndex","columnIndex","shouldForceUpdate","mergedColumns","laveWidth","width","Math","floor","fixed","column","scale","obj","defineProperty","set","scrollLeft","scrollTo","connectObject","rowSelection","components","rawData","onScroll","height","rowCount","columnCount","rowHeight","rowHeights","columnWidth","index","dataIndex","render","padding","columnPadding","styles","virtualColumn","large","middle","small","FormSearch","buttons","formRef","useImperativeHandle","formSearch","SearchOutlined","UndoOutlined","TableMobile","clearTimeout","firstElementChild","offsetTop","nextElementSibling","clientHeight","innerHeight","getElementsByTagName","thead","resizeDebounce","removeEventListener","toScrollX","tableProps","rowKey","pagination","PaginationMobile","onChange","simple","showQuickJumper","showSizeChanger","pageSizeOptions","showTotal","onShowSizeChange","ColumnsSetting","isAll","clear","columnsSetting","checked","indeterminate","indexOf","splice","trigger","Action","Children","child","v","sum","PageTable","paginationProps","jsonStringify","columnsSettingProps","columnsHides","useColumnsSetting","PlusOutlined","marginLeft","defaultStates","tableDataKey","selectedRowKeys","setFieldsValue","autorun","useList","paginationOnChange","rowSelectionOnChange","FormLayout","maxWidth","cols","formLayout","span","FormModal","onCancel","confirmLoading","modalProps","forceRender","maskClosable","okText","SaveOutlined","PageForm","offset","onFinishFailed","errorInfo","scrollToField","errorFields","isProduction","protocol","qs","parse","host","apiPath","_config","TeamOutlined","UnorderedListOutlined","FolderFilled","webpackContext","req","webpackContextResolve","__webpack_require__","o","e","Error","resolve","process","Boolean","hostname","ReactDOM","getElementById","navigator","serviceWorker","ready","then","registration","unregister","renders","status","isArray","Array","useReducer","newStates"],"mappings":"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","file":"static/js/main.8cdf5846.chunk.js","sourcesContent":["import React, { useState, useEffect, useCallback } from 'react';\nimport { Button, message } from 'antd';\nimport { UserOutlined, LockOutlined } from '@ant-design/icons';\nimport { Form, FormItem, Password, combine } from 'common';\nimport { Img } from 'components';\nimport { defaultTitle } from 'configs';\nimport style from './style.module.less';\n\nexport default combine(({ stores }) => {\n  const { view, user } = stores;\n  const [loading, setLoading] = useState<string | boolean>(false);\n\n  /**\n   * 提交数据\n   */\n  const onFinish = useCallback(async (values: any) => {\n    setLoading('正在登录');\n    // --------------------------- 请求前处理提交数据 --------------------------- //\n    console.log(values);\n    // --------------------------- 请求前处理提交数据 --------------------------- //\n    await new Promise(r => setTimeout(r, 1000));\n    setLoading(false);\n    message.success('登录成功');\n    user.login();\n  }, []);\n\n  useEffect(() => {\n    view.setTitle(`登录 - ${defaultTitle}`);\n  }, []);\n\n  return (\n    <div className=\"fill\">\n      <Img src={require('images/login_bg.jpg')} mode={['aspectFill', 'center']} className=\"fill\" />\n      <div className={`column-center ${style.formBox}`}>\n        <img src={require('images/logo.ico')} alt=\"\" />\n        <p>{defaultTitle}</p>\n        <Form className={style.form} onFinish={onFinish}>\n          <FormItem name=\"username\" prefix={<UserOutlined />} size=\"large\" placeholder=\"请输入用户名\" required />\n          <FormItem name=\"password\" prefix={<LockOutlined />} size=\"large\" placeholder=\"请输入密码\" required>\n            <Password />\n          </FormItem>\n          <Button htmlType=\"submit\" type=\"primary\" block size=\"large\" loading={!!loading}>\n            {loading || '登录'}\n          </Button>\n        </Form>\n      </div>\n    </div>\n  );\n});\n","import React from 'react';\nimport { matchPath, HashRouter, HashRouterProps, BrowserRouter, BrowserRouterProps } from 'react-router-dom';\nimport { createHashHistory, createBrowserHistory } from 'history';\nimport { routers, routersOptions } from 'configs/routers';\nimport Routers from '@dyb881/router';\nimport '@dyb881/router/lib/style.css';\n\n/**\n * 单个路由属性\n */\nexport type TRouter = {\n  to: string; // 路由地址\n  path?: string; // 绑定组件路径，默认为 /src/pages 下的文件或文件夹\n  component?: React.ComponentType<any>; // 绑定组件，优先度低于 path\n  [key: string]: any;\n};\n\n/**\n * 路由配置数组\n */\nexport type TRouters = TRouter[];\n\n/**\n * 路由选项\n */\nexport type TRoutersOptions = {\n  app?: boolean; // 是否打包成APP，既启用app模拟跳转\n  transition?: boolean; // 开启跳转动画\n  type: 'hash' | 'browser'; // 路由类型\n  listen?: (router: TRouter) => void; // 路由监听\n};\n\n/**\n * 匹配路由响应监听\n */\nconst createMatch = (routers: TRouters) => (pathname: string, listen: TRoutersOptions['listen']) => {\n  if(!listen) return;\n\n  for (const router of routers) {\n    if (matchPath(pathname, { path: router.to, exact: true })) {\n      // 匹配并响应对应路由配置\n      listen(router);\n      break;\n    }\n  }\n};\n\n/**\n * 路由配置生成组件配置\n */\nconst createRouters = (routers: TRouters, { type, listen, ...routersProps }: TRoutersOptions) => {\n  // 路由组件配置\n  const routersConfig: { [key: string]: React.ComponentType<any> } = {};\n\n  // 引用页面并写入路由\n  routers.forEach(({ to, path, component }) => {\n    if (path) routersConfig[to] = require('pages/' + path).default;\n    else if (component) routersConfig[to] = component;\n  });\n\n  // 创建比较方法\n  const match = createMatch(routers);\n  // 创建路由\n  const history = type === 'hash' ? createHashHistory() : createBrowserHistory();\n\n  // 初次匹配\n  match(history.location.pathname, listen);\n\n  // 监听地址变动\n  history.listen(({ pathname }) => {\n    match(pathname, listen);\n  });\n\n  /**\n   * 路由注入\n   */\n  const Router: React.FC<HashRouterProps & BrowserRouterProps> = props =>\n    type === 'hash' ? <HashRouter {...props} /> : <BrowserRouter {...props} />;\n\n  /**\n   * 路由页面集合\n   */\n  const Pages: React.FC = () => <Routers routers={routersConfig} {...routersProps} />;\n\n  return { Router, Pages };\n};\n\n/**\n * 路由配置生成\n */\nexport const { Router, Pages } = createRouters(routers, routersOptions);\n","import { TRouters, TRoutersOptions, stores } from 'common';\nimport { getMenuNavDataRouters } from 'components';\nimport { menuNavData } from 'configs';\n\n/**\n * 默认标题\n */\nexport const defaultTitle = 'RA Admin';\n\n/**\n * 路由地址配置\n * 绑定组件路径 path，默认为 /src/pages 下的文件或文件夹\n */\nexport const routers: TRouters = [...getMenuNavDataRouters(menuNavData)];\n\n/**\n * 路由选项配置\n */\nexport const routersOptions: TRoutersOptions = {\n  type: 'hash',\n  listen: ({ title }) => {\n    stores.view.setTitle(title ? `${title} - ${defaultTitle}` : defaultTitle);\n  },\n};\n","import React, { useMemo } from 'react';\nimport { Button } from 'antd';\nimport { FormItem } from 'common';\nimport { useTable, PageTable, FormSearch } from 'components';\nimport { admin } from 'apis';\nimport { createColumns } from './config';\nimport { useInfo } from './info_modal';\n\nexport default () => {\n  const { states, setStates, setLoading, pageTableProps, formSearchProps } = useTable(async () => {\n    setLoading('请求列表');\n    const { current, pageSize, search } = states;\n    // --------------------------- 请求前处理搜索值 --------------------------- //\n    // search 建议展开避免副作用\n    // --------------------------- 请求前处理搜索值 --------------------------- //\n    const res = await admin.account.getList({ pageNum: current, pageSize, ...search });\n    res.ok && setStates({ dataSource: res.data.list, total: res.data.total });\n    setLoading(false);\n  });\n\n  // 弹窗表单\n  const { modalForm, add, edit } = useInfo();\n\n  // 生成表格配置数据\n  const columns = useMemo(() => createColumns(edit), []);\n\n  return (\n    <PageTable\n      {...pageTableProps}\n      columns={columns}\n      widthAddition={0}\n      add=\"/admin/account/info\"\n      extra={<Button onClick={add}>弹窗添加</Button>}\n    >\n      <FormSearch {...formSearchProps}>\n        <FormItem label=\"用户名\" name=\"username\" placeholder />\n        <FormItem label=\"昵称\" name=\"nickname\" placeholder />\n      </FormSearch>\n      {modalForm}\n    </PageTable>\n  );\n};\n","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nexport default () => {\n  return (\n    <div>\n      account <Link to=\"/admin/account\">go account</Link>\n    </div>\n  );\n};\n","import React from 'react';\nimport { message } from 'antd';\nimport { FormItem, Select, Radio } from 'common';\nimport { RouterTitle, FormModal, useInfoModal } from 'components';\nimport { options } from './config';\nimport { admin } from 'apis';\n\nexport const useInfo = () => {\n  const { formModalProps, data, isEdit, setLoading, hide, ...funs } = useInfoModal({\n    defaultData: { state: 0 },\n    onFinish: async (values: any) => {\n      setLoading(true);\n      // --------------------------- 请求前处理提交数据 --------------------------- //\n      // values 建议展开避免副作用\n      // --------------------------- 请求前处理提交数据 --------------------------- //\n      if (isEdit) values.id = data.id; // 编辑时需要带入 ID\n      const res = await admin.account[data ? 'edit' : 'add'](values);\n      if (!res.ok) return setLoading(false);\n      message.success(`${isEdit ? '编辑' : '新建'}成功`);\n      hide();\n    },\n  });\n\n  const modalForm = (\n    <FormModal title={<RouterTitle before={isEdit ? '编辑' : '新建'} />} {...formModalProps}>\n      <FormItem label=\"用户名\" name=\"username\" placeholder />\n      <FormItem label=\"昵称\" name=\"nickname\" placeholder />\n      <FormItem label=\"角色\" name=\"role\" placeholder select>\n        <Select options={options.role} />\n      </FormItem>\n      {isEdit && (\n        <>\n          <FormItem label=\"注册IP\">{data.regip}</FormItem>\n          <FormItem label=\"登陆IP\">{data.loginip}</FormItem>\n          <FormItem label=\"注册时间\">{data.regtime}</FormItem>\n          <FormItem label=\"登陆时间\">{data.logintime}</FormItem>\n        </>\n      )}\n      <FormItem label=\"状态\" name=\"state\">\n        <Radio options={options.state} />\n      </FormItem>\n    </FormModal>\n  );\n\n  return { modalForm, ...funs };\n};\n","import { observable, action } from 'mobx';\nimport { TUseTableStates } from 'components';\nimport { jsonParse } from '@dyb881/json';\nimport { debounce } from 'lodash';\n\n/**\n * 视图\n */\nexport default class View {\n  constructor() {\n    this.resize();\n    window.addEventListener('resize', debounce(this.resize, 100));\n  }\n\n  /**\n   * 自动计算左边导航\n   */\n  @action resize = () => {\n    const { innerWidth: w } = window;\n    if (w <= 750) {\n      this.isMobile = true;\n      this.collapsed = false;\n    } else {\n      this.isMobile = false;\n      this.collapsed = w <= 1000;\n    }\n  };\n\n  @observable isMobile = false; // 是否移动端\n  @observable collapsed = false;\n  @action siderOnChange = () => {\n    this.collapsed = !this.collapsed;\n  };\n\n  /**\n   * 页面配置数据\n   */\n  @observable pageConfig: TPageConfig = jsonParse(localStorage['ra-admin-pageConfig'], {\n    componentSize: undefined,\n    theme: 'dark',\n    hiddenMenu: false,\n    hiddenHeader: false,\n    menuIconTop: 50,\n    headerIconRight: 30,\n  });\n  @action setPageConfig = (pageConfig: TPageConfig) => {\n    this.pageConfig = pageConfig;\n    localStorage['ra-admin-pageConfig'] = JSON.stringify(pageConfig);\n    this.resize();\n  };\n\n  /**\n   * 页面标题\n   */\n  @observable title = window.document.title;\n  @action setTitle = (title: string) => {\n    window.document.title = this.title = title;\n  };\n\n  /**\n   * 表格数据临时储存\n   */\n  tableDatas: TTableDatas = {};\n  setTableData = (key: string, value?: TTableData) => {\n    if (value) {\n      this.tableDatas[key] = value;\n    } else {\n      delete this.tableDatas[key];\n    }\n  };\n  getTableData = (key: string) => {\n    return this.tableDatas[key];\n  };\n}\n\n/**\n * 页面配置\n */\ntype TPageConfig = {\n  componentSize: 'large' | 'middle' | 'small'; // 全局组件尺寸\n  theme: 'light' | 'dark'; // 主题色\n  hiddenMenu: boolean; // 隐藏菜单\n  hiddenHeader: boolean; // 默认隐藏头部\n  menuIconTop: number; // 菜单开关按钮位置\n  headerIconRight: number; // 页头开关按钮位置\n};\n\n/**\n * 表格数据\n */\ntype TTableData = Pick<TUseTableStates, 'search' | 'current' | 'pageSize'>;\n\n/**\n * 仅允许全部写入和清空\n */\ntype TTableDatas = { [key: string]: TTableData };\n","import { observable, action, when } from 'mobx';\nimport { modalConfirm } from 'common';\n\n/**\n * 用户\n */\nexport default class User {\n  /**\n   * 是否登录\n   */\n  @observable isLogin = false;\n\n  /**\n   * 登陆状态监听\n   */\n  @action onLogin = (bind: boolean | (() => void)) => {\n    if (typeof bind === 'boolean') {\n      this.isLogin = bind;\n    } else {\n      when(() => this.isLogin, bind);\n    }\n  };\n\n  /**\n   * 登录\n   */\n  login = () => {\n    this.onLogin(true);\n  };\n\n  /**\n   * 退出登录\n   */\n  logout = () => {\n    modalConfirm({\n      title: '确定要退出登录吗？',\n      okButtonProps: { danger: true },\n      onOk: () => {\n        this.onLogin(false);\n      },\n    });\n  };\n}\n","import React from 'react';\nimport { RouteComponentProps } from 'react-router-dom';\nimport { configure } from 'mobx';\nimport { observer } from 'mobx-react';\nimport Stores from 'stores';\n\n/**\n * 全局设置\n */\nconfigure({\n  enforceActions: 'observed', // 只有被定义为动作的方法才能修改监听值\n  computedRequiresReaction: true, // 计算值内必须使用监听值\n});\n\n/**\n * 全局状态类型\n */\ntype TStores = { stores: Stores };\n\n/**\n * 全局状态\n */\nexport const stores = new Stores();\n\n/**\n * 状态联合到组件（函数组件）\n * 使用后状态变更时会刷新两次组件，build 后就不会有这情况了，可放心开发\n */\nexport const combine = <P extends object>(Component: React.FC<P & TStores>) => {\n  // 生成观察者组件\n  const Observer = observer(Component);\n  // 注入全局状态\n  const Combine: React.FC<P> = props => <Observer {...props} stores={stores} />;\n  return Combine;\n};\n\n/**\n * 状态 Props\n */\nexport type TStoresProps = Partial<TStores>;\n\n/**\n * 状态联合到组件（类装饰器）\n * 使用后状态变更时会刷新两次组件，build 后就不会有这情况了，可放心开发\n */\nexport const Combine = <P extends object = {}>(Component: React.ComponentClass<P & TStoresProps>) => {\n  // 生成观察者组件\n  const Observer = observer(Component);\n  // 注入全局状态\n  class Combine extends React.Component<P> {\n    render = () => <Observer {...this.props} stores={stores} />;\n  }\n  return Combine;\n};\n\n/**\n * 在原有基础上加入路由类型定义\n */\nexport const combinePage = <Params extends object, P extends object = {}>(\n  Component: React.FC<P & TStores & RouteComponentProps<Params>>\n) => {\n  return combine(Component);\n};\n","import View from './view';\nimport User from './user';\n\n/**\n * 全局状态管理\n */\nexport default class Stores {\n  /**\n   * 状态初始化\n   */\n  // constructor() {\n  //   // 默认为登录状态\n  //   this.user.onLogin(true);\n  // }\n\n  /**\n   * 视图\n   */\n  view = new View();\n\n  /**\n   * 用户\n   */\n  user = new User();\n}\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formBox\":\"formBox--1YS8A\",\"form\":\"form--1Q5sY\"};","module.exports = __webpack_public_path__ + \"static/media/logo.c92b85a5.ico\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"page\":\"page--2bybz\",\"large\":\"large--3F7uY\",\"small\":\"small--PWKzu\"};","import FetchReques, { log } from '@dyb881/fetch-request';\nimport { requestConfig, statusCodeKeys, successCodes, messageKeys } from 'configs';\n\nconst { interceptorsRequest, interceptorsResponse, ...config } = requestConfig;\n\n/**\n * 请求模块初始化并输出请求方法以及参数\n */\nexport const { baseURL, get, post, put, patch, del, upload } = new FetchReques({\n  ...config,\n  interceptorsRequest: config => {\n    if (interceptorsRequest) config = interceptorsRequest(config);\n    log.request(config);\n    return config;\n  },\n  interceptorsResponse: (res, config) => {\n    if (!res.errorText && config.responseType === 'json') {\n      // 获取匹配的 code\n      const code = statusCodeKeys.reduce((code, key) => res[key] ?? code, undefined);\n      // 当 code 匹配成功状态码失败，既是请求失败\n      if (!successCodes.includes(code!)) {\n        res.error = code;\n        // 获取错误提示信息\n        res.errorText = messageKeys.reduce((msg, key) => res[key] || msg, '请求异常');\n      }\n    }\n    res.ok = !res.errorText; // 请求结果状态 成功/失败\n    if (interceptorsResponse) res = interceptorsResponse(res, config);\n    log.response(res, config, res.ok);\n    return res;\n  },\n});\n","import React from 'react';\nimport { message } from 'antd';\nimport { FormItem, Select, Radio, combinePage } from 'common';\nimport { PageForm, useInfo } from 'components';\nimport { options } from './config';\nimport { admin } from 'apis';\n\ntype TParams = { id?: string };\n\nexport default combinePage<TParams>(({ history, match }) => {\n  const { id } = match.params;\n  const { data, setData, setLoading, pageFormProps } = useInfo({\n    defaultData: { state: 0 },\n    getData: async () => {\n      if (!id) return;\n      setLoading('请求数据');\n      const res = await admin.account.details(id);\n      res.ok && setData(res.data);\n      setLoading(false);\n    },\n    onFinish: async (values: any) => {\n      setLoading('正在保存');\n      // --------------------------- 请求前处理提交数据 --------------------------- //\n      // values 建议展开避免副作用\n      // --------------------------- 请求前处理提交数据 --------------------------- //\n      if (id) values.id = id; // 编辑时需要带入 ID\n      const res = await admin.account[id ? 'edit' : 'add'](values);\n      if (!res.ok) return setLoading(false);\n      message.success(`${id ? '编辑' : '新建'}成功`);\n      history.goBack();\n    },\n  });\n\n  return (\n    <PageForm {...pageFormProps}>\n      <FormItem label=\"用户名\" name=\"username\" placeholder />\n      <FormItem label=\"昵称\" name=\"nickname\" placeholder />\n      <FormItem label=\"角色\" name=\"role\" placeholder select>\n        <Select options={options.role} />\n      </FormItem>\n      {!id || (\n        <>\n          <FormItem label=\"注册IP\">{data.regip}</FormItem>\n          <FormItem label=\"登陆IP\">{data.loginip}</FormItem>\n          <FormItem label=\"注册时间\">{data.regtime}</FormItem>\n          <FormItem label=\"登陆时间\">{data.logintime}</FormItem>\n        </>\n      )}\n      <FormItem label=\"状态\" name=\"state\">\n        <Radio options={options.state} />\n      </FormItem>\n    </PageForm>\n  );\n});\n","import React, { useCallback } from 'react';\nimport { Form as FormSource } from 'antd';\nimport { FormProps, FormInstance } from 'antd/es/form';\n\n/**\n * 表单组件\n */\nexport const Form: React.FC<FormProps> = ({ layout, wrapperCol, labelCol, ...props }) => {\n  const formProps: FormProps = { layout };\n  if (layout === 'horizontal') Object.assign(formProps, { wrapperCol, labelCol });\n  return <FormSource {...formProps} {...props} />;\n};\n\nexport type TForm = {\n  form: FormInstance;\n  submit: FormInstance['submit'];\n  reset(): void;\n  resetSubmit(): void;\n};\n\n/**\n * 表单 hooks\n */\nexport const useForm = () => {\n  const [form] = FormSource.useForm();\n  const { submit } = form;\n\n  /**\n   * 重置清空表单\n   */\n  const reset = useCallback(() => {\n    form.resetFields();\n  }, []);\n\n  /**\n   * 重置清空表单，并提交表单\n   */\n  const resetSubmit = useCallback(() => {\n    reset();\n    submit();\n  }, []);\n\n  return { form, submit, reset, resetSubmit };\n};\n","import React from 'react';\nimport { Form } from 'antd';\nimport { Input } from 'common';\nimport { FormItemProps } from 'antd/es/form/FormItem';\n\nexport type TFormItemProps = Partial<\n  Pick<FormItemProps, 'label' | 'name' | 'rules' | 'valuePropName' | 'labelCol' | 'wrapperCol' | 'children'>\n> & {\n  hidden?: boolean; // 隐藏表单项\n  validator?: (value: any) => string | undefined | Promise<string | undefined>; // 额外验证器\n  select?: boolean; // 是否选择器\n  required?: boolean | string; // 是否必填\n  placeholder?: boolean | string | string[]; // 占位符\n  formItemProps?: Partial<FormItemProps>;\n  [key: string]: any;\n};\n\nexport const FormItem: React.FC<TFormItemProps> = ({\n  hidden,\n  validator,\n  select,\n  required,\n  placeholder,\n  label,\n  name,\n  children,\n  rules = [],\n  valuePropName,\n  labelCol,\n  wrapperCol,\n  formItemProps,\n  ...props\n}) => {\n  // 隐藏表单项\n  if (hidden) return null;\n\n  if (name) {\n    if (!children) children = <Input />;\n\n    // 默认提示语\n    let text = select ? '请选择' : '请输入';\n    // 接入label，如 label:用户名 = 请输入用户名\n    if (typeof label === 'string') text += label;\n\n    // 加入必填提示\n    if (required) {\n      rules.push({\n        required: true,\n        message: required !== true ? required : typeof placeholder === 'string' ? placeholder : text,\n      });\n    }\n\n    // 写入默认占位符\n    if (placeholder) {\n      props.placeholder = placeholder !== true ? placeholder : typeof required === 'string' ? required : text;\n    }\n\n    // 追加验证器\n    rules.push({\n      validator: async (_rule, value) => {\n        let msg;\n        // 不可提交空格\n        if (value && typeof value === 'string' && !space.test(value)) {\n          msg = `${typeof label === 'string' ? label : '输入框'}不可提交空格`;\n        }\n        // 自定义验证器\n        if (!msg && validator) msg = await validator(value);\n\n        msg && (await Promise.reject(msg));\n      },\n    });\n  }\n\n  return (\n    <Form.Item {...{ label, name, rules, valuePropName, labelCol, wrapperCol }} {...formItemProps}>\n      {React.isValidElement(children) ? React.cloneElement(children, props) : children!}\n    </Form.Item>\n  );\n};\n\n/**\n * 非全空格，即字符串内包含非空格的时候不匹配，一般用于 !space.test('  ') === true 判断字符串是否都是空格\n */\nconst space = /^[\\s\\S]*.*[^\\s][\\s\\S]*$/;\n","import React, { useMemo } from 'react';\nimport { Input as InputSource, InputNumber as InputNumberSource, AutoComplete as AutoCompleteSource } from 'antd';\nimport { InputProps, TextAreaProps, SearchProps } from 'antd/es/input';\nimport { InputNumberProps } from 'antd/es/input-number';\nimport { AutoCompleteProps } from 'antd/es/auto-complete';\n\n/**\n * 默认文本框最大长度\n */\nexport const maxLength = 256;\n\n/**\n * 文本框\n */\nexport const Input: React.FC<InputProps> = props => <InputSource maxLength={maxLength} autoComplete=\"off\" {...props} />;\n\n/**\n * 大文本框\n */\nexport const TextArea: React.FC<TextAreaProps> = props => (\n  <InputSource.TextArea maxLength={maxLength} rows={3} {...props} />\n);\n\n/**\n * 密码输入框\n */\nexport const Password: React.FC<InputProps> = props => (\n  <InputSource.Password maxLength={maxLength} autoComplete=\"current-password\" {...props} />\n);\n\n/**\n * 搜索框\n */\nexport const Search: React.FC<SearchProps> = props => <InputSource.Search maxLength={maxLength} {...props} />;\n\n/**\n * 数字文本框\n */\nexport const InputNumber: React.FC<InputNumberProps> = props => <InputNumberSource step={1} precision={0} {...props} />;\n\nexport type TAutoCompleteProps = Omit<AutoCompleteProps, 'options'> & {\n  options?: string[];\n};\n\n/**\n * 自动完成下拉框过滤器\n */\nexport const autoCompleteFilterOption: AutoCompleteProps['filterOption'] = (input, option) => {\n  return !!option && typeof option.value === 'string' && option.value.toLowerCase().includes(input.toLowerCase());\n};\n\n/**\n * 自动完成\n */\nexport const AutoComplete: React.FC<TAutoCompleteProps> = ({ options = [], ...props }) => {\n  const autoCompleteOptions = useMemo(() => options.map(value => ({ value })), [JSON.stringify(options)]);\n\n  return <AutoCompleteSource filterOption={autoCompleteFilterOption} options={autoCompleteOptions} {...props} />;\n};\n","import React, { useMemo } from 'react';\nimport { Select as SelectSource } from 'antd';\nimport { SelectProps, SelectValue } from 'antd/es/select';\nimport { toOptions, TOptionsProps } from '../tool';\n\nexport type TSelectProps = Omit<SelectProps<SelectValue>, 'options'> & TOptionsProps;\n\n/**\n * 下拉选择框过滤器\n */\nexport const selectFilterOption: TSelectProps['filterOption'] = (input, option) => {\n  return !!option && typeof option.children === 'string' && option.children.toLowerCase().includes(input.toLowerCase());\n};\n\n/**\n * 下拉选择框\n */\nexport const Select: React.FC<TSelectProps> = ({ options = [], ...props }) => {\n  const selectOption = useMemo(() => {\n    return toOptions(options).map(({ label, ...i }) => (\n      <SelectSource.Option key={i.value} {...i}>\n        {label}\n      </SelectSource.Option>\n    ));\n  }, [JSON.stringify(options)]);\n\n  return (\n    <SelectSource allowClear placeholder=\"请选择\" filterOption={selectFilterOption} {...props}>\n      {selectOption}\n    </SelectSource>\n  );\n};\n","import React, { useMemo } from 'react';\nimport { Radio as RadioSource } from 'antd';\nimport { RadioGroupProps } from 'antd/es/radio';\nimport { CheckboxOptionType } from 'antd/es/checkbox';\nimport { toOptions, TOptionsProps } from '../tool';\n\nexport type TRadioProps = Omit<RadioGroupProps, 'options'> & TOptionsProps<CheckboxOptionType>;\n\n/**\n * 单选框\n */\nexport const Radio: React.FC<TRadioProps> = ({ options = [], ...props }) => {\n  const radioGroupOptions = useMemo(() => toOptions(options), [JSON.stringify(options)]);\n\n  return <RadioSource.Group options={radioGroupOptions} {...props} />;\n};\n\n/**\n * 单选按钮组\n */\nexport const RadioButton: React.FC<TRadioProps> = ({ options = [], ...props }) => {\n  const radioButtons = useMemo(() => {\n    return toOptions(options).map(({ value, label }, k) => (\n      <RadioSource.Button key={value + k} value={value}>\n        {label}\n      </RadioSource.Button>\n    ));\n  }, [JSON.stringify(options)]);\n\n  return <RadioSource.Group {...props}>{radioButtons}</RadioSource.Group>;\n};\n","import React, { useMemo } from 'react';\nimport { Menu as MenuSource } from 'antd';\nimport { MenuProps, ClickParam } from 'antd/es/menu';\n\nexport type TMenuData = {\n  icon?: React.ReactNode;\n  title: React.ReactNode; // 标题\n  children?: TMenuData[];\n  [key: string]: any;\n};\n\nexport type TMenuProps = MenuProps & {\n  data: TMenuData[]; // 导航菜单配置数据，生成菜单后一般无法更改，如果需要更改请在 Menu Props 加上 key\n  onClickItem?: (data: TMenuData, key: string, param: ClickParam) => void; // 点击导航菜单 item\n};\n\n/**\n * 导航菜单\n * 根据配置，可无限生成子菜单\n */\nexport const Menu: React.FC<TMenuProps> = ({\n  data,\n  onClickItem,\n  onClick,\n  inlineCollapsed,\n  openKeys,\n  onOpenChange,\n  ...props\n}) => {\n  const children = useMemo(() => menuTree(data), []);\n\n  const computeProps = inlineCollapsed ? {} : { openKeys, onOpenChange };\n\n  const menuOnClick = (param: ClickParam) => {\n    const { item, key } = param;\n    onClickItem?.(item.props['data-info'], key, param);\n    onClick?.(param);\n  };\n\n  return (\n    <MenuSource onClick={menuOnClick} {...computeProps} {...props}>\n      {children}\n    </MenuSource>\n  );\n};\n\n/**\n * 递归生成子菜单\n */\nconst menuTree = (data: TMenuData[], prefix = 'key') => {\n  return data.map((i, k) => {\n    const { title, icon, children } = i;\n    const key = `${prefix}-${k}`;\n    const menuItemTitle = (\n      <>\n        {icon}\n        <span>{title}</span>\n      </>\n    );\n    return children?.length ? (\n      <MenuSource.SubMenu key={key} title={menuItemTitle}>\n        {menuTree(children, key)}\n      </MenuSource.SubMenu>\n    ) : (\n      <MenuSource.Item key={key} data-info={i}>\n        {menuItemTitle}\n      </MenuSource.Item>\n    );\n  });\n};\n","import React from 'react';\nimport { Dropdown as DropdownSource } from 'antd';\nimport { DropDownProps, DropdownButtonProps } from 'antd/es/dropdown';\nimport { Menu, TMenuProps } from './menu';\n\ntype TMenuKeys = 'data' | 'selectedKeys' | 'onClickItem';\n\nexport type TDropdownProps<T = DropDownProps> = Partial<T> &\n  Pick<TMenuProps, TMenuKeys> & {\n    menuProps?: Omit<TMenuProps, TMenuKeys>;\n  };\n\n/**\n * 下拉菜单\n */\nexport const Dropdown: React.FC<TDropdownProps> = ({ data, selectedKeys, onClickItem, menuProps, ...props }) => (\n  <DropdownSource overlay={<Menu {...{ data, selectedKeys, onClickItem }} {...menuProps} />} {...props} />\n);\n\nexport type TDropdownButtonProps = TDropdownProps<DropdownButtonProps>;\n\n/**\n * 下拉菜单按钮\n */\nexport const DropdownButton: React.FC<TDropdownButtonProps> = ({ data, onClickItem, menuProps, ...props }) => (\n  <DropdownSource.Button overlay={<Menu data={data} onClickItem={onClickItem} {...menuProps} />} {...props} />\n);\n","import React, { useMemo } from 'react';\nimport { Link, LinkProps } from 'react-router-dom';\nimport { Breadcrumb as BreadcrumbSource } from 'antd';\nimport { BreadcrumbProps, BreadcrumbItemProps } from 'antd/es/breadcrumb';\n\nexport type TBreadcrumbItemProps = Partial<LinkProps> & { itemProps?: BreadcrumbItemProps };\n\nexport type TBreadcrumbProps = BreadcrumbProps & { data: TBreadcrumbItemProps[] };\n\n/**\n * 面包屑\n * 可由配置生成可跳转的面包屑\n */\nexport const Breadcrumb: React.FC<TBreadcrumbProps> = ({ data, ...props }) => {\n  const breadcrumbItems = useMemo(\n    () =>\n      data.map(({ itemProps, to, children, ...i }, k) => (\n        <BreadcrumbSource.Item key={k} {...itemProps}>\n          {to ? (\n            <Link to={to} {...i}>\n              {children}\n            </Link>\n          ) : (\n            children\n          )}\n        </BreadcrumbSource.Item>\n      )),\n    [JSON.stringify(data)]\n  );\n\n  return <BreadcrumbSource {...props}>{breadcrumbItems}</BreadcrumbSource>;\n};\n","import React from 'react';\nimport { Modal } from 'antd';\nimport { ModalFuncProps } from 'antd/es/modal';\nimport { ExclamationCircleOutlined } from '@ant-design/icons';\n\n/**\n * 确认对话框\n */\nexport const modalConfirm = (funcProps: ModalFuncProps) => {\n  Modal.confirm({\n    icon: <ExclamationCircleOutlined />,\n    ...funcProps,\n  });\n};\n\n/**\n * 删除对话框\n */\nexport const modalConfirmDel = ({ okButtonProps, ...funcProps }: ModalFuncProps) => {\n  modalConfirm({\n    title: '确定要删除吗？',\n    content: '删除后数据将无法恢复',\n    okButtonProps: { danger: true, ...okButtonProps },\n    ...funcProps,\n  });\n};\n","/**\n * 表单项\n */\nexport * from './form';\nexport * from './input';\nexport * from './select';\nexport * from './checkbox';\nexport * from './radio';\n\n/**\n * 功能项\n */\nexport * from './menu';\nexport * from './dropdown';\nexport * from './breadcrumb';\nexport * from './modal';\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formLayout\":\"formLayout--2hHjd\"};","import React, { useEffect, useMemo, useCallback } from 'react';\nimport { useLocation, useHistory, matchPath } from 'react-router-dom';\nimport { Menu, TMenuData, TMenuProps, TRouters, useStates } from 'common';\n\nexport type TMenuNavData = Pick<TMenuData, 'icon'> & {\n  title: string; // 标题\n  to?: string; // 路由地址\n  path?: string; // 绑定组件路径，为空时会尝试使用 to 的路径\n  hidden?: boolean; // 不展示到导航菜单\n  children?: TMenuNavData[];\n};\n\nexport type TMenuNavProps = Omit<TMenuProps, 'data'> & {\n  data: TMenuNavData[]; // 导航菜单配置数据，生成菜单后一般无法更改，如果需要更改请在 Menu Props 加上 key\n  reload?: () => void; // 刷新\n};\n\ntype TMenuNavStates = {\n  openKeys: any[];\n  selectedKeys: any[];\n};\n\n/**\n * 导航栏\n * 根据路由自动打开并选中菜单\n */\nexport const MenuNav: React.FC<TMenuNavProps> = ({ reload, data, ...props }) => {\n  const { push } = useHistory();\n  const { pathname } = useLocation();\n  const { states, setStates } = useStates<TMenuNavStates>({ openKeys: [], selectedKeys: [] });\n\n  const menuNavData = useMemo(() => menuNavDataHidden(data), []);\n\n  /**\n   * 点击菜单执行事件并跳转页面\n   */\n  const onClickItem: TMenuProps['onClickItem'] = (data, key, param) => {\n    props.onClickItem?.(data, key, param);\n    if (pathname === data.to) {\n      reload && reload(); // 跳转地址和当前地址相同，执行刷新\n    } else {\n      data.to && push(data.to); // 跳转对应地址\n    }\n  };\n\n  /**\n   * 菜单开关\n   */\n  const onOpenChange = useCallback((openKeys: string[]) => setStates({ openKeys }), []);\n\n  /**\n   * 监听路由变动，打开和选中菜单项\n   */\n  useEffect(() => {\n    let selectedKey = '';\n    const openKeys = [...states.openKeys];\n\n    const getOpenKeys = (data: TMenuNavData[], prefix = 'key') => {\n      let isSelect = false; // 该路线是否选中\n\n      data.forEach((i, k) => {\n        const key = `${prefix}-${k}`;\n        if (matchPath(pathname, { path: i.to, exact: true })) {\n          selectedKey = key; // 选中\n          isSelect = true;\n        } else if (i.children?.length) {\n          isSelect = getOpenKeys(i.children, key);\n          // 路线被选中，并且未打开，则 push key\n          isSelect && !openKeys.includes(key) && openKeys.push(key);\n        }\n      });\n\n      return isSelect;\n    };\n\n    getOpenKeys(data);\n    setStates({ openKeys, selectedKeys: [selectedKey] });\n  }, [pathname]);\n\n  return (\n    <Menu\n      {...props}\n      {...states}\n      onOpenChange={onOpenChange}\n      data={menuNavData as TMenuData[]}\n      onClickItem={onClickItem}\n    />\n  );\n};\n\n/**\n * 隐藏数据中 hidden === true 的项\n */\nexport const menuNavDataHidden = (data: TMenuNavData[]) => {\n  return data\n    .filter(i => !i.hidden)\n    .map(i => {\n      if (i.children) i = { ...i, children: menuNavDataHidden(i.children) };\n      return i;\n    });\n};\n\n/**\n * 获取导航数据中路由信息\n */\nexport const getMenuNavDataRouters = (data: TMenuNavData[]) => {\n  let routers: TRouters = [];\n  for (let { to, path, title, children } of data) {\n    to && routers.push({ to, path: path || to.slice(1).split('/:')[0], title });\n    if (children) routers = [...routers, ...getMenuNavDataRouters(children)];\n  }\n  return routers;\n};\n\n/**\n * 获取导航数据中路由地址匹配的标题\n */\nexport const getMenuNavDataTitle = (data: TMenuNavData[], pathname: string) => {\n  let menuNavDatatitle = '';\n  data.forEach(({ to, title, children }) => {\n    if (matchPath(pathname, { path: to, exact: true })) {\n      menuNavDatatitle = title;\n    } else if (!menuNavDatatitle && children?.length) {\n      menuNavDatatitle = getMenuNavDataTitle(children, pathname);\n    }\n  });\n  return menuNavDatatitle;\n};\n\n/**\n * 获取导航数据中路由地址匹配的数组\n */\nexport const getMenuNavDatas = (data: TMenuNavData[], pathname: string) => {\n  let menuNavDatas: TMenuNavData[] = [];\n  data.forEach(i => {\n    const { to, children } = i;\n    if (matchPath(pathname, { path: to, exact: true })) {\n      menuNavDatas.push(i);\n    } else if (children?.length) {\n      const childrenMenuNavDatas = getMenuNavDatas(children, pathname);\n      childrenMenuNavDatas.length && menuNavDatas.push(i, ...childrenMenuNavDatas);\n    }\n  });\n  return menuNavDatas;\n};\n","import React, { useState, useCallback, useMemo, forwardRef } from 'react';\nimport { ConfigProvider, Layout, Drawer, Switch, Avatar, Modal, Tooltip } from 'antd';\nimport { combine, Form, FormItem, RadioButton, InputNumber, Dropdown, TMenuData } from 'common';\nimport {\n  MenuFoldOutlined,\n  MenuUnfoldOutlined,\n  SettingOutlined,\n  MobileOutlined,\n  UserOutlined,\n  FullscreenOutlined,\n  FullscreenExitOutlined,\n} from '@ant-design/icons';\nimport screenfull, { Screenfull } from 'screenfull';\nimport classNames from 'classnames';\nimport style from './style.module.less';\n\nexport const Header = combine(({ stores }) => {\n  const [showHeader, setShowHeader] = useState(false);\n  const [visible, setVisible] = useState(false);\n  const { view, user } = stores;\n  const { isMobile, pageConfig, setPageConfig } = view;\n  const { logout } = user;\n  const { hiddenMenu, hiddenHeader, headerIconRight } = pageConfig;\n\n  // 用户下拉菜单\n  const data = useMemo(() => {\n    return [{ title: '个人中心' }, { title: <span className=\"error\">退出</span>, onClick: logout }];\n  }, []);\n  const onClickItem = useCallback((data: TMenuData) => data.onClick?.(), []);\n  const onShow = useCallback(() => setVisible(true), []);\n  const onClose = useCallback(() => setVisible(false), []);\n  const onShowHeader = useCallback(() => setShowHeader(showHeader => !showHeader), []);\n  const onValuesChange = useCallback((changeValue: any, values: any) => {\n    if (Object.keys(changeValue)[0] === 'hiddenHeader' && changeValue.hiddenHeader) {\n      setShowHeader(false);\n    }\n    setPageConfig(values);\n  }, []);\n\n  return (\n    <Layout.Header\n      className={classNames(`transition ${style.header}`, {\n        [style.hidden]: hiddenHeader && !showHeader,\n      })}\n    >\n      <div className=\"between-center\">\n        <Interval className=\"center\" left>\n          {(isMobile || hiddenMenu) && <img src={require('images/logo.ico')} alt=\"\" className={style.logo} />}\n          {hiddenHeader || <MenuSwitch />}\n        </Interval>\n        <Interval className=\"center\">\n          <Avatar icon={<UserOutlined />} size=\"small\" />\n          <Dropdown data={data} onClickItem={onClickItem}>\n            <div className={`pointer ${style.userName}`}>User Name</div>\n          </Dropdown>\n          <Tooltip placement=\"bottom\" title=\"全屏\">\n            <Fullscreen />\n          </Tooltip>\n          <Tooltip placement=\"left\" title=\"网页设置\">\n            <SettingOutlined onClick={onShow} />\n          </Tooltip>\n        </Interval>\n        <Drawer title=\"网页设置\" onClose={onClose} visible={visible}>\n          <ConfigProvider componentSize=\"small\">\n            <Form initialValues={pageConfig} onValuesChange={onValuesChange}>\n              <FormItem label=\"组件尺寸\" name=\"componentSize\">\n                <RadioButton buttonStyle=\"solid\" options={componentSizeOptions} />\n              </FormItem>\n              <FormItem label=\"菜单主题色\" name=\"theme\">\n                <RadioButton buttonStyle=\"solid\" options={themeOptions} />\n              </FormItem>\n              <FormItem label=\"隐藏菜单\" name=\"hiddenMenu\" valuePropName=\"checked\">\n                <Switch />\n              </FormItem>\n              <FormItem label=\"隐藏页头\" name=\"hiddenHeader\" valuePropName=\"checked\">\n                <Switch />\n              </FormItem>\n              <FormItem label=\"菜单开关 Top\" name=\"menuIconTop\" placeholder>\n                <InputNumber min={0} />\n              </FormItem>\n              <FormItem label=\"页头开关 Right\" name=\"headerIconRight\" placeholder>\n                <InputNumber min={0} />\n              </FormItem>\n            </Form>\n          </ConfigProvider>\n        </Drawer>\n        {hiddenHeader && (\n          <div className={`transition ${style.showHeader}`} onClick={onShowHeader} style={{ right: headerIconRight }}>\n            <MobileOutlined className={style.icon} />\n          </div>\n        )}\n      </div>\n    </Layout.Header>\n  );\n});\n\nconst componentSizeOptions = [\n  { label: '默认' },\n  { label: '大', value: 'large' },\n  { label: '中', value: 'middle' },\n  { label: '小', value: 'small' },\n];\n\nconst themeOptions = { dark: '暗色', light: '亮色' };\n\n/**\n * 间隔，默认右对齐\n */\nexport const Interval: React.FC<React.HTMLAttributes<HTMLDivElement> & { left?: boolean }> = ({\n  left,\n  className,\n  ...props\n}) => <span className={classNames(style.interval, style[left ? 'left' : 'right'], className)} {...props} />;\n\ntype TMenuSwitchProps = {\n  style?: React.CSSProperties;\n  className?: string;\n};\n\n/**\n * 菜单开关按钮\n */\nexport const MenuSwitch = combine<TMenuSwitchProps>(({ stores, ...props }) => {\n  const { isMobile, collapsed, siderOnChange, pageConfig } = stores.view;\n  const { hiddenMenu } = pageConfig;\n\n  return React.cloneElement((isMobile || hiddenMenu) !== collapsed ? <MenuUnfoldOutlined /> : <MenuFoldOutlined />, {\n    onClick: siderOnChange,\n    ...props,\n  });\n});\n\ntype TFullscreenProps = TMenuSwitchProps & {\n  getElement?: () => Element;\n};\n\n/**\n * 全屏\n */\nexport const Fullscreen = forwardRef<HTMLSpanElement, TFullscreenProps>(\n  ({ getElement = () => document.documentElement, className, ...props }, ref) => {\n    const [isFullscreen, setIsFullscreen] = useState(false);\n    const s = screenfull as Screenfull;\n\n    const onClick = useCallback(() => {\n      if (!s.isEnabled) {\n        Modal.error({ title: '不支持全屏', content: '该浏览器不支持全屏 API' });\n        return;\n      }\n\n      if (s.isFullscreen) {\n        s.exit();\n      } else {\n        s.request(getElement());\n      }\n      setIsFullscreen(!s.isFullscreen);\n    }, []);\n\n    return React.cloneElement(isFullscreen ? <FullscreenExitOutlined /> : <FullscreenOutlined />, {\n      onClick,\n      className: classNames('pointer', className),\n      ref,\n      ...props,\n    });\n  }\n);\n","import React from 'react';\nimport { Layout } from 'antd';\nimport { combine } from 'common';\nimport { defaultTitle, menuNavData } from 'configs';\nimport { MenuNav, TMenuNavProps } from './menu_nav';\nimport classNames from 'classnames';\nimport style from './style.module.less';\nimport { MenuSwitch } from './header';\n\nexport const Sider = combine<Partial<TMenuNavProps>>(({ stores, ...props }) => {\n  const { isMobile, pageConfig, collapsed } = stores.view;\n  const { theme, hiddenMenu, hiddenHeader, menuIconTop } = pageConfig;\n  const isCollapsed = !(isMobile || hiddenMenu) && collapsed;\n\n  return (\n    <Layout.Sider\n      className={classNames(style.sider, { [style.hidden]: (isMobile || hiddenMenu) && !collapsed })}\n      collapsed={isCollapsed}\n      theme={theme}\n    >\n      <div className={`center transition ${style.logo}`}>\n        <img src={require('images/logo.ico')} alt=\"\" className=\"transition\" />\n        <h1 hidden={isCollapsed} className=\"transition\">\n          {defaultTitle}\n        </h1>\n      </div>\n      <MenuNav data={menuNavData} mode=\"inline\" inlineCollapsed={isCollapsed} theme={theme} {...props} />\n      {hiddenHeader && <MenuSwitch className={`center transition ${style.menuIcon}`} style={{ top: menuIconTop }} />}\n    </Layout.Sider>\n  );\n});\n","import React, { useState, useEffect, useCallback } from 'react';\nimport { ConfigProvider, Layout } from 'antd';\nimport { combine } from 'common';\nimport { Sider } from './sider';\nimport { Header } from './header';\nimport style from './style.module.less';\n\n/**\n * 设置为中文简体\n */\nimport zh_CN from 'antd/es/locale-provider/zh_CN';\nimport moment from 'moment';\nimport 'moment/locale/zh-cn';\nmoment.locale('zh-cn');\n\nconst { Content } = Layout;\n\nexport const LayoutBox = combine(({ children, stores }) => {\n  const [key, setKey] = useState(0);\n  const { pageConfig, setTableData } = stores.view;\n  const { theme } = pageConfig;\n\n  useEffect(() => {\n    window.document.body.setAttribute('data-theme', theme);\n  }, [theme]);\n\n  // 菜单导航重复点击当前\n  const reload = useCallback(() => setKey(key => key + 1), []);\n\n  // 点击左侧导航菜单\n  const onClickItem = useCallback(() => {\n    setTableData('root'); // 清空表格页数据\n  }, []);\n\n  return (\n    <ConfigProvider locale={zh_CN}>\n      <Layout className=\"fill\">\n        <Sider reload={reload} onClickItem={onClickItem} />\n        <Layout>\n          <Header />\n          <Content key={key} className={style.content}>\n            {children}\n          </Content>\n        </Layout>\n      </Layout>\n    </ConfigProvider>\n  );\n});\n","import React, { useState, useRef, useEffect, useCallback, useMemo, forwardRef, useImperativeHandle } from 'react';\nimport { useLocation } from 'react-router-dom';\nimport { Table, Divider, ConfigProvider, Pagination, Checkbox, Popover } from 'antd';\nimport { FormProps } from 'antd/es/form';\nimport { TableProps } from 'antd/es/table';\nimport { ColumnsType, ColumnGroupType } from 'antd/es/table/interface';\nimport { PaginationProps } from 'antd/es/pagination';\nimport { PopoverProps } from 'antd/es/popover';\nimport { SearchOutlined, UndoOutlined } from '@ant-design/icons';\nimport { TForm, useForm, useStates, combine } from 'common';\nimport { FormMobile, ButtonMobile } from '../page';\nimport { VirtualTable } from './virtual_table';\nimport { Interval } from '../../layout';\nimport { jsonParse, jsonStringify } from '@dyb881/json';\nimport { debounce } from 'lodash';\nimport classNames from 'classnames';\nimport style from './style.module.less';\n\nexport type TFormSearchProps = FormProps & {\n  buttons?: React.ReactNode; // 追加按钮\n};\n\n/**\n * 搜索表单\n */\nexport const FormSearch = forwardRef<TForm, TFormSearchProps>(({ children, className, buttons, ...props }, ref) => {\n  const formRef = useForm();\n  const { form, resetSubmit } = formRef;\n\n  useImperativeHandle(ref, () => formRef);\n\n  return (\n    <FormMobile form={form} layout=\"inline\" className={classNames(style.formSearch, className)} {...props}>\n      {children}\n      <Interval>\n        <ButtonMobile type=\"primary\" icon={<SearchOutlined />} htmlType=\"submit\">\n          搜索\n        </ButtonMobile>\n        <ButtonMobile icon={<UndoOutlined />} onClick={resetSubmit}>\n          重置\n        </ButtonMobile>\n        {buttons}\n      </Interval>\n    </FormMobile>\n  );\n});\n\nlet timeout: NodeJS.Timeout;\n\nexport type TTableMobileProps = Omit<TableProps<any>, 'columns'> & {\n  columns: Exclude<TableProps<any>['columns'], undefined>;\n  widthAddition?: number; // 列宽度之和的前提上追加宽度\n  key?: React.Attributes['key'];\n};\n\n/**\n * 表格\n * 默认使用 id 作为 key\n * 并自动计算高度\n */\nexport const TableMobile = combine<TTableMobileProps>(({ stores, columns, scroll, widthAddition = 0, ...props }) => {\n  const box = useRef<HTMLDivElement>(null);\n  const { states, setStates } = useStates({});\n  const { y, width, ...styles } = states;\n  const { collapsed, pageConfig, isMobile } = stores.view;\n\n  const resize = useCallback(() => {\n    timeout && clearTimeout(timeout);\n    if (!box.current) return;\n    const { firstElementChild, offsetTop, nextElementSibling, clientHeight } = box.current;\n    if (stores.view.isMobile) {\n      const height = firstElementChild?.clientHeight;\n      setStates({ height });\n      timeout = setTimeout(() => {\n        setStates({ height: undefined, y: undefined });\n      }, 300);\n      return;\n    }\n\n    setStates({ height: clientHeight, width: window.innerWidth - 32 - (stores.view.collapsed ? 80 : 200) });\n    let height = window.innerHeight - offsetTop - 82;\n    if (nextElementSibling) height -= nextElementSibling.clientHeight + 16;\n    const [thead] = firstElementChild?.getElementsByTagName('thead');\n    setStates({ height, y: height - thead.clientHeight });\n  }, []);\n\n  useEffect(() => {\n    timeout && clearTimeout(timeout);\n    timeout = setTimeout(resize, 300);\n  }, [pageConfig.componentSize, collapsed]);\n\n  useEffect(() => {\n    resize();\n    const resizeDebounce = debounce(resize, 300);\n    window.addEventListener('resize', resizeDebounce);\n    return () => window.removeEventListener('resizeDebounce', resizeDebounce);\n  }, []);\n\n  const { dataSource } = props;\n\n  // 列宽之和，用于横向滚动\n  const x = useMemo(() => toScrollX(columns) + widthAddition, [columns.length, widthAddition]);\n\n  // 移动端访问过滤浮动列\n  const mergedColumns = useMemo(() => (isMobile ? columns.map(({ fixed, ...column }) => column) : columns), [isMobile]);\n\n  const tableProps: TTableMobileProps = {\n    key: x,\n    rowKey: 'id',\n    pagination: false,\n    columns: mergedColumns,\n    scroll: { x, y, ...scroll },\n    ...props,\n  };\n\n  return (\n    <div ref={box} className=\"transition\" style={styles}>\n      {dataSource!?.length > 100 ? <VirtualTable tableWidth={width} {...tableProps} /> : <Table {...tableProps} />}\n    </div>\n  );\n});\n\nexport type TPaginationMobilePropsOnChange = (current: number, pageSize: number) => void;\n\nexport type TPaginationMobileProps = Omit<PaginationProps, 'onChange' | 'onShowSizeChange'> & {\n  onChange?: TPaginationMobilePropsOnChange;\n};\n\n/**\n * 自适应分页组件\n */\nexport const PaginationMobile = combine<TPaginationMobileProps>(({ stores, onChange, ...props }) => {\n  const { pageConfig, isMobile } = stores.view;\n  return (\n    <ConfigProvider componentSize=\"middle\">\n      <div className={style.pagination}>\n        <Pagination\n          size={pageConfig.componentSize}\n          simple={isMobile}\n          showQuickJumper\n          showSizeChanger\n          pageSizeOptions={['10', '20', '50', '100', '200', '500', '1000']}\n          showTotal={total => `总计 ${total} 条`}\n          onChange={onChange as any}\n          onShowSizeChange={onChange}\n          {...props}\n        />\n      </div>\n    </ConfigProvider>\n  );\n});\n\nexport type TColumnsSettingProps = PopoverProps & {\n  columns: ColumnsType;\n  value: string[];\n  onChange: (hides: string[]) => void;\n};\n\n/**\n * 列展示设置\n */\nexport const ColumnsSetting = forwardRef<Popover, TColumnsSettingProps>(\n  ({ columns, value, onChange, ...props }, ref) => {\n    const { length } = value;\n    const isAll = !length; // 是否全选\n\n    const clear = useCallback(() => onChange([]), []);\n\n    const title = useMemo(\n      () => (\n        <div className={style.columnsSetting}>\n          <Checkbox checked={isAll} indeterminate={!isAll} onClick={clear}>\n            列展示\n          </Checkbox>\n        </div>\n      ),\n      [isAll]\n    );\n\n    const content = useMemo(\n      () => (\n        <>\n          {columns.map((i, k) => {\n            const key = '' + (i.dataIndex || i.key || k);\n            const index = value.indexOf(key);\n            const checked = index === -1;\n\n            return (\n              <div className={`between-center ${style.columnsSetting}`} key={key}>\n                <Checkbox\n                  checked={checked}\n                  onClick={() => {\n                    checked ? value.push(key) : value.splice(index, 1);\n                    onChange([...value]);\n                  }}\n                >\n                  {i.title}\n                </Checkbox>\n                <span>{i.width || 'auto'}</span>\n              </div>\n            );\n          })}\n        </>\n      ),\n      [length]\n    );\n\n    return <Popover placement=\"bottomRight\" title={title} content={content} trigger=\"click\" ref={ref} {...props} />;\n  }\n);\n\n/**\n * 列展示设置 Hooks\n */\nexport const useColumnsSetting = (columns: ColumnsType) => {\n  const { pathname } = useLocation();\n  // 读取浏览器数据\n  const [value, onChange] = useState<string[]>(jsonParse(localStorage[`columns_setting_${pathname}`], []));\n\n  // 记录数据到浏览器\n  useEffect(() => {\n    localStorage[`columns_setting_${pathname}`] = jsonStringify(value);\n  }, [value.length]);\n\n  const columnsSettingProps = { columns, value, onChange };\n\n  const columnsHides = useMemo(() => {\n    return columns.filter((i, k) => {\n      const key = '' + (i.dataIndex || i.key || k);\n      return !value.includes(key);\n    });\n  }, [value.length]);\n\n  return { columnsSettingProps, columnsHides };\n};\n\n/**\n * 动作组件，自动添加分割线\n */\nexport const Action: React.FC = ({ children }) => (\n  <>\n    {React.Children.map(children, (child, index) => (\n      <>\n        {index > 0 && <Divider type=\"vertical\" />}\n        {child}\n      </>\n    ))}\n  </>\n);\n\n/**\n * 计算所有列之和，并追加宽度\n */\nexport const toScrollX = (columns: ColumnsType) => {\n  return columns.reduce((v, i) => {\n    let sum = (+i.width! || 0) + v;\n    const { children } = i as ColumnGroupType<any>;\n    if (children) sum += toScrollX(children);\n    return sum;\n  }, 0);\n};\n","import React, { useMemo } from 'react';\nimport { useLocation, useHistory } from 'react-router-dom';\nimport { PageHeader } from 'antd';\nimport { PageHeaderProps } from 'antd/es/page-header';\nimport { Breadcrumb, TBreadcrumbProps } from 'common';\nimport { getMenuNavDataTitle, getMenuNavDatas } from '../layout';\nimport { menuNavData } from 'configs';\n\ntype TRouterTitleProps = React.HTMLAttributes<HTMLSpanElement> & { before?: string; after?: string };\n\n/**\n * 路由标题\n */\nexport const RouterTitle: React.FC<TRouterTitleProps> = ({ before, after, ...props }) => {\n  const { pathname } = useLocation();\n\n  const title = useMemo(() => getMenuNavDataTitle(menuNavData, pathname), [pathname]);\n\n  return (\n    <span {...props}>\n      {before}\n      {title}\n      {after}\n    </span>\n  );\n};\n\n/**\n * 路由面包屑\n */\nexport const RouterBreadcrumb: React.FC<Partial<TBreadcrumbProps>> = ({ ...props }) => {\n  const { pathname } = useLocation();\n\n  const data = useMemo(() => {\n    const datas = getMenuNavDatas(menuNavData, pathname).map(i => ({ to: i.to, children: i.title }));\n    datas[datas.length - 1].to = undefined; // 最后一个不需要跳转\n    return datas;\n  }, [pathname]);\n\n  return <Breadcrumb data={data} {...props} />;\n};\n\nexport type TRouterPageHeaderProps = Partial<Omit<PageHeaderProps, 'onBack'>> & {\n  onBack?: true | PageHeaderProps['onBack'];\n};\n\n/**\n * 标题栏\n */\nexport const RouterPageHeader: React.FC<TRouterPageHeaderProps> = ({ onBack, ...props }) => {\n  const { goBack } = useHistory();\n\n  return <PageHeader title={<RouterTitle />} onBack={onBack === true ? goBack : onBack} {...props} />;\n};\n","import React, { useRef } from 'react';\nimport { ConfigProvider, BackTop, Spin, Button, Tooltip } from 'antd';\nimport { ReloadOutlined } from '@ant-design/icons';\nimport { FormProps } from 'antd/es/form';\nimport { ButtonProps } from 'antd/es/button';\nimport { ConfigProviderProps } from 'antd/es/config-provider';\nimport ImgSource, { IImgProps } from '@dyb881/img';\nimport '@dyb881/img/lib/style.css';\nimport { combine, Form, FormItem, TFormItemProps } from 'common';\nimport { RouterBreadcrumb } from './router_component';\nimport classNames from 'classnames';\nimport style from './style.module.less';\n\nexport type TPageBoxProps = React.HTMLAttributes<HTMLDivElement> & {\n  loading?: boolean | string;\n  configProviderProps?: ConfigProviderProps;\n};\n\n/**\n * 页面盒子\n */\nexport const PageBox: React.FC<TPageBoxProps> = ({ loading, children, className, configProviderProps, ...props }) => {\n  const box = useRef(null);\n\n  return (\n    <ConfigProvider getPopupContainer={() => box.current || document.body} {...configProviderProps}>\n      <div className={classNames(`fill overflow ${style.page}`, className)} ref={box} {...props}>\n        {box.current && <BackTop target={() => box.current!} style={{ right: 50 }} />}\n        <Spin spinning={!!loading} tip={typeof loading === 'string' ? loading : undefined}>\n          {children}\n        </Spin>\n      </div>\n    </ConfigProvider>\n  );\n};\n\n/**\n * 基础页面布局\n */\nexport const Page = combine<TPageBoxProps>(({ stores, configProviderProps, className, children, ...props }) => {\n  const { componentSize } = stores.view.pageConfig;\n\n  return (\n    <PageBox\n      configProviderProps={{ componentSize, ...configProviderProps }}\n      className={classNames(style[componentSize], className)}\n      {...props}\n    >\n      <RouterBreadcrumb />\n      {children}\n    </PageBox>\n  );\n});\n\n/**\n * 自适应表单\n */\nexport const FormMobile = combine<FormProps>(({ stores, layout, ...props }) => (\n  <Form layout={stores.view.isMobile ? 'vertical' : layout} {...props} />\n));\n\n/**\n * 自适应表单 Item\n */\nexport const FormItemMobile = combine<TFormItemProps>(({ stores, labelCol, wrapperCol, ...props }) => {\n  if (!stores.view.isMobile) Object.assign(props, { labelCol, wrapperCol });\n  return <FormItem {...props} />;\n});\n\n/**\n * 自适应按钮\n */\nexport const ButtonMobile = combine<ButtonProps>(({ stores, icon, children, ...props }) => {\n  const { isMobile, pageConfig } = stores.view;\n\n  return (isMobile || pageConfig.componentSize === 'small') && icon ? (\n    <Tooltip placement=\"top\" title={children}>\n      <Button shape=\"circle\" icon={icon} {...props} />\n    </Tooltip>\n  ) : (\n    <Button icon={icon} {...props}>\n      {children}\n    </Button>\n  );\n});\n\n/**\n * 图片组件\n */\nexport const Img: React.FC<IImgProps> = props => (\n  <ImgSource loadedTip={<Spin />} reloadTip={<ReloadOutlined />} {...props} />\n);\n","import React, { useState, useRef, useEffect, useMemo } from 'react';\nimport { Table } from 'antd';\nimport { TableProps } from 'antd/es/table';\nimport { VariableSizeGrid } from 'react-window';\nimport { combine } from 'common';\nimport styles from './style.module.less';\n\nexport type TVirtualTableProps = TableProps<any> & {\n  tableWidth?: number;\n};\n\n/**\n * 虚拟滚动表格\n */\nexport const VirtualTable = combine<TVirtualTableProps>(({ stores, tableWidth = 0, columns = [], ...props }) => {\n  const { componentSize } = stores.view.pageConfig;\n  const gridRef = useRef<VariableSizeGrid>(null);\n  const { scroll = {} } = props;\n  const { x = 0, y = 0 } = scroll;\n\n  useEffect(() => {\n    gridRef.current?.resetAfterIndices({\n      rowIndex: 0,\n      columnIndex: 0,\n      shouldForceUpdate: false,\n    });\n  }, [tableWidth]);\n\n  // 给剩余的列分配宽度，并过滤 fixed\n  const mergedColumns = useMemo(() => {\n    let laveWidth = +x;\n    const { length } = columns.filter(({ width }) => {\n      if (width) laveWidth -= +width;\n      return !width;\n    });\n    const width = Math.floor(laveWidth / length);\n    let mergedColumns = columns.map(({ fixed, ...column }) => (column.width ? column : { ...column, width }));\n\n    // 实际宽度大于滚动宽度时，放大列宽\n    if (tableWidth > x) {\n      const scale = tableWidth / +x;\n      mergedColumns = mergedColumns.map(({ width, ...column }) => {\n        return { ...column, width: Math.floor(+width! * scale) };\n      });\n    }\n\n    return mergedColumns;\n  }, [x, tableWidth]);\n\n  const [connectObject] = useState(() => {\n    const obj = {};\n    Object.defineProperty(obj, 'scrollLeft', {\n      get: () => null,\n      set: scrollLeft => {\n        if (gridRef.current) {\n          gridRef.current!.scrollTo({\n            scrollLeft,\n          } as any);\n        }\n      },\n    });\n    return obj;\n  });\n\n  const renderVirtualList = (rawData: any, { ref, onScroll }: any) => {\n    ref.current = connectObject;\n    return (\n      <VariableSizeGrid\n        ref={gridRef}\n        className=\"transition\"\n        height={y}\n        rowCount={rawData.length}\n        columnCount={mergedColumns.length}\n        rowHeight={() => rowHeights[componentSize]}\n        width={tableWidth}\n        onScroll={({ scrollLeft }) => onScroll({ scrollLeft })}\n        columnWidth={index => +mergedColumns[index].width!}\n      >\n        {({ columnIndex, rowIndex, style }) => {\n          const { dataIndex, render } = mergedColumns[columnIndex];\n          const data = rawData[rowIndex];\n          const column = data['' + dataIndex];\n\n          return (\n            <div style={{ padding: columnPadding[componentSize], ...style }} className={styles.virtualColumn}>\n              {render?.(column ?? data, data, rowIndex) || column}\n            </div>\n          );\n        }}\n      </VariableSizeGrid>\n    );\n  };\n\n  return (\n    <Table\n      {...props}\n      rowSelection={undefined}\n      columns={mergedColumns}\n      components={{\n        body: renderVirtualList,\n      }}\n    />\n  );\n});\n\nconst rowHeights = { large: 54, middle: 46, small: 38 };\n\nconst columnPadding = { large: 16, middle: 12, small: 8 };\n","import React from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { Divider, Tooltip } from 'antd';\nimport { PlusOutlined, ReloadOutlined, SettingOutlined } from '@ant-design/icons';\nimport { RouterPageHeader, TRouterPageHeaderProps } from '../router_component';\nimport { Page, TPageBoxProps, ButtonMobile } from '../page';\nimport { Interval } from '../../layout';\nimport {\n  TableMobile,\n  TTableMobileProps,\n  PaginationMobile,\n  TPaginationMobileProps,\n  ColumnsSetting,\n  useColumnsSetting,\n} from './components';\n\nexport type TPageTableProps = Pick<TPageBoxProps, 'loading'> &\n  Pick<TRouterPageHeaderProps, 'onBack' | 'extra'> &\n  Omit<TTableMobileProps, 'loading'> & {\n    add?: (() => void) | string; // 新建\n    reload?: () => void; // 刷新\n    paginationProps?: TPaginationMobileProps; // 分页数据\n  };\n\n/**\n * 表格页\n */\nexport const PageTable: React.FC<TPageTableProps> = ({\n  loading,\n  onBack,\n  extra,\n  add,\n  reload,\n  children,\n  paginationProps,\n  columns,\n  ...props\n}) => {\n  const { columnsSettingProps, columnsHides } = useColumnsSetting(columns!);\n  const { push } = useHistory();\n\n  return (\n    <Page loading={loading}>\n      <RouterPageHeader\n        onBack={onBack}\n        extra={\n          <>\n            {(extra || add) && (\n              <>\n                <Interval>\n                  {extra}\n                  {add && (\n                    <ButtonMobile\n                      type=\"primary\"\n                      icon={<PlusOutlined />}\n                      onClick={typeof add === 'string' ? () => push(add) : add}\n                    >\n                      新建\n                    </ButtonMobile>\n                  )}\n                </Interval>\n                <Divider type=\"vertical\" />\n              </>\n            )}\n            <Interval style={{ marginLeft: 0 }}>\n              {reload && (\n                <Tooltip placement=\"top\" title=\"刷新\">\n                  <ReloadOutlined className=\"pointer\" onClick={reload} />\n                </Tooltip>\n              )}\n              <Tooltip placement=\"left\" title=\"设置列展示\">\n                <ColumnsSetting {...columnsSettingProps}>\n                  <SettingOutlined className=\"pointer\" />\n                </ColumnsSetting>\n              </Tooltip>\n            </Interval>\n          </>\n        }\n      >\n        {children}\n      </RouterPageHeader>\n      <TableMobile columns={columnsHides} {...props} />\n      <PaginationMobile {...paginationProps} />\n    </Page>\n  );\n};\n","import { useRef, useCallback, useEffect } from 'react';\nimport { autorun } from 'mobx';\nimport { TForm, useStates, stores } from 'common';\nimport { TPaginationMobilePropsOnChange } from './components';\n\n/**\n * 表格状态\n */\nexport type TUseTableStates = {\n  search: object; // 搜索内容\n  current: number; // 当前页码\n  pageSize: number; // 每页展示多少条数据\n  total: number; // 数据总数\n  dataSource: any[]; // 表格数据\n  selectedRowKeys: React.ReactText[]; // 选中行\n  loading: boolean | string; // 加载中\n  [key: string]: any;\n};\n\nexport type TUseTableOptions = {\n  defaultStates?: Partial<TUseTableStates>; // 默认状态\n  tableDataKey?: string; // 表格数据 key\n};\n\n/**\n * 表格页 Hooks\n * 自定义 Hooks，内置表格页常用数据\n */\nexport const useTable = (getList?: () => void, options?: TUseTableOptions) => {\n  const { getTableData, setTableData } = stores.view;\n  const { defaultStates, tableDataKey = 'root' } = options || {};\n  const formRef = useRef<TForm>(null);\n  const { states, setStates } = useStates<TUseTableStates>({\n    search: {},\n    current: 1,\n    pageSize: 20,\n    total: 0,\n    dataSource: [],\n    selectedRowKeys: [],\n    loading: false,\n    ...defaultStates, // 写入默认值\n    ...getTableData(tableDataKey), // 获取表格缓存数据\n  });\n  const { search, current, pageSize, total, dataSource, selectedRowKeys, loading } = states;\n\n  useEffect(() => {\n    // 写入默认值\n    formRef.current?.form.setFieldsValue(search);\n\n    return autorun(() => {\n      // 根据窗口宽度调整 pageSize\n      stores.view.isMobile && setStates({ pageSize: 20 });\n    });\n  }, []);\n\n  /**\n   * use 监听条件，数组的任意一个值发生变动时，执行对应更新\n   */\n  const useList = [current, pageSize, JSON.stringify(search)];\n\n  /**\n   * 根据监听刷新数据\n   */\n  useEffect(() => {\n    // 缓存表格数据\n    setTableData(tableDataKey, { search, current, pageSize });\n    // 请求数据\n    getList?.();\n  }, useList);\n\n  /**\n   * 设置加载状态\n   */\n  const setLoading = useCallback((loading: TUseTableStates['loading']) => setStates({ loading }), []);\n\n  /**\n   * 表单提交\n   */\n  const onFinish = useCallback((search: TUseTableStates['search']) => setStates({ search, current: 1 }), []);\n\n  /**\n   * 分页变动\n   */\n  const paginationOnChange = useCallback<TPaginationMobilePropsOnChange>(\n    (current, pageSize) => setStates({ current, pageSize }),\n    []\n  );\n\n  /**\n   * 表格选中\n   */\n  const rowSelectionOnChange = useCallback(\n    (selectedRowKeys: TUseTableStates['selectedRowKeys']) => setStates({ selectedRowKeys }),\n    []\n  );\n\n  /**\n   * 表格页\n   */\n  const pageTableProps = {\n    // 分页配置\n    paginationProps: { current, pageSize, total, onChange: paginationOnChange },\n    dataSource,\n    loading,\n    reload: getList,\n    rowSelection: { selectedRowKeys, onChange: rowSelectionOnChange },\n  };\n\n  /**\n   * 搜索框\n   */\n  const formSearchProps = {\n    onFinish,\n    ref: formRef,\n  };\n\n  return { states, setStates, setLoading, pageTableProps, formSearchProps, useList, getList };\n};\n","import React, { useRef } from 'react';\nimport { Modal, ConfigProvider } from 'antd';\nimport { FormProps } from 'antd/es/form';\nimport { ModalProps } from 'antd/es/modal';\nimport { SaveOutlined } from '@ant-design/icons';\nimport { FormMobile } from '../page';\nimport classNames from 'classnames';\nimport style from './style.module.less';\n\nexport type TFormLayoutProps = FormProps & {\n  maxWidth?: number;\n  cols: [number, number]; // 宽度比\n};\n\n/**\n * 表单布局\n */\nexport const FormLayout: React.FC<TFormLayoutProps> = ({ className, maxWidth, cols, title, ...props }) => {\n  return (\n    <FormMobile\n      layout=\"horizontal\"\n      className={classNames(style.formLayout, className)}\n      style={{ maxWidth }}\n      labelCol={{ span: cols[0] }}\n      wrapperCol={{ span: cols[1] }}\n      {...props}\n    />\n  );\n};\n\nexport type TFormModal = Pick<ModalProps, 'title' | 'visible' | 'onOk' | 'onCancel' | 'width' | 'confirmLoading'> &\n  Partial<Omit<TFormLayoutProps, 'title'>> & {\n    modalProps?: ModalProps;\n  };\n\n/**\n * 表单弹窗\n */\nexport const FormModal: React.FC<TFormModal> = ({\n  title,\n  visible,\n  onOk,\n  onCancel,\n  width,\n  confirmLoading,\n  modalProps,\n  cols = [5, 16],\n  ...props\n}) => {\n  const box = useRef<HTMLDivElement>(null);\n\n  return (\n    <Modal\n      forceRender\n      maskClosable={false}\n      okText=\"保存\"\n      okButtonProps={{ icon: <SaveOutlined /> }}\n      {...{ title, visible, onOk, onCancel, width, confirmLoading }}\n      {...modalProps}\n    >\n      <ConfigProvider getPopupContainer={() => box.current || document.body}>\n        <div ref={box}>\n          <FormLayout cols={cols} name=\"formModal\" {...props} />\n        </div>\n      </ConfigProvider>\n    </Modal>\n  );\n};\n","import React, { forwardRef, useImperativeHandle } from 'react';\nimport { Button } from 'antd';\nimport { SaveOutlined, UndoOutlined } from '@ant-design/icons';\nimport { RouterPageHeader, TRouterPageHeaderProps } from '../router_component';\nimport { Page, TPageBoxProps, FormItemMobile } from '../page';\nimport { FormLayout, TFormLayoutProps } from './components';\nimport { Interval } from '../../layout';\nimport { TForm, useForm } from 'common';\n\nexport type TPageFormProps = Pick<TPageBoxProps, 'loading'> &\n  Pick<TRouterPageHeaderProps, 'extra'> &\n  Partial<TFormLayoutProps>;\n\n/**\n * 表格页\n */\nexport const PageForm = forwardRef<TForm, TPageFormProps>(\n  ({ loading, extra, children, maxWidth = 750, cols = [3, 12], ...props }, ref) => {\n    const formRef = useForm();\n    const { form, reset } = formRef;\n\n    useImperativeHandle(ref, () => formRef);\n\n    const [offset, span] = cols;\n\n    return (\n      <Page loading={loading}>\n        <RouterPageHeader onBack extra={extra} />\n        <FormLayout name=\"pageForm\" {...{ form, maxWidth, cols }} {...props}>\n          {children}\n          <FormItemMobile wrapperCol={{ span, offset }}>\n            <Interval left>\n              <Button type=\"primary\" icon={<SaveOutlined />} htmlType=\"submit\">\n                保存\n              </Button>\n              <Button icon={<UndoOutlined />} onClick={reset}>\n                重置\n              </Button>\n            </Interval>\n          </FormItemMobile>\n        </FormLayout>\n      </Page>\n    );\n  }\n);\n","import { useRef, useEffect, useCallback } from 'react';\nimport { useStates, TForm, useForm } from 'common';\nimport { FormProps } from 'antd/es/form';\nimport { ValidateErrorEntity } from 'rc-field-form/es/interface';\n\n/**\n * 表单状态\n */\nexport type TUseInfoStates = {\n  data: any; // 表单默认信息\n  loading: boolean | string; // 加载中\n};\n\nexport type TUseInfoOptions = {\n  defaultData?: TUseInfoStates['data']; // 默认值\n  getData?: () => void; // 获取数据\n  onFinish?: FormProps['onFinish']; // 保存数据\n};\n\n/**\n * 表单信息页 Hooks\n * 自定义 Hooks，内置表格页常用数据\n */\nexport const useInfo = (options?: TUseInfoOptions) => {\n  const { defaultData, getData, onFinish } = options || {};\n  const formRef = useRef<TForm>(null);\n  const { states, setStates } = useStates<TUseInfoStates>({ data: defaultData, loading: false });\n  const { data, loading } = states;\n\n  useEffect(() => {\n    // 获取默认值\n    getData?.();\n  }, []);\n\n  /**\n   * 写入表单数据\n   */\n  const setData = useCallback((data: TUseInfoStates['data']) => {\n    setStates({ data });\n    formRef.current?.reset(); // 写入数据后重置表单\n  }, []);\n\n  /**\n   * 设置加载状态\n   */\n  const setLoading = useCallback((loading: TUseInfoStates['loading']) => setStates({ loading }), []);\n\n  /**\n   * 滚动到错误输入框\n   */\n  const onFinishFailed = useCallback((errorInfo: ValidateErrorEntity) => {\n    formRef.current?.form.scrollToField(errorInfo.errorFields[0].name[0]);\n  }, []);\n\n  const pageFormProps = { loading, ref: formRef, initialValues: data, onFinishFailed, onFinish };\n\n  return { data, setData, setLoading, pageFormProps, formRef };\n};\n\n/**\n * 弹窗表单状态\n */\nexport type TUseInfoModalStates = {\n  data: any; // 表单默认信息\n  loading: boolean; // 加载中\n  visible: boolean; // 弹窗显示\n  isEdit: boolean; // 是否编辑\n};\n\nexport type TInfoModalEdit = (data: TUseInfoModalStates['data']) => void;\n\nexport type TUseInfoModalOptions = {\n  defaultData?: TUseInfoModalStates['data']; // 默认值\n  getData?: () => void; // 获取数据\n  onFinish?: FormProps['onFinish']; // 保存数据\n};\n\n/**\n * 弹窗表单 Hooks\n */\nexport const useInfoModal = (options?: TUseInfoModalOptions) => {\n  const { defaultData, getData, onFinish } = options || {};\n  const formRef = useForm();\n  const { form, submit, reset } = formRef;\n  const { states, setStates } = useStates<TUseInfoModalStates>({\n    data: defaultData,\n    loading: false,\n    visible: false,\n    isEdit: false,\n  });\n  const { data, loading, visible, isEdit } = states;\n\n  useEffect(() => {\n    // 获取默认值\n    if (visible) {\n      getData?.();\n      reset();\n    }\n  }, [visible]);\n\n  /**\n   * 写入表单数据\n   */\n  const setData = useCallback((data: TUseInfoModalStates['data']) => {\n    setStates({ data });\n    reset(); // 写入数据后重置表单\n  }, []);\n\n  /**\n   * 直接展示表单，一般用于新增\n   */\n  const add = useCallback(() => setStates({ data: defaultData, visible: true, isEdit: false }), []);\n\n  /**\n   * 写入表单默认数据并展示表单，一般用于编辑\n   */\n  const edit = useCallback<TInfoModalEdit>(data => setStates({ data, visible: true, isEdit: true }), []);\n\n  /**\n   * 隐藏弹窗\n   */\n  const hide = useCallback(() => setStates({ visible: false, loading: false }), []);\n\n  /**\n   * 设置加载状态\n   */\n  const setLoading = useCallback((loading: TUseInfoModalStates['loading']) => setStates({ loading }), []);\n\n  const formModalProps = {\n    form,\n    initialValues: data,\n    confirmLoading: loading,\n    visible,\n    onCancel: hide,\n    onOk: submit,\n    onFinish,\n  };\n\n  return { formModalProps, data, setData, isEdit, add, edit, hide, setLoading, formRef };\n};\n","export * from './layout'; // 页面布局\nexport * from './content'; // 页面内容\n","/**\n * 导出必须文件\n * 注意循环引用导致的代码运行报错\n */\nexport * from './request'; // 请求器\nexport * from './stores'; // 状态管理\nexport * from './routers'; // 导出路由\nexport * from './tool'; // 导出工具函数\nexport * from './types'; // 导出常用类型\n\nexport * from './antd'; // 导出二次封装组件\n","import qs from 'qs';\n\nconst { search, protocol } = window.location;\n\n/**\n * 是否生产环境\n */\nexport const isProduction = protocol === 'https:';\n\n/**\n * 链接参数\n * http://localhost?val=1 => params = {val: 1}\n */\nexport const params = qs.parse(search.slice(1));\n","import { TFetchRequestConfig } from '@dyb881/fetch-request';\nimport { isProduction, params } from './public';\nimport { message } from 'antd';\n\n// ------------------------------- 请求器配置 --------------------------------- //\n\n/**\n * 生产地址\n */\nexport let host = 'https://www.test.com';\n\n/**\n * 测试地址\n */\nconst hostTest = 'http://www.test.com';\n\n/**\n * 会根据 isProduction 自行变动，需要配置对应的生产和测试地址\n * 测试环境下链接参数 params.host 可强制变更 host\n */\nif (!isProduction) {\n  host = params.host || hostTest;\n}\n\n/**\n * 请求参数配置\n */\nexport const requestConfig: TFetchRequestConfig = {\n  host, // API 地址\n  apiPath: '/api', // API 目录\n  interceptorsResponse: (res, _config) => {\n    res.ok || message.error(res.errorText);\n    return res;\n  },\n};\n\n// ------------------------------- 响应处理配置 --------------------------------- //\n\n/**\n * 状态码 key\n * 返回结果中，用于匹配状态码的 key\n */\nexport const statusCodeKeys = ['code', 'status'];\n\n/**\n * 成功状态码\n * 决定请求器响应结果 res.ok:boolean 返回的值\n */\nexport const successCodes = [0, '0', 200, '0000', 1000, 1001, 1002, 1003, 1004, 1005, 2000];\n\n/**\n * 错误信息字段\n */\nexport const messageKeys = ['msg', 'message', 'Message'];\n","import React from 'react';\nimport { UserOutlined, TeamOutlined, UnorderedListOutlined, FolderFilled, SettingOutlined } from '@ant-design/icons';\nimport { TMenuNavData } from 'components';\n\n/**\n * 左侧导航数据和标题数据\n * 除了菜单导航数据外，path 是相对 /src/pages 引用文件的路径\n */\nexport const menuNavData: TMenuNavData[] = [\n  {\n    icon: <UserOutlined />,\n    title: '管理员',\n    children: [\n      {\n        to: '/admin/account',\n        title: '管理员账号',\n        children: [\n          { to: '/admin/account/info', title: '新建管理员账号', hidden: true },\n          { to: '/admin/account/info/:id', title: '编辑管理员账号', hidden: true },\n        ],\n      },\n      { to: '/admin/role', title: '管理员角色' },\n    ],\n  },\n  {\n    icon: <TeamOutlined />,\n    title: '用户中心',\n    children: [{ title: '用户账号' }, { title: '用户角色' }],\n  },\n  {\n    icon: <UnorderedListOutlined />,\n    title: '栏目管理',\n    children: [{ title: '栏目分类' }, { title: '栏目列表' }],\n  },\n  {\n    icon: <FolderFilled />,\n    title: '文件管理',\n    children: [{ title: '图片' }, { title: '视频' }, { title: '音频' }, { title: '其他' }],\n  },\n  {\n    icon: <SettingOutlined />,\n    title: '系统设置',\n    children: [{ title: '站点配置' }, { title: '文件配置' }, { title: '自定义配置' }, { title: '系统日志' }],\n  },\n];\n","/**\n * 导出必须文件\n * 注意循环引用导致的代码运行报错\n */\nexport * from './public'; // 公用配置\nexport * from './request'; // 请求配置\nexport * from './routers'; // 路由配置\n\nexport * from './menuNavData'; // 菜单导航数据\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"interval\":\"interval--1F7HL\",\"left\":\"left--244MW\",\"right\":\"right--24sWO\",\"header\":\"header--2_IpJ\",\"logo\":\"logo--3q5z8\",\"userName\":\"userName--1_RVV\",\"hidden\":\"hidden--153Jq\",\"showHeader\":\"showHeader--10xPC\",\"sider\":\"sider--AZb7J\",\"menuIcon\":\"menuIcon--2Elif\",\"content\":\"content--3cBmi\"};","var map = {\n\t\"./admin/account\": 133,\n\t\"./admin/account/\": 133,\n\t\"./admin/account/config\": 57,\n\t\"./admin/account/config.tsx\": 57,\n\t\"./admin/account/index\": 133,\n\t\"./admin/account/index.tsx\": 133,\n\t\"./admin/account/info\": 225,\n\t\"./admin/account/info.tsx\": 225,\n\t\"./admin/account/info_modal\": 137,\n\t\"./admin/account/info_modal.tsx\": 137,\n\t\"./admin/role\": 134,\n\t\"./admin/role/\": 134,\n\t\"./admin/role/index\": 134,\n\t\"./admin/role/index.tsx\": 134,\n\t\"./noLogin\": 92,\n\t\"./noLogin/\": 92,\n\t\"./noLogin/index\": 92,\n\t\"./noLogin/index.tsx\": 92,\n\t\"./noLogin/login\": 109,\n\t\"./noLogin/login/\": 109,\n\t\"./noLogin/login/index\": 109,\n\t\"./noLogin/login/index.tsx\": 109,\n\t\"./noLogin/login/style.module.less\": 148\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 438;","module.exports = __webpack_public_path__ + \"static/media/login_bg.bef6d556.jpg\";","import React from 'react';\nimport { hot } from 'react-hot-loader/root';\nimport { Router, Pages } from 'common/routers'; // 直接引用 common 会导致循环引用，build 后运行报错\nimport { combine } from 'common/stores'; // 直接引用 common 会导致循环引用，build 后运行报错\nimport { LayoutBox } from 'components';\nimport NoLogin from 'pages/noLogin'; // 未登录页面\nimport 'common/style'; // 默认全局样式\n\n/**\n * Router 用于注册基础路由\n * Pages 路由页面集合\n */\nconst App = combine(({ stores }) => {\n  const { isLogin } = stores.user;\n\n  return (\n    <Router>\n      {isLogin ? (\n        <LayoutBox>\n          <Pages />\n        </LayoutBox>\n      ) : (\n        <NoLogin />\n      )}\n    </Router>\n  );\n});\n\n// 热更新\nexport default process.env.NODE_ENV === 'development' ? hot(App) : App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","import React from 'react';\nimport { Badge } from 'antd';\nimport { Link } from 'react-router-dom';\nimport { TableProps } from 'antd/es/table';\nimport { Action, TInfoModalEdit } from 'components';\n\n/**\n * 生成表格配置数据\n */\nexport const createColumns = (edit: TInfoModalEdit) => {\n  const columns: TableProps<any>['columns'] = [\n    { title: '用户名', dataIndex: 'username', fixed: 'left', width: 120 },\n    { title: '昵称', dataIndex: 'nickname', width: 160 },\n    { title: '角色', dataIndex: 'role', render: v => options.role[v], width: 120 },\n    { title: '注册IP', dataIndex: 'regip', width: 160 },\n    { title: '登陆IP', dataIndex: 'loginip', width: 160 },\n    { title: '注册时间', dataIndex: 'regtime', width: 180 },\n    { title: '登陆时间', dataIndex: 'logintime', width: 180 },\n    { title: '状态', dataIndex: 'state', width: 100, fixed: 'right', render: v => renders.state[v] },\n    {\n      title: '操作',\n      key: 'action',\n      width: 180,\n      fixed: 'right',\n      render: data => (\n        <Action>\n          <span className=\"edit pointer\" onClick={() => edit(data)}>\n            弹窗编辑\n          </span>\n          <Link to={`/admin/account/info/${data.id}`} className=\"edit\">\n            编辑\n          </Link>\n          <span className=\"delete pointer\">删除</span>\n        </Action>\n      ),\n    },\n  ];\n\n  return columns;\n};\n\nexport const options = {\n  role: ['超级管理员', '编辑员'],\n  state: ['未审核', '已审核', '冻结'],\n};\n\nexport const renders = {\n  state: [\n    <Badge status=\"default\" text=\"未审核\" />,\n    <Badge status=\"success\" text=\"已审核\" />,\n    <Badge status=\"processing\" text=\"冻结\" />,\n  ],\n};\n","import React from 'react';\n\n/**\n * 选项值\n */\nexport type TOption<T = any> = { value: T; label: React.ReactNode };\n\n/**\n * 可被转为选项值\n */\nexport type TOptions<T = TOption> = T[] | (string | number)[] | object;\n\n/**\n * 选项值 Props\n */\nexport type TOptionsProps<T = TOption> = {\n  options?: TOptions<T>;\n};\n\n/**\n * 转为选项值\n * ['v1','v2'] => [{value: 1, label: 'v1'}, {value: 2, label: 'v2'}]\n */\nexport const toOptions = (options: TOptions) => {\n  const isArray = Array.isArray(options);\n  return Object.keys(options).map(k => {\n    const option = (options as any)[k];\n    if (typeof option === 'object') return option;\n    return { label: option, value: isArray ? +k : k };\n  });\n};\n\n/**\n * 判断是否有效 react 组件\n */\nexport const isElement = (e: any): e is JSX.Element => {\n  return React.isValidElement(e);\n};\n\n/**\n * 仿 class state 的 hooks\n * 新状态会合并到原状态\n */\nexport const useStates = <T extends any>(defaultStates: T) => {\n  const reducer = (states: T, newStates: Partial<T> & { [key: string]: any }) => ({ ...states, ...newStates });\n  const [states, setStates] = React.useReducer(reducer, defaultStates);\n  return { states, setStates };\n};\n","import { post, get } from 'common';\n\n/**\n * 对应模块下有多个接口\n * 当模块太多的时候可以分类拓展出多个文件并从该文件导出\n */\nexport const admin = {\n  account: {\n    getList: (data: any) => get('/admin/account', data, '获取管理员账号列表'),\n    details: (id: string) => get('/admin/account/details', { id }, '获取管理员账号详情'),\n    edit: (data: any) => post('/admin/account/edit', data, '编辑管理员账号'),\n    add: (data: any) => post('/admin/account/add', data, '添加管理员账号'),\n  },\n};\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formSearch\":\"formSearch--2eZkH\",\"pagination\":\"pagination--GjJzw\",\"columnsSetting\":\"columnsSetting--3DrIc\",\"virtualColumn\":\"virtualColumn--1h8SX\"};","import React from 'react';\nimport Routers from '@dyb881/router';\n\n/**\n * 未登录页面路由\n */\nconst routersConfig = {\n  '/login': require('./login').default,\n};\n\nexport default () => <Routers routers={routersConfig} />;\n"],"sourceRoot":""}