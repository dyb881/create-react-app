{"version":3,"sources":["pages/admin/account/index.tsx","pages/admin/role/index.tsx","pages/home/index.tsx","pages/user/index.jsx","common/index.ts","common/request.ts","images/logo.ico","common/antd/form/form.ts","common/antd/form/form_item.tsx","common/antd/input.tsx","common/antd/radio.tsx","common/antd/menu.tsx","common/antd/breadcrumb.tsx","common/antd/index.ts","stores/view.ts","stores/user.ts","common/stores.tsx","stores/index.ts","components/content/style.module.less","components/layout/style.module.less","configs/public.ts","configs/request.ts","configs/menuNavData.tsx","configs/index.ts","pages sync /^/.//.*$","App.tsx","serviceWorker.ts","index.tsx","common/tool.ts","components/layout/menu_nav.tsx","components/layout/header.tsx","components/layout/sider.tsx","components/layout/layout.tsx","components/content/router_component.tsx","components/content/page.tsx","components/index.ts","common/routers.tsx","configs/routers.ts"],"names":["to","className","style","box","backgroundColor","interceptorsRequest","requestConfig","interceptorsResponse","config","FetchReques","log","request","res","errorText","responseType","code","statusCodeKeys","reduce","key","undefined","successCodes","includes","error","messageKeys","msg","ok","response","baseURL","get","post","put","patch","del","upload","module","exports","Form","FormItem","hidden","validator","select","required","placeholder","label","name","children","rules","valuePropName","formItemProps","props","text","push","message","_rule","value","a","async","space","test","Promise","reject","Item","React","cloneElement","Input","maxLength","autoComplete","InputNumber","step","precision","RadioButton","options","radioButtons","useMemo","toOptions","map","Button","JSON","stringify","Group","Menu","data","onClickItem","onClick","inlineCollapsed","openKeys","onOpenChange","menuTree","computeProps","param","item","prefix","i","k","title","icon","menuItemTitle","length","SubMenu","data-info","Breadcrumb","breadcrumbItems","itemProps","View","this","resize","window","addEventListener","action","w","innerWidth","isMobile","collapsed","pageConfig","hiddenMenu","observable","jsonParse","localStorage","theme","hiddenHeader","menuIconTop","headerIconRight","document","User","bind","isLogin","when","configure","enforceActions","computedRequiresReaction","stores","view","user","onLogin","combine","Component","Observer","observer","location","search","isProduction","protocol","params","qs","parse","slice","host","apiPath","_config","menuNavData","UserOutlined","TeamOutlined","UnorderedListOutlined","FolderFilled","SettingOutlined","webpackContext","req","id","webpackContextResolve","__webpack_require__","o","e","Error","keys","Object","resolve","process","Boolean","hostname","match","ReactDOM","render","getElementById","navigator","serviceWorker","ready","then","registration","unregister","isArray","Array","option","useStates","defaultStates","useReducer","states","newStates","setStates","MenuNav","reload","useHistory","pathname","useLocation","selectedKeys","menuNavDataHidden","useCallback","useEffect","selectedKey","getOpenKeys","isSelect","forEach","matchPath","path","exact","filter","getMenuNavDataRouters","routers","split","Header","useState","showHeader","setShowHeader","visible","setVisible","setPageConfig","onShow","onClose","onShowHeader","onValuesChange","changeValue","values","classNames","header","left","src","require","alt","logo","MenuSwitch","right","size","userName","fullscreen","componentSize","initialValues","buttonStyle","dark","light","min","MobileOutlined","siderOnChange","MenuUnfoldOutlined","MenuFoldOutlined","Fullscreen","getElement","documentElement","isFullscreen","setIsFullscreen","s","screenfull","isEnabled","exit","content","FullscreenExitOutlined","FullscreenOutlined","Sider","isCollapsed","sider","defaultTitle","mode","menuIcon","top","moment","locale","Content","LayoutBox","setKey","body","setAttribute","zh_CN","RouterTitle","before","after","getMenuNavDataTitle","menuNavDatatitle","RouterBreadcrumb","datas","getMenuNavDatas","menuNavDatas","childrenMenuNavDatas","onBack","goBack","Page","loading","useRef","getPopupContainer","current","page","ref","target","spinning","tip","type","listen","routersProps","routersConfig","component","default","router","createMatch","history","createHashHistory","createBrowserHistory","Router","Pages","createRouters","routersOptions","transition","setTitle"],"mappings":"8GAAA,mCAGe,qBACb,OACE,kBAAC,IAAD,KACE,kBAAC,IAAD,MADF,S,iCCLJ,mCAGe,qBACb,OACE,wCACU,kBAAC,IAAD,CAAMA,GAAG,kBAAT,iB,iCCNd,qDAIe,qBACb,OACE,yBAAKC,UAAS,eAAUC,IAAMC,MAA9B,QACO,kBAAC,IAAD,CAAMH,GAAG,SAAT,c,iCCPX,mCAGe,qBACb,OACE,yBAAKC,UAAU,OAAOC,MAAO,CAAEE,gBAAiB,SAAhD,gBACK,kBAAC,IAAD,CAAMJ,GAAG,KAAT,c,gCCNT,o8B,2FCGQK,EAAyDC,IAAzDD,oBAAqBE,EAAoCD,IAApCC,qBAAyBC,E,YAAWF,I,kDAKF,IAAIG,IAAJ,eAC1DD,EAD0D,CAE7DH,oBAAqB,SAAAG,GAGnB,OAFIH,IAAqBG,EAASH,EAAoBG,IACtDE,IAAIC,QAAQH,GACLA,GAETD,qBAAsB,SAACK,EAAKJ,GAC1B,IAAKI,EAAIC,WAAqC,SAAxBL,EAAOM,aAAyB,CAEpD,IAAMC,EAAOC,IAAeC,QAAO,SAACF,EAAMG,GAAP,uBAAeN,EAAIM,UAAnB,QAA2BH,SAAMI,GAE/DC,IAAaC,SAASN,KACzBH,EAAIU,MAAQP,EAEZH,EAAIC,UAAYU,IAAYN,QAAO,SAACO,EAAKN,GAAN,OAAcN,EAAIM,IAAQM,IAAK,6BAMtE,OAHAZ,EAAIa,IAAMb,EAAIC,UACVN,IAAsBK,EAAML,EAAqBK,EAAKJ,IAC1DE,IAAIgB,SAASd,EAAKJ,EAAQI,EAAIa,IACvBb,M,EArBIe,Q,EAASC,I,EAAKC,K,EAAMC,I,EAAKC,M,EAAOC,I,EAAKC,Q,wCCRpDC,EAAOC,QAAU,IAA0B,kC,0ECM9BC,EAAI,I,gCCUJC,EAAqC,SAAC,GAa5C,IAZLC,EAYI,EAZJA,OACAC,EAWI,EAXJA,UACAC,EAUI,EAVJA,OACAC,EASI,EATJA,SACAC,EAQI,EARJA,YACAC,EAOI,EAPJA,MACAC,EAMI,EANJA,KACAC,EAKI,EALJA,SAKI,IAJJC,aAII,MAJI,GAIJ,EAHJC,EAGI,EAHJA,cACAC,EAEI,EAFJA,cACGC,EACC,0IAEJ,GAAIX,EAAQ,OAAO,KAInB,GAFKO,IAAUA,EAAW,kBAAC,QAAD,OAEtBD,EAAM,CAER,IAAIM,EAAOV,EAAS,qBAAQ,qBAEP,kBAAVG,IAAoBO,GAAQP,GAGnCF,GACFK,EAAMK,KAAK,CACTV,UAAU,EACVW,SAAsB,IAAbX,EAAoBA,EAAkC,kBAAhBC,EAA2BA,EAAcQ,IAKxFR,IACFO,EAAMP,aAA8B,IAAhBA,EAAuBA,EAAkC,kBAAbD,EAAwBA,EAAWS,GAIrGJ,EAAMK,KAAK,CACTZ,UAAW,SAAOc,EAAOC,GAAd,eAAAC,EAAAC,OAAA,mDAGLF,GAA0B,kBAAVA,IAAuBG,EAAMC,KAAKJ,KACpD9B,EAAG,UAAuB,kBAAVmB,EAAqBA,EAAQ,qBAA1C,yCAGAnB,IAAOe,EAPH,kCAAAgB,EAAA,MAO0BhB,EAAUe,IAPpC,OAOc9B,EAPd,sBASTA,GATS,uCAAA+B,EAAA,MASKI,QAAQC,OAAOpC,IATpB,wCAcf,OACE,sBAAMqC,KAAN,cAAe,CAAElB,QAAOC,OAAME,QAAOC,iBAAqBC,GACvDc,IAAMC,aAAalB,EAAUI,KAQ9BQ,EAAQ,0B,wFClEDO,EAA8B,SAAAf,GAAK,OAAI,qCAAagB,UALxC,IAK8DC,aAAa,OAAUjB,KAwBjGkB,EAA0C,SAAAlB,GAAK,OAAI,qCAAmBmB,KAAM,EAAGC,UAAW,GAAOpB,K,uDClBjGqB,EAAqC,SAAC,GAAgC,IAAD,IAA7BC,eAA6B,MAAnB,GAAmB,EAAZtB,EAAY,2BAC1EuB,EAAeC,mBAAQ,WAC3B,OAAOC,YAAUH,GAASI,KAAI,gBAAGrB,EAAH,EAAGA,MAAOX,EAAV,EAAUA,MAAV,OAC5B,sBAAaiC,OAAb,CAAoB1D,IAAKoC,EAAOA,MAAOA,GACpCX,QAGJ,CAACkC,KAAKC,UAAUP,KAEnB,OAAO,sBAAaQ,MAAU9B,EAAQuB,I,iBCT3BQ,EAA6B,SAAC,GAQpC,IAPLC,EAOI,EAPJA,KACAC,EAMI,EANJA,YACAC,EAKI,EALJA,QACAC,EAII,EAJJA,gBACAC,EAGI,EAHJA,SACAC,EAEI,EAFJA,aACGrC,EACC,4FACEJ,EAAW4B,mBAAQ,kBAAMc,EAASN,KAAO,IAEzCO,EAAeJ,EAAkB,GAAK,CAAEC,WAAUC,gBAQxD,OACE,qCAAYH,QAPM,SAACM,GAAuB,IAClCC,EAAcD,EAAdC,KAAMxE,EAAQuE,EAARvE,IACH,OAAXgE,QAAW,IAAXA,KAAcQ,EAAKzC,MAAM,aAAc/B,EAAKuE,GACrC,OAAPN,QAAO,IAAPA,KAAUM,KAI4BD,EAAkBvC,GACrDJ,IAQD0C,EAAW,SAAXA,EAAYN,GAAuC,IAApBU,EAAmB,uDAAV,MAC5C,OAAOV,EAAKN,KAAI,SAACiB,EAAGC,GAAO,IACjBC,EAA0BF,EAA1BE,MAAOC,EAAmBH,EAAnBG,KAAMlD,EAAa+C,EAAb/C,SACf3B,EAAG,UAAMyE,EAAN,YAAgBE,GACnBG,EACJ,oCACGD,EACD,8BAAOD,IAGX,OAAe,OAARjD,QAAQ,IAARA,OAAA,EAAAA,EAAUoD,QACf,sBAAYC,QAAZ,CAAoBhF,IAAKA,EAAK4E,MAAOE,GAClCT,EAAS1C,EAAU3B,IAGtB,sBAAY2C,KAAZ,CAAiB3C,IAAKA,EAAKiF,YAAWP,GACnCI,O,uCCpDII,EAAyC,SAAC,GAAwB,IAAtBnB,EAAqB,EAArBA,KAAShC,EAAY,wBACtEoD,EAAkB5B,mBACtB,kBACEQ,EAAKN,KAAI,WAAoCkB,GAApC,IAAGS,EAAH,EAAGA,UAAWtG,EAAd,EAAcA,GAAI6C,EAAlB,EAAkBA,SAAa+C,EAA/B,oDACP,sBAAkB/B,KAAlB,eAAuB3C,IAAK2E,GAAOS,GAChCtG,EACC,kBAAC,IAAD,eAAMA,GAAIA,GAAQ4F,GACf/C,GAGHA,QAIR,CAACgC,KAAKC,UAAUG,KAGlB,OAAO,sBAAsBhC,EAAQoD,I,qBC9BvC,+O,gLCOqBE,G,EACnB,aAAe,4TACbC,KAAKC,SACLC,OAAOC,iBAAiB,SAAU,IAASH,KAAKC,OAAQ,O,oCAMzDG,K,oFAAgB,WAAO,IACFC,EAAMH,OAAlBI,WACJD,GAAK,KACP,EAAKE,UAAW,EAChB,EAAKC,WAAY,IAEjB,EAAKD,SAAW,EAAKE,WAAWC,WAChC,EAAKF,UAAYH,GAAK,S,wCAOzBM,K,yEAAqCC,YAAUC,aAAa,uBAAwB,CACnFC,MAAO,OACPJ,YAAY,EACZK,cAAc,EACdC,YAAa,GACbC,gBAAiB,Q,2CAElBb,K,oFAAuB,SAACK,GACvB,EAAKA,WAAaA,EAClBI,aAAa,uBAAyBxC,KAAKC,UAAUmC,GACrD,EAAKR,a,sCAGNU,K,yEAAsBX,KAAKS,WAAWC,c,uCACtCC,K,yEAAuB,K,2CACvBP,K,oFAAuB,WACtB,EAAKI,WAAa,EAAKA,c,mCAMxBG,K,yEAA2BT,OAAOgB,SAAS5B,S,sCAC3Cc,K,oFAAkB,SAACd,GAClBY,OAAOgB,SAAS5B,MAAQ,EAAKA,MAAQA,M,GCjDpB6B,G,+IAIlBR,K,yEAA8B,K,qCAK9BP,K,oFAAiB,SAACgB,GACG,mBAATA,EACT,EAAKC,QAAUD,EAEfE,aAAK,kBAAM,EAAKD,UAASD,O,uECT/BG,YAAU,CACRC,eAAgB,WAChBC,0BAA0B,IAWrB,IAAMC,EAAS,ICZpB,aAAe,yBAQfC,KAAO,IAAI5B,EARG,KAad6B,KAAO,IAAIT,EAXTnB,KAAK4B,KAAKC,SAAQ,IDgBTC,EAAU,SAAmBC,GAExC,IAAMC,EAAWC,YAASF,GAG1B,OAD6B,SAAAtF,GAAK,OAAI,kBAACuF,EAAD,iBAAcvF,EAAd,CAAqBiF,OAAQA,Q,oBE/BrEhG,EAAOC,QAAU,CAAC,KAAO,gB,mBCAzBD,EAAOC,QAAU,CAAC,OAAS,gBAAgB,KAAO,cAAc,MAAQ,eAAe,KAAO,cAAc,SAAW,kBAAkB,WAAa,oBAAoB,OAAS,gBAAgB,WAAa,oBAAoB,MAAQ,eAAe,SAAW,kBAAkB,QAAU,mB,oGCCrQuE,OAAOgC,SAA5BC,E,EAAAA,OAKKC,EAA4B,W,EALzBC,SAWHC,EAASC,IAAGC,MAAML,EAAOM,MAAM,I,kBCJjCC,EAAO,uBAWbN,IACHM,EAAOJ,EAAOI,MAPC,uBAaV,IAAM5I,EAAqC,CAChD4I,OACAC,QAAS,OACT5I,qBAAsB,SAACK,EAAKwI,GAE1B,OADAxI,EAAIa,IAAM2B,EAAA,EAAQ9B,MAAMV,EAAIC,WACrBD,IAUEI,EAAiB,CAAC,OAAQ,UAM1BI,EAAe,CAAC,EAAG,IAAK,IAAK,OAAQ,IAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAKzEG,EAAc,CAAC,MAAO,UAAW,W,qEC7CjC8H,EAA8B,CACzC,CACEtD,KAAM,kBAACuD,EAAA,EAAD,MACNxD,MAAO,qBACPjD,SAAU,CACR,CAAE7C,GAAI,iBAAkB8F,MAAO,kCAC/B,CAAE9F,GAAI,cAAe8F,MAAO,oCAGhC,CACEC,KAAM,kBAACwD,EAAA,EAAD,MACNzD,MAAO,2BACPjD,SAAU,CAAC,CAAEiD,MAAO,4BAAU,CAAEA,MAAO,8BAEzC,CACEC,KAAM,kBAACyD,EAAA,EAAD,MACN1D,MAAO,2BACPjD,SAAU,CAAC,CAAEiD,MAAO,4BAAU,CAAEA,MAAO,8BAEzC,CACEC,KAAM,kBAAC0D,EAAA,EAAD,MACN3D,MAAO,2BACPjD,SAAU,CAAC,CAAEiD,MAAO,gBAAQ,CAAEA,MAAO,gBAAQ,CAAEA,MAAO,gBAAQ,CAAEA,MAAO,kBAEzE,CACEC,KAAM,kBAAC2D,EAAA,EAAD,MACN5D,MAAO,2BACPjD,SAAU,CAAC,CAAEiD,MAAO,4BAAU,CAAEA,MAAO,4BAAU,CAAEA,MAAO,kCAAW,CAAEA,MAAO,+BCnClF,+M,oBCAA,IAAInB,EAAM,CACT,kBAAmB,IACnB,mBAAoB,IACpB,wBAAyB,IACzB,4BAA6B,IAC7B,eAAgB,IAChB,gBAAiB,IACjB,qBAAsB,IACtB,yBAA0B,IAC1B,SAAU,IACV,UAAW,IACX,eAAgB,IAChB,mBAAoB,IACpB,2BAA4B,IAC5B,SAAU,IACV,UAAW,IACX,eAAgB,IAChB,mBAAoB,KAIrB,SAASgF,EAAeC,GACvB,IAAIC,EAAKC,EAAsBF,GAC/B,OAAOG,EAAoBF,GAE5B,SAASC,EAAsBF,GAC9B,IAAIG,EAAoBC,EAAErF,EAAKiF,GAAM,CACpC,IAAIK,EAAI,IAAIC,MAAM,uBAAyBN,EAAM,KAEjD,MADAK,EAAElJ,KAAO,mBACHkJ,EAEP,OAAOtF,EAAIiF,GAEZD,EAAeQ,KAAO,WACrB,OAAOC,OAAOD,KAAKxF,IAEpBgF,EAAeU,QAAUP,EACzB5H,EAAOC,QAAUwH,EACjBA,EAAeE,GAAK,K,wICnBLS,G,cATH,kBACV,kBAAC,IAAD,KACE,kBAAC,IAAD,KACE,kBAAC,IAAD,UCDcC,QACW,cAA7B7D,OAAOgC,SAAS8B,UAEe,UAA7B9D,OAAOgC,SAAS8B,UAEhB9D,OAAOgC,SAAS8B,SAASC,MACvB,2DCbNC,IAASC,OAAO,kBAAC,EAAD,MAASjD,SAASkD,eAAe,SDsI3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,MAAK,SAAAC,GACjCA,EAAaC,iB,wIEtHNxG,EAAY,SAACH,GACxB,IAAM4G,EAAUC,MAAMD,QAAQ5G,GAC9B,OAAO6F,OAAOD,KAAK5F,GAASI,KAAI,SAAAkB,GAC9B,IAAMwF,EAAU9G,EAAgBsB,GAChC,MAAsB,kBAAXwF,EAA4BA,EAChC,CAAE1I,MAAO0I,EAAQ/H,MAAO6H,GAAWtF,EAAIA,OAerCyF,EAAY,SAACC,GACxB,IAD+C,EAEnBzH,IAAM0H,YADlB,SAACC,EAAaC,GAAd,sBAAuCD,EAAvC,GAAkDC,KACZH,GAFP,mBAG/C,MAAO,CAAEE,OAHsC,KAG9BE,UAH8B,Q,kJCvBpCC,EAAmC,SAAC,GAAgC,IAA9BC,EAA6B,EAA7BA,OAAQ5G,EAAqB,EAArBA,KAAShC,EAAY,iCACtEE,EAAS2I,cAAT3I,KACA4I,EAAaC,cAAbD,SAFsE,EAGhDT,oBAAU,CAAEjG,SAAU,GAAI4G,aAAc,KAA9DR,EAHsE,EAGtEA,OAAQE,EAH8D,EAG9DA,UAEVtC,EAAc5E,mBAAQ,kBAAMyH,EAAkBjH,KAAO,IAiBrDK,EAAe6G,uBAAY,SAAC9G,GAAD,OAAwBsG,EAAU,CAAEtG,eAAa,IA+BlF,OA1BA+G,qBAAU,WACR,IAAIC,EAAc,GACZhH,EAAQ,YAAOoG,EAAOpG,WAER,SAAdiH,EAAerH,GAA0C,IAApBU,EAAmB,uDAAV,MAC9C4G,GAAW,EAcf,OAZAtH,EAAKuH,SAAQ,SAAC5G,EAAGC,GAAO,IAAD,EACf3E,EAAG,UAAMyE,EAAN,YAAgBE,GACrB4G,YAAUV,EAAU,CAAEW,KAAM9G,EAAE5F,GAAI2M,OAAO,KAC3CN,EAAcnL,EACdqL,GAAW,IACN,UAAI3G,EAAE/C,gBAAN,aAAI,EAAYoD,UACrBsG,EAAWD,EAAY1G,EAAE/C,SAAU3B,MAEtBmE,EAAShE,SAASH,IAAQmE,EAASlC,KAAKjC,MAIlDqL,EAGTD,CAAYrH,GACZ0G,EAAU,CAAEtG,WAAU4G,aAAc,CAACI,OACpC,CAACN,IAGF,kBAAC,OAAD,iBACM9I,EACAwI,EAFN,CAGEnG,aAAcA,EACdL,KAAMoE,EACNnE,YAjD2C,SAACD,EAAM/D,EAAKuE,GACzDxC,EAAMiC,aAAejC,EAAMiC,YAAYD,EAAM/D,EAAKuE,GAC9CsG,IAAa9G,EAAKjF,GACpB6L,GAAUA,IAEV5G,EAAKjF,IAAMmD,EAAK8B,EAAKjF,SAoDdkM,EAAoB,SAApBA,EAAqBjH,GAChC,OAAOA,EACJ2H,QAAO,SAAAhH,GAAC,OAAKA,EAAEtD,UACfqC,KAAI,SAAAiB,GAEH,OADIA,EAAE/C,WAAU+C,EAAC,eAAQA,EAAR,CAAW/C,SAAUqJ,EAAkBtG,EAAE/C,aACnD+C,MAOAiH,EAAwB,SAAxBA,EAAyB5H,GACpC,IAAI6H,EAAoB,GADqC,uBAE7D,YAA0C7H,EAA1C,+CAAgD,CAAC,IAAD,UAArCjF,EAAqC,EAArCA,GAAI0M,EAAiC,EAAjCA,KAAM5G,EAA2B,EAA3BA,MAAOjD,EAAoB,EAApBA,SAC1B7C,GAAM8M,EAAQ3J,KAAK,CAAEnD,KAAI0M,KAAMA,GAAQ1M,EAAGiJ,MAAM,GAAG8D,MAAM,MAAM,GAAIjH,UAC/DjD,IAAUiK,EAAO,sBAAOA,GAAP,YAAmBD,EAAsBhK,OAJH,kFAM7D,OAAOiK,G,0LCzFIE,EAAS1E,mBAAQ,YAAiB,IAAdJ,EAAa,EAAbA,OAAa,EACR+E,oBAAS,GADD,mBACrCC,EADqC,KACzBC,EADyB,OAEdF,oBAAS,GAFK,mBAErCG,EAFqC,KAE5BC,EAF4B,OAGInF,EAAOC,KAA/CpB,EAHoC,EAGpCA,SAAUE,EAH0B,EAG1BA,WAAYqG,EAHc,EAGdA,cACtB/F,EAAkCN,EAAlCM,aAAcE,EAAoBR,EAApBQ,gBAEhB8F,EAASpB,uBAAY,kBAAMkB,GAAW,KAAO,IAC7CG,EAAUrB,uBAAY,kBAAMkB,GAAW,KAAQ,IAC/CI,EAAetB,uBAAY,kBAAMgB,GAAc,SAAAD,GAAU,OAAKA,OAAa,IAC3EQ,EAAiBvB,uBAAY,SAACwB,EAAkBC,GAChB,iBAAhCxD,OAAOD,KAAKwD,GAAa,IAAyBA,EAAYpG,cAChE4F,GAAc,GAEhBG,EAAcM,KACb,IAEH,OACE,sBAAQZ,OAAR,CACE/M,UAAW4N,IAAW,6BAAD,OAA8B3N,IAAM4N,QAApC,eAClB5N,IAAMoC,OAASiF,IAAiB2F,KAGnC,yBAAKjN,UAAWC,IAAM6N,MACnBhH,GAAY,yBAAKiH,IAAKC,EAAQ,KAAoBC,IAAI,GAAGjO,UAAWC,IAAMiO,OAC1E5G,GAAgB,kBAAC6G,EAAD,OAEnB,yBAAKnO,UAAWC,IAAMmO,OACpB,uBAAQtI,KAAM,kBAACuD,EAAA,EAAD,MAAkBgF,KAAK,UACrC,yBAAKrO,UAAWC,IAAMqO,UAAtB,aACA,kBAAC,EAAD,CAAYtO,UAAWC,IAAMsO,aAC7B,kBAAC9E,EAAA,EAAD,CAAiBvE,QAASoI,KAE5B,uBAAQzH,MAAM,2BAAO0H,QAASA,EAASJ,QAASA,GAC9C,uBAAgBqB,cAAc,SAC5B,kBAAC,OAAD,CAAMC,cAAezH,EAAYyG,eAAgBA,GAC/C,kBAAC,WAAD,CAAU/K,MAAM,qBAAMC,KAAK,SACzB,kBAAC,cAAD,CAAa+L,YAAY,QAAQpK,QAAS,CAAEqK,KAAM,eAAMC,MAAO,mBAEjE,kBAAC,WAAD,CAAUlM,MAAM,2BAAOC,KAAK,aAAaG,cAAc,WACrD,6BAEF,kBAAC,WAAD,CAAUJ,MAAM,2BAAOC,KAAK,eAAeG,cAAc,WACvD,6BAEF,kBAAC,WAAD,CAAUJ,MAAM,+BAAWC,KAAK,cAAcF,aAAW,GACvD,kBAAC,cAAD,CAAaoM,IAAK,KAEpB,kBAAC,WAAD,CAAUnM,MAAM,iCAAaC,KAAK,kBAAkBF,aAAW,GAC7D,kBAAC,cAAD,CAAaoM,IAAK,QAKzBvH,GACC,yBAAKtH,UAAS,qBAAgBC,IAAMgN,YAAc/H,QAASsI,EAAcvN,MAAO,CAAEmO,MAAO5G,IACvF,kBAACsH,EAAA,EAAD,CAAgB9O,UAAWC,IAAM6F,YAe9BqI,EAAa9F,mBAA0B,YAA2B,IAAxBJ,EAAuB,EAAvBA,OAAWjF,EAAY,4BAC7BiF,EAAOC,KAA9CpB,EADoE,EACpEA,SAAUC,EAD0D,EAC1DA,UAAWgI,EAD+C,EAC/CA,cAE7B,OAAOlL,IAAMC,aAAagD,IAAaC,EAAY,kBAACiI,EAAA,EAAD,MAAyB,kBAACC,EAAA,EAAD,MAArE,aACL/J,QAAS6J,GACN/L,OAWMkM,EAAyC,SAAC,GAA+D,IAAD,IAA5DC,kBAA4D,MAA/C,kBAAM1H,SAAS2H,iBAAgC,EAAZpM,EAAY,gCAC3EgK,oBAAS,GADkE,mBAC5GqC,EAD4G,KAC9FC,EAD8F,KAE7GC,EAAIC,IAEJtK,EAAUgH,uBAAY,WACrBqD,EAAEE,WAKHF,EAAEF,aACJE,EAAEG,OAEFH,EAAE7O,QAAQyO,KAEZG,GAAiBC,EAAEF,eATjB,IAAMhO,MAAM,CAAEwE,MAAO,iCAAS8J,QAAS,iEAUxC,IAEH,OAAO9L,IAAMC,aAAauL,EAAe,kBAACO,EAAA,EAAD,MAA6B,kBAACC,EAAA,EAAD,MAA/D,aACL3K,WACGlC,KCjHM8M,EAAQzH,mBAAgC,YAA2B,IAAxBJ,EAAuB,EAAvBA,OAAWjF,EAAY,4BACjCiF,EAAOC,KAA3CpB,EADqE,EACrEA,SAAUE,EAD2D,EAC3DA,WAAYD,EAD+C,EAC/CA,UACxBgJ,GAAejJ,GAAYC,EACzBM,EAAqCL,EAArCK,MAAOC,EAA8BN,EAA9BM,aAAcC,EAAgBP,EAAhBO,YAE7B,OACE,sBAAQuI,MAAR,CACE9P,UAAW4N,IAAW3N,IAAM+P,MAAP,eAAiB/P,IAAMoC,OAASyE,IAAaC,IAClEA,UAAWgJ,EACX1I,MAAOA,GAEP,yBAAKrH,UAAS,4BAAuBC,IAAMiO,OACzC,yBAAKH,IAAKC,EAAQ,KAAoBC,IAAI,GAAGjO,UAAU,eACvD,wBAAIqC,OAAQ0N,EAAa/P,UAAU,cAChCiQ,MAGL,kBAAC,EAAD,eAASjL,KAAMoE,IAAa8G,KAAK,SAAS/K,gBAAiB4K,EAAa1I,MAAOA,GAAWrE,IACzFsE,GAAgB,kBAAC6G,EAAD,CAAYnO,UAAS,4BAAuBC,IAAMkQ,UAAYlQ,MAAO,CAAEmQ,IAAK7I,S,kCCdnG8I,IAAOC,OAAO,S,IAENC,E,IAAAA,QAEKC,EAAYnI,mBAAQ,YAA2B,IAAxBzF,EAAuB,EAAvBA,SAAUqF,EAAa,EAAbA,OAAa,EACnC+E,mBAAS,GAD0B,mBAClD/L,EADkD,KAC7CwP,EAD6C,KAEjDpJ,EAAUY,EAAOC,KAAKlB,WAAtBK,MAER8E,qBAAU,WACR1F,OAAOgB,SAASiJ,KAAKC,aAAa,aAActJ,KAC/C,CAACA,IAGJ,IAAMuE,EAASM,uBAAY,kBAAMuE,GAAO,SAAAxP,GAAG,OAAIA,EAAM,OAAI,IAEzD,OACE,uBAAgBqP,OAAQM,KACtB,uBAAQ5Q,UAAU,QAChB,kBAAC8P,EAAD,CAAOlE,OAAQA,IACf,2BACE,kBAACmB,EAAD,MACA,kBAACwD,EAAD,CAAStP,IAAKA,EAAKjB,UAAWC,IAAM0P,SACjC/M,S,+DCtBAiO,EAA2C,SAAC,GAAiC,IAA/BC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,MAAU/N,EAAY,kCAC/E8I,EAAaC,cAAbD,SAEFjG,EAAQrB,mBAAQ,kBJ+FW,SAAtBwM,EAAuBhM,EAAsB8G,GACxD,IAAImF,EAAmB,GAQvB,OAPAjM,EAAKuH,SAAQ,YAA8B,IAA3BxM,EAA0B,EAA1BA,GAAI8F,EAAsB,EAAtBA,MAAOjD,EAAe,EAAfA,SACrB4J,YAAUV,EAAU,CAAEW,KAAM1M,EAAI2M,OAAO,IACzCuE,EAAmBpL,GACToL,IAAD,OAAqBrO,QAArB,IAAqBA,OAArB,EAAqBA,EAAUoD,UACxCiL,EAAmBD,EAAoBpO,EAAUkJ,OAG9CmF,EIxGqBD,CAAoB5H,IAAa0C,KAAW,CAACA,IAEzE,OACE,yBAAU9I,EACP8N,EACAjL,EACAkL,IAQMG,EAAwD,SAAC,GAAkB,IAAblO,EAAY,kBAC7E8I,EAAaC,cAAbD,SAEF9G,EAAOR,mBAAQ,WACnB,IAAM2M,EJ4FqB,SAAlBC,EAAmBpM,EAAsB8G,GACpD,IAAIuF,EAA+B,GAUnC,OATArM,EAAKuH,SAAQ,SAAA5G,GAAM,IACT5F,EAAiB4F,EAAjB5F,GAAI6C,EAAa+C,EAAb/C,SACZ,GAAI4J,YAAUV,EAAU,CAAEW,KAAM1M,EAAI2M,OAAO,IACzC2E,EAAanO,KAAKyC,QACb,UAAI/C,QAAJ,IAAIA,OAAJ,EAAIA,EAAUoD,OAAQ,CAC3B,IAAMsL,EAAuBF,EAAgBxO,EAAUkJ,GACvDwF,EAAqBtL,QAAUqL,EAAanO,KAAb,MAAAmO,EAAY,CAAM1L,GAAN,mBAAY2L,SAGpDD,EIvGSD,CAAgBhI,IAAa0C,GAAUpH,KAAI,SAAAiB,GAAC,MAAK,CAAE5F,GAAI4F,EAAE5F,GAAI6C,SAAU+C,EAAEE,UAEvF,OADAsL,EAAMA,EAAMnL,OAAS,GAAGjG,QAAKmB,EACtBiQ,IACN,CAACrF,IAEJ,OAAO,kBAAC,aAAD,eAAY9G,KAAMA,GAAUhC,KAmBxB+J,EATqD,SAAC,GAA0B,IAAxBwE,EAAuB,EAAvBA,OAAWvO,EAAY,0BAClFwO,EAAW3F,cAAX2F,OAER,OAAO,qCAAY3L,MAAO,kBAAC,EAAD,MAAiB0L,QAAmB,IAAXA,EAAkBC,EAASD,GAAYvO,K,kBC3C/EyO,EAA6B,SAAC,GAA2B,IAAzBC,EAAwB,EAAxBA,QAAS9O,EAAe,EAAfA,SAC9C1C,EAAMyR,iBAAO,MAEnB,OACE,uBAAgBC,kBAAmB,kBAAM1R,EAAI2R,SAAWpK,SAASiJ,OAC/D,yBAAK1Q,UAAS,wBAAmBC,IAAM6R,MAAQC,IAAK7R,GACjDA,EAAI2R,SAAW,uBAASG,OAAQ,kBAAM9R,EAAI2R,SAAU5R,MAAO,CAAEmO,MAAO,MACrE,kBAAC,EAAD,MACA,uBAAM6D,WAAYP,EAASQ,IAAwB,kBAAZR,EAAuBA,OAAUxQ,GACrE0B,MClBX,yI,kLCkDsB,SAACiK,EAAD,GAA4E,IAAtDsF,EAAqD,EAArDA,KAAMC,EAA+C,EAA/CA,OAAWC,EAAoC,iCAEzFC,EAA6D,GAGnEzF,EAAQN,SAAQ,YAA8B,IAA3BxM,EAA0B,EAA1BA,GAAI0M,EAAsB,EAAtBA,KAAM8F,EAAgB,EAAhBA,UACvB9F,EAAM6F,EAAcvS,GAAMiO,OAAQ,KAAWvB,GAAM+F,QAC9CD,IAAWD,EAAcvS,GAAMwS,MAI1C,IAAM/H,EA1BY,SAACqC,GAAD,OAAuB,SAACf,EAAkBsG,GAC5D,GAAIA,EAAJ,CADkG,2BAGlG,YAAqBvF,EAArB,+CAA8B,CAAC,IAApB4F,EAAmB,QAC5B,GAAIjG,YAAUV,EAAU,CAAEW,KAAMgG,EAAO1S,GAAI2M,OAAO,IAAS,CAEzD0F,EAAOK,GACP,QAP8F,qFA0BpFC,CAAY7F,GAEpB8F,EAAmB,SAATR,EAAkBS,cAAsBC,cAGxDrI,EAAMmI,EAAQlK,SAASqD,SAAUsG,GAGjCO,EAAQP,QAAO,YAAmB,IAAhBtG,EAAe,EAAfA,SAChBtB,EAAMsB,EAAUsG,MAclB,MAAO,CAAEU,OARsD,SAAA9P,GAAK,MACzD,SAATmP,EAAkB,kBAAC,IAAenP,GAAY,kBAAC,IAAkBA,IAOlD+P,MAFO,kBAAM,kBAAC,IAAD,eAASlG,QAASyF,GAAmBD,MAQpCW,CAAcnG,IAASoG,MAAzCH,E,EAAAA,OAAQC,E,EAAAA,O,0KCnFV9C,EAAe,WAMfpD,EAAiB,YAAOD,YAAsBxD,MAK9C6J,EAAkC,CAC7CC,YAAY,EACZf,KAAM,OACNC,OAAQ,YAAgB,IAAbvM,EAAY,EAAZA,MACToC,SAAOC,KAAKiL,SAAStN,EAAK,UAAMA,EAAN,cAAiBoK,GAAiBA,O","file":"static/js/main.b52bbb9e.chunk.js","sourcesContent":["import React from 'react';\nimport { Page, Header } from 'components';\n\nexport default () => {\n  return (\n    <Page>\n      <Header />\n      asd\n    </Page>\n  );\n};\n","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nexport default () => {\n  return (\n    <div>\n      account <Link to=\"/admin/account\">go account</Link>\n    </div>\n  );\n};\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport style from './style.module.less';\n\nexport default () => {\n  return (\n    <div className={`page ${style.box}`}>\n      Home <Link to=\"/user\">go User</Link>\n    </div>\n  );\n};\n","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nexport default () => {\n  return (\n    <div className=\"fill\" style={{ backgroundColor: '#f00' }}>\n      页面 <Link to=\"/\">go Home</Link>\n    </div>\n  );\n};\n","/**\n * 导出必须文件\n * 注意循环引用导致的代码运行报错\n */\nexport * from './request'; // 请求器\nexport * from './stores'; // 状态管理\nexport * from './routers'; // 导出路由\nexport * from './tool'; // 导出工具函数\nexport * from './types'; // 导出常用类型\n\nexport * from './antd'; // 导出二次封装组件\n","import FetchReques, { log } from '@dyb881/fetch-request';\nimport { requestConfig, statusCodeKeys, successCodes, messageKeys } from 'configs';\n\nconst { interceptorsRequest, interceptorsResponse, ...config } = requestConfig;\n\n/**\n * 请求模块初始化并输出请求方法以及参数\n */\nexport const { baseURL, get, post, put, patch, del, upload } = new FetchReques({\n  ...config,\n  interceptorsRequest: config => {\n    if (interceptorsRequest) config = interceptorsRequest(config);\n    log.request(config);\n    return config;\n  },\n  interceptorsResponse: (res, config) => {\n    if (!res.errorText && config.responseType === 'json') {\n      // 获取匹配的 code\n      const code = statusCodeKeys.reduce((code, key) => res[key] ?? code, undefined);\n      // 当 code 匹配成功状态码失败，既是请求失败\n      if (!successCodes.includes(code!)) {\n        res.error = code;\n        // 获取错误提示信息\n        res.errorText = messageKeys.reduce((msg, key) => res[key] || msg, '请求异常');\n      }\n    }\n    res.ok = !res.errorText; // 请求结果状态 成功/失败\n    if (interceptorsResponse) res = interceptorsResponse(res, config);\n    log.response(res, config, res.ok);\n    return res;\n  },\n});\n","module.exports = __webpack_public_path__ + \"static/media/logo.c92b85a5.ico\";","import { useCallback } from 'react';\nimport { Form as FormSource } from 'antd';\n\n/**\n * 表单组件\n */\nexport const Form = FormSource;\n\n/**\n * 表单 hooks\n */\nexport const useForm = () => {\n  const [form] = FormSource.useForm();\n  const { submit } = form;\n\n  /**\n   * 重置清空表单\n   */\n  const reset = useCallback(() => {\n    form.resetFields();\n  }, []);\n\n  /**\n   * 重置清空表单，并提交表单\n   */\n  const resetSubmit = useCallback(() => {\n    reset();\n    submit();\n  }, []);\n\n  return { form, submit, reset, resetSubmit };\n};\n","import React from 'react';\nimport { Form } from 'antd';\nimport { Input } from 'common';\nimport { FormItemProps } from 'antd/es/form/FormItem';\n\nexport type TFormItemProps = Pick<FormItemProps, 'label' | 'name' | 'rules' | 'valuePropName'> & {\n  hidden?: boolean; // 隐藏表单项\n  validator?: (value: any) => string | undefined | Promise<string | undefined>; // 额外验证器\n  select?: boolean; // 是否选择器\n  required?: boolean | string; // 是否必填\n  placeholder?: boolean | string | string[]; // 占位符\n  children?: JSX.Element;\n  formItemProps?: Partial<FormItemProps>;\n  [key: string]: any;\n};\n\nexport const FormItem: React.FC<TFormItemProps> = ({\n  hidden,\n  validator,\n  select,\n  required,\n  placeholder,\n  label,\n  name,\n  children,\n  rules = [],\n  valuePropName,\n  formItemProps,\n  ...props\n}) => {\n  // 隐藏表单项\n  if (hidden) return null;\n\n  if (!children) children = <Input />;\n\n  if (name) {\n    // 默认提示语\n    let text = select ? '请选择' : '请输入';\n    // 接入label，如 label:用户名 = 请输入用户名\n    if (typeof label === 'string') text += label;\n\n    // 加入必填提示\n    if (required) {\n      rules.push({\n        required: true,\n        message: required !== true ? required : typeof placeholder === 'string' ? placeholder : text,\n      });\n    }\n\n    // 写入默认占位符\n    if (placeholder) {\n      props.placeholder = placeholder !== true ? placeholder : typeof required === 'string' ? required : text;\n    }\n\n    // 追加验证器\n    rules.push({\n      validator: async (_rule, value) => {\n        let msg;\n        // 不可提交空格\n        if (value && typeof value === 'string' && !space.test(value)) {\n          msg = `${typeof label === 'string' ? label : '输入框'}不可提交空格`;\n        }\n        // 自定义验证器\n        if (!msg && validator) msg = await validator(value);\n\n        msg && (await Promise.reject(msg));\n      },\n    });\n  }\n\n  return (\n    <Form.Item {...{ label, name, rules, valuePropName }} {...formItemProps}>\n      {React.cloneElement(children, props)}\n    </Form.Item>\n  );\n};\n\n/**\n * 非全空格，即字符串内包含非空格的时候不匹配，一般用于 !space.test('  ') === true 判断字符串是否都是空格\n */\nconst space = /^[\\s\\S]*.*[^\\s][\\s\\S]*$/;\n","import React, { useMemo } from 'react';\nimport { Input as InputSource, InputNumber as InputNumberSource, AutoComplete as AutoCompleteSource } from 'antd';\nimport { InputProps, TextAreaProps, SearchProps } from 'antd/es/input';\nimport { InputNumberProps } from 'antd/es/input-number';\nimport { AutoCompleteProps } from 'antd/es/auto-complete';\n\n/**\n * 默认文本框最大长度\n */\nexport const maxLength = 256;\n\n/**\n * 文本框\n */\nexport const Input: React.FC<InputProps> = props => <InputSource maxLength={maxLength} autoComplete=\"off\" {...props} />;\n\n/**\n * 大文本框\n */\nexport const TextArea: React.FC<TextAreaProps> = props => (\n  <InputSource.TextArea maxLength={maxLength} rows={3} {...props} />\n);\n\n/**\n * 密码输入框\n */\nexport const Password: React.FC<InputProps> = props => (\n  <InputSource.Password maxLength={maxLength} autoComplete=\"current-password\" {...props} />\n);\n\n/**\n * 搜索框\n */\nexport const Search: React.FC<SearchProps> = props => <InputSource.Search maxLength={maxLength} {...props} />;\n\n/**\n * 数字文本框\n */\nexport const InputNumber: React.FC<InputNumberProps> = props => <InputNumberSource step={1} precision={0} {...props} />;\n\nexport type TAutoCompleteProps = Omit<AutoCompleteProps, 'options'> & {\n  options?: string[];\n};\n\n/**\n * 自动完成下拉框过滤器\n */\nexport const autoCompleteFilterOption: AutoCompleteProps['filterOption'] = (input, option) => {\n  return !!option && typeof option.value === 'string' && option.value.toLowerCase().includes(input.toLowerCase());\n};\n\n/**\n * 自动完成\n */\nexport const AutoComplete: React.FC<TAutoCompleteProps> = ({ options = [], ...props }) => {\n  const autoCompleteOptions = useMemo(() => options.map(value => ({ value })), [JSON.stringify(options)]);\n\n  return <AutoCompleteSource filterOption={autoCompleteFilterOption} options={autoCompleteOptions} {...props} />;\n};\n","import React, { useMemo } from 'react';\nimport { Radio as RadioSource } from 'antd';\nimport { RadioGroupProps } from 'antd/es/radio';\nimport { CheckboxOptionType } from 'antd/es/checkbox';\nimport { toOptions, TOptionsProps } from '../tool';\n\nexport type TRadioProps = Omit<RadioGroupProps, 'options'> & TOptionsProps<CheckboxOptionType>;\n\n/**\n * 单选框\n */\nexport const Radio: React.FC<TRadioProps> = ({ options = [], ...props }) => {\n  const radioGroupOptions = useMemo(() => toOptions(options), [JSON.stringify(options)]);\n\n  return <RadioSource.Group options={radioGroupOptions} {...props} />;\n};\n\n/**\n * 单选按钮组\n */\nexport const RadioButton: React.FC<TRadioProps> = ({ options = [], ...props }) => {\n  const radioButtons = useMemo(() => {\n    return toOptions(options).map(({ value, label }) => (\n      <RadioSource.Button key={value} value={value}>\n        {label}\n      </RadioSource.Button>\n    ));\n  }, [JSON.stringify(options)]);\n\n  return <RadioSource.Group {...props}>{radioButtons}</RadioSource.Group>;\n};\n","import React, { useMemo } from 'react';\nimport { Menu as MenuSource } from 'antd';\nimport { MenuProps, ClickParam } from 'antd/es/menu';\n\nexport type TMenuData = {\n  icon?: React.ReactNode;\n  title: string; // 标题\n  children?: TMenuData[];\n  [key: string]: any;\n};\n\nexport type TMenuProps = MenuProps & {\n  data: TMenuData[]; // 导航菜单配置数据，生成菜单后一般无法更改，如果需要更改请在 Menu Props 加上 key\n  onClickItem?: (data: TMenuData, key: string, param: ClickParam) => void; // 点击导航菜单 item\n};\n\n/**\n * 导航菜单\n * 根据配置，可无限生成子菜单\n */\nexport const Menu: React.FC<TMenuProps> = ({\n  data,\n  onClickItem,\n  onClick,\n  inlineCollapsed,\n  openKeys,\n  onOpenChange,\n  ...props\n}) => {\n  const children = useMemo(() => menuTree(data), []);\n\n  const computeProps = inlineCollapsed ? {} : { openKeys, onOpenChange };\n\n  const menuOnClick = (param: ClickParam) => {\n    const { item, key } = param;\n    onClickItem?.(item.props['data-info'], key, param);\n    onClick?.(param);\n  };\n\n  return (\n    <MenuSource onClick={menuOnClick} {...computeProps} {...props}>\n      {children}\n    </MenuSource>\n  );\n};\n\n/**\n * 递归生成子菜单\n */\nconst menuTree = (data: TMenuData[], prefix = 'key') => {\n  return data.map((i, k) => {\n    const { title, icon, children } = i;\n    const key = `${prefix}-${k}`;\n    const menuItemTitle = (\n      <>\n        {icon}\n        <span>{title}</span>\n      </>\n    );\n    return children?.length ? (\n      <MenuSource.SubMenu key={key} title={menuItemTitle}>\n        {menuTree(children, key)}\n      </MenuSource.SubMenu>\n    ) : (\n      <MenuSource.Item key={key} data-info={i}>\n        {menuItemTitle}\n      </MenuSource.Item>\n    );\n  });\n};\n","import React, { useMemo } from 'react';\nimport { Link, LinkProps } from 'react-router-dom';\nimport { Breadcrumb as BreadcrumbSource } from 'antd';\nimport { BreadcrumbProps, BreadcrumbItemProps } from 'antd/es/breadcrumb';\n\nexport type TBreadcrumbItemProps = Partial<LinkProps> & { itemProps?: BreadcrumbItemProps };\n\nexport type TBreadcrumbProps = BreadcrumbProps & { data: TBreadcrumbItemProps[] };\n\n/**\n * 面包屑\n * 可由配置生成可跳转的面包屑\n */\nexport const Breadcrumb: React.FC<TBreadcrumbProps> = ({ data, ...props }) => {\n  const breadcrumbItems = useMemo(\n    () =>\n      data.map(({ itemProps, to, children, ...i }, k) => (\n        <BreadcrumbSource.Item key={k} {...itemProps}>\n          {to ? (\n            <Link to={to} {...i}>\n              {children}\n            </Link>\n          ) : (\n            children\n          )}\n        </BreadcrumbSource.Item>\n      )),\n    [JSON.stringify(data)]\n  );\n\n  return <BreadcrumbSource {...props}>{breadcrumbItems}</BreadcrumbSource>;\n};\n","/**\n * 表单项\n */\nexport * from './form';\nexport * from './input';\nexport * from './select';\nexport * from './checkbox';\nexport * from './radio';\n\n/**\n * 功能项\n */\nexport * from './menu';\nexport * from './dropdown';\nexport * from './breadcrumb';\nexport * from './modal';\n","import { observable, action } from 'mobx';\nimport { debounce } from 'lodash';\nimport { jsonParse } from '@dyb881/json';\n\n/**\n * 视图\n */\nexport default class View {\n  constructor() {\n    this.resize();\n    window.addEventListener('resize', debounce(this.resize, 100));\n  }\n\n  /**\n   * 自动计算左边导航\n   */\n  @action resize = () => {\n    const { innerWidth: w } = window;\n    if (w <= 750) {\n      this.isMobile = true;\n      this.collapsed = false;\n    } else {\n      this.isMobile = this.pageConfig.hiddenMenu;\n      this.collapsed = w <= 1000;\n    }\n  };\n\n  /**\n   * 页面配置数据\n   */\n  @observable pageConfig: TPageConfig = jsonParse(localStorage['ra-admin-pageConfig'], {\n    theme: 'dark',\n    hiddenMenu: false,\n    hiddenHeader: false,\n    menuIconTop: 50,\n    headerIconRight: 30,\n  });\n  @action setPageConfig = (pageConfig: TPageConfig) => {\n    this.pageConfig = pageConfig;\n    localStorage['ra-admin-pageConfig'] = JSON.stringify(pageConfig);\n    this.resize();\n  };\n\n  @observable isMobile = this.pageConfig.hiddenMenu;\n  @observable collapsed = false;\n  @action siderOnChange = () => {\n    this.collapsed = !this.collapsed;\n  };\n\n  /**\n   * 页面标题\n   */\n  @observable title: string = window.document.title;\n  @action setTitle = (title: string) => {\n    window.document.title = this.title = title;\n  };\n}\n\ntype TPageConfig = {\n  theme: 'light' | 'dark';\n  hiddenMenu: boolean; // 隐藏菜单\n  hiddenHeader: boolean; // 默认隐藏头部\n  menuIconTop: number; // 菜单开关按钮位置\n  headerIconRight: number; // 页头开关按钮位置\n};\n","import { observable, action, when } from 'mobx';\n\n/**\n * 用户\n */\nexport default class User {\n  /**\n   * 是否登录\n   */\n  @observable isLogin: boolean = false;\n\n  /**\n   * 登陆状态监听\n   */\n  @action onLogin = (bind: boolean | (() => void)) => {\n    if (typeof bind === 'boolean') {\n      this.isLogin = bind;\n    } else {\n      when(() => this.isLogin, bind);\n    }\n  };\n}\n","import React from 'react';\nimport { RouteComponentProps } from 'react-router-dom';\nimport { configure } from 'mobx';\nimport { observer } from 'mobx-react';\nimport Stores from 'stores';\n\n/**\n * 全局设置\n */\nconfigure({\n  enforceActions: 'observed', // 只有被定义为动作的方法才能修改监听值\n  computedRequiresReaction: true, // 计算值内必须使用监听值\n});\n\n/**\n * 全局状态类型\n */\ntype TStores = { stores: Stores };\n\n/**\n * 全局状态\n */\nexport const stores = new Stores();\n\n/**\n * 状态联合到组件（函数组件）\n * 使用后状态变更时会刷新两次组件，build 后就不会有这情况了，可放心开发\n */\nexport const combine = <P extends object>(Component: React.FC<P & TStores>) => {\n  // 生成观察者组件\n  const Observer = observer(Component);\n  // 注入全局状态\n  const Combine: React.FC<P> = props => <Observer {...props} stores={stores} />;\n  return Combine;\n};\n\n/**\n * 状态 Props\n */\nexport type TStoresProps = Partial<TStores>;\n\n/**\n * 状态联合到组件（类装饰器）\n * 使用后状态变更时会刷新两次组件，build 后就不会有这情况了，可放心开发\n */\nexport const Combine = <P extends object>(Component: React.ComponentClass<P & TStoresProps>) => {\n  // 生成观察者组件\n  const Observer = observer(Component);\n  // 注入全局状态\n  class Combine extends React.Component<P> {\n    render = () => <Observer {...this.props} stores={stores} />;\n  }\n  return Combine;\n};\n\n/**\n * 在原有基础上加入路由类型定义\n */\nexport const combinePage = <P extends object>(Component: React.FC<P & TStores & RouteComponentProps>) => {\n  return combine(Component);\n};\n","import View from './view';\nimport User from './user';\n\n/**\n * 全局状态管理\n */\nexport default class Stores {\n  /**\n   * 状态初始化\n   */\n  constructor() {\n    // 默认为登录状态\n    this.user.onLogin(true);\n  }\n\n  /**\n   * 视图\n   */\n  view = new View();\n\n  /**\n   * 用户\n   */\n  user = new User();\n}\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"page\":\"page--2bybz\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"header--2_IpJ\",\"left\":\"left--244MW\",\"right\":\"right--24sWO\",\"logo\":\"logo--3q5z8\",\"userName\":\"userName--1_RVV\",\"fullscreen\":\"fullscreen--1ElYE\",\"hidden\":\"hidden--153Jq\",\"showHeader\":\"showHeader--10xPC\",\"sider\":\"sider--AZb7J\",\"menuIcon\":\"menuIcon--2Elif\",\"content\":\"content--3cBmi\"};","import qs from 'qs';\n\nconst { search, protocol } = window.location;\n\n/**\n * 是否生产环境\n */\nexport const isProduction = protocol === 'https:';\n\n/**\n * 链接参数\n * http://localhost?val=1 => params = {val: 1}\n */\nexport const params = qs.parse(search.slice(1));\n","import { TFetchRequestConfig } from '@dyb881/fetch-request';\nimport { isProduction, params } from './public';\nimport { message } from 'antd';\n\n// ------------------------------- 请求器配置 --------------------------------- //\n\n/**\n * 生产地址\n */\nexport let host = 'https://www.test.com';\n\n/**\n * 测试地址\n */\nconst hostTest = 'http://www.test.com';\n\n/**\n * 会根据 isProduction 自行变动，需要配置对应的生产和测试地址\n * 测试环境下链接参数 params.host 可强制变更 host\n */\nif (!isProduction) {\n  host = params.host || hostTest;\n}\n\n/**\n * 请求参数配置\n */\nexport const requestConfig: TFetchRequestConfig = {\n  host, // API 地址\n  apiPath: '/api', // API 目录\n  interceptorsResponse: (res, _config) => {\n    res.ok || message.error(res.errorText);\n    return res;\n  },\n};\n\n// ------------------------------- 响应处理配置 --------------------------------- //\n\n/**\n * 状态码 key\n * 返回结果中，用于匹配状态码的 key\n */\nexport const statusCodeKeys = ['code', 'status'];\n\n/**\n * 成功状态码\n * 决定请求器响应结果 res.ok:boolean 返回的值\n */\nexport const successCodes = [0, '0', 200, '0000', 1000, 1001, 1002, 1003, 1004, 1005, 2000];\n\n/**\n * 错误信息字段\n */\nexport const messageKeys = ['msg', 'message', 'Message'];\n","import React from 'react';\nimport { UserOutlined, TeamOutlined, UnorderedListOutlined, FolderFilled, SettingOutlined } from '@ant-design/icons';\nimport { TMenuNavData } from 'components';\n\n/**\n * 左侧导航数据和标题数据\n * 除了菜单导航数据外，path 是相对 /src/pages 引用文件的路径\n */\nexport const menuNavData: TMenuNavData[] = [\n  {\n    icon: <UserOutlined />,\n    title: '管理员',\n    children: [\n      { to: '/admin/account', title: '管理员账号' },\n      { to: '/admin/role', title: '管理员角色' },\n    ],\n  },\n  {\n    icon: <TeamOutlined />,\n    title: '用户中心',\n    children: [{ title: '用户账号' }, { title: '用户角色' }],\n  },\n  {\n    icon: <UnorderedListOutlined />,\n    title: '栏目管理',\n    children: [{ title: '栏目分类' }, { title: '栏目列表' }],\n  },\n  {\n    icon: <FolderFilled />,\n    title: '文件管理',\n    children: [{ title: '图片' }, { title: '视频' }, { title: '音频' }, { title: '其他' }],\n  },\n  {\n    icon: <SettingOutlined />,\n    title: '系统设置',\n    children: [{ title: '站点配置' }, { title: '文件配置' }, { title: '自定义配置' }, { title: '系统日志' }],\n  },\n];\n","/**\n * 导出必须文件\n * 注意循环引用导致的代码运行报错\n */\nexport * from './public'; // 公用配置\nexport * from './request'; // 请求配置\nexport * from './routers'; // 路由配置\n\nexport * from './menuNavData'; // 菜单导航数据\n","var map = {\n\t\"./admin/account\": 107,\n\t\"./admin/account/\": 107,\n\t\"./admin/account/index\": 107,\n\t\"./admin/account/index.tsx\": 107,\n\t\"./admin/role\": 108,\n\t\"./admin/role/\": 108,\n\t\"./admin/role/index\": 108,\n\t\"./admin/role/index.tsx\": 108,\n\t\"./home\": 109,\n\t\"./home/\": 109,\n\t\"./home/index\": 109,\n\t\"./home/index.tsx\": 109,\n\t\"./home/style.module.less\": 150,\n\t\"./user\": 110,\n\t\"./user/\": 110,\n\t\"./user/index\": 110,\n\t\"./user/index.jsx\": 110\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 407;","import React from 'react';\nimport { hot } from 'react-hot-loader/root';\nimport { Router, Pages } from 'common/routers'; // 直接引用 common 会导致循环引用，build 后运行报错\nimport { LayoutBox } from 'components';\nimport 'common/style'; // 默认全局样式\n\n/**\n * Router 用于注册基础路由\n * Pages 路由页面集合\n */\nconst App = () => (\n  <Router>\n    <LayoutBox>\n      <Pages />\n    </LayoutBox>\n  </Router>\n);\n\n// 热更新\nexport default process.env.NODE_ENV === 'development' ? hot(App) : App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","import React from 'react';\n\n/**\n * 选项值\n */\nexport type TOption<T = any> = { value: T; label: React.ReactNode };\n\n/**\n * 可被转为选项值\n */\nexport type TOptions<T = TOption> = T[] | (string | number)[] | object;\n\n/**\n * 选项值 Props\n */\nexport type TOptionsProps<T = TOption> = {\n  options?: TOptions<T>;\n};\n\n/**\n * 转为选项值\n * ['v1','v2'] => [{value: 1, label: 'v1'}, {value: 2, label: 'v2'}]\n */\nexport const toOptions = (options: TOptions) => {\n  const isArray = Array.isArray(options);\n  return Object.keys(options).map(k => {\n    const option = (options as any)[k];\n    if (typeof option === 'object') return option;\n    return { label: option, value: isArray ? +k : k };\n  });\n};\n\n/**\n * 判断是否有效 react 组件\n */\nexport const isElement = (e: any): e is JSX.Element => {\n  return React.isValidElement(e);\n};\n\n/**\n * 仿 class state 的 hooks\n * 新状态会合并到原状态\n */\nexport const useStates = (defaultStates: any) => {\n  const reducer = (states: any, newStates: any) => ({ ...states, ...newStates });\n  const [states, setStates] = React.useReducer(reducer, defaultStates);\n  return { states, setStates };\n};\n","import React, { useEffect, useMemo, useCallback } from 'react';\nimport { useLocation, useHistory, matchPath } from 'react-router-dom';\nimport { Menu, TMenuData, TMenuProps, TRouters, useStates } from 'common';\n\nexport type TMenuNavData = Pick<TMenuData, 'icon' | 'title'> & {\n  to?: string; // 路由地址\n  path?: string; // 绑定组件路径，为空时会尝试使用 to 的路径\n  hidden?: boolean; // 不展示到导航菜单\n  children?: TMenuNavData[];\n};\n\nexport type TMenuNavProps = Omit<TMenuProps, 'data'> & {\n  data: TMenuNavData[]; // 导航菜单配置数据，生成菜单后一般无法更改，如果需要更改请在 Menu Props 加上 key\n  reload?: () => void; // 刷新\n};\n\n/**\n * 导航栏\n * 根据路由自动打开并选中菜单\n */\nexport const MenuNav: React.FC<TMenuNavProps> = ({ reload, data, ...props }) => {\n  const { push } = useHistory();\n  const { pathname } = useLocation();\n  const { states, setStates } = useStates({ openKeys: [], selectedKeys: [] });\n\n  const menuNavData = useMemo(() => menuNavDataHidden(data), []);\n\n  /**\n   * 点击菜单执行事件并跳转页面\n   */\n  const onClickItem: TMenuProps['onClickItem'] = (data, key, param) => {\n    props.onClickItem && props.onClickItem(data, key, param);\n    if (pathname === data.to) {\n      reload && reload(); // 跳转地址和当前地址相同，执行刷新\n    } else {\n      data.to && push(data.to); // 跳转对应地址\n    }\n  };\n\n  /**\n   * 菜单开关\n   */\n  const onOpenChange = useCallback((openKeys: string[]) => setStates({ openKeys }), []);\n\n  /**\n   * 监听路由变动，打开和选中菜单项\n   */\n  useEffect(() => {\n    let selectedKey = '';\n    const openKeys = [...states.openKeys];\n\n    const getOpenKeys = (data: TMenuNavData[], prefix = 'key') => {\n      let isSelect = false; // 该路线是否选中\n\n      data.forEach((i, k) => {\n        const key = `${prefix}-${k}`;\n        if (matchPath(pathname, { path: i.to, exact: true })) {\n          selectedKey = key; // 选中\n          isSelect = true;\n        } else if (i.children?.length) {\n          isSelect = getOpenKeys(i.children, key);\n          // 路线被选中，并且未打开，则 push key\n          isSelect && !openKeys.includes(key) && openKeys.push(key);\n        }\n      });\n\n      return isSelect;\n    };\n\n    getOpenKeys(data);\n    setStates({ openKeys, selectedKeys: [selectedKey] });\n  }, [pathname]);\n\n  return (\n    <Menu\n      {...props}\n      {...states}\n      onOpenChange={onOpenChange}\n      data={menuNavData as TMenuData[]}\n      onClickItem={onClickItem}\n    />\n  );\n};\n\n/**\n * 隐藏数据中 hidden === true 的项\n */\nexport const menuNavDataHidden = (data: TMenuNavData[]) => {\n  return data\n    .filter(i => !i.hidden)\n    .map(i => {\n      if (i.children) i = { ...i, children: menuNavDataHidden(i.children) };\n      return i;\n    });\n};\n\n/**\n * 获取导航数据中路由信息\n */\nexport const getMenuNavDataRouters = (data: TMenuNavData[]) => {\n  let routers: TRouters = [];\n  for (let { to, path, title, children } of data) {\n    to && routers.push({ to, path: path || to.slice(1).split('/:')[0], title });\n    if (children) routers = [...routers, ...getMenuNavDataRouters(children)];\n  }\n  return routers;\n};\n\n/**\n * 获取导航数据中路由地址匹配的标题\n */\nexport const getMenuNavDataTitle = (data: TMenuNavData[], pathname: string) => {\n  let menuNavDatatitle = '';\n  data.forEach(({ to, title, children }) => {\n    if (matchPath(pathname, { path: to, exact: true })) {\n      menuNavDatatitle = title;\n    } else if (!menuNavDatatitle && children?.length) {\n      menuNavDatatitle = getMenuNavDataTitle(children, pathname);\n    }\n  });\n  return menuNavDatatitle;\n};\n\n/**\n * 获取导航数据中路由地址匹配的数组\n */\nexport const getMenuNavDatas = (data: TMenuNavData[], pathname: string) => {\n  let menuNavDatas: TMenuNavData[] = [];\n  data.forEach(i => {\n    const { to, children } = i;\n    if (matchPath(pathname, { path: to, exact: true })) {\n      menuNavDatas.push(i);\n    } else if (children?.length) {\n      const childrenMenuNavDatas = getMenuNavDatas(children, pathname);\n      childrenMenuNavDatas.length && menuNavDatas.push(i, ...childrenMenuNavDatas);\n    }\n  });\n  return menuNavDatas;\n};\n","import React, { useState, useCallback } from 'react';\nimport { ConfigProvider, Layout, Drawer, Switch, Avatar, Modal } from 'antd';\nimport { combine, Form, FormItem, RadioButton, InputNumber } from 'common';\nimport {\n  MenuFoldOutlined,\n  MenuUnfoldOutlined,\n  SettingOutlined,\n  MobileOutlined,\n  UserOutlined,\n  FullscreenOutlined,\n  FullscreenExitOutlined,\n} from '@ant-design/icons';\nimport screenfull, { Screenfull } from 'screenfull';\nimport classNames from 'classnames';\nimport style from './style.module.less';\n\nexport const Header = combine(({ stores }) => {\n  const [showHeader, setShowHeader] = useState(false);\n  const [visible, setVisible] = useState(false);\n  const { isMobile, pageConfig, setPageConfig } = stores.view;\n  const { hiddenHeader, headerIconRight } = pageConfig;\n\n  const onShow = useCallback(() => setVisible(true), []);\n  const onClose = useCallback(() => setVisible(false), []);\n  const onShowHeader = useCallback(() => setShowHeader(showHeader => !showHeader), []);\n  const onValuesChange = useCallback((changeValue: any, values: any) => {\n    if (Object.keys(changeValue)[0] === 'hiddenHeader' && changeValue.hiddenHeader) {\n      setShowHeader(false);\n    }\n    setPageConfig(values);\n  }, []);\n\n  return (\n    <Layout.Header\n      className={classNames(`between-center transition ${style.header}`, {\n        [style.hidden]: hiddenHeader && !showHeader,\n      })}\n    >\n      <div className={style.left}>\n        {isMobile && <img src={require('images/logo.ico')} alt=\"\" className={style.logo} />}\n        {hiddenHeader || <MenuSwitch />}\n      </div>\n      <div className={style.right}>\n        <Avatar icon={<UserOutlined />} size=\"small\" />\n        <div className={style.userName}>User Name</div>\n        <Fullscreen className={style.fullscreen} />\n        <SettingOutlined onClick={onShow} />\n      </div>\n      <Drawer title=\"网页设置\" onClose={onClose} visible={visible}>\n        <ConfigProvider componentSize=\"small\">\n          <Form initialValues={pageConfig} onValuesChange={onValuesChange}>\n            <FormItem label=\"主题色\" name=\"theme\">\n              <RadioButton buttonStyle=\"solid\" options={{ dark: '暗色', light: '亮色' }} />\n            </FormItem>\n            <FormItem label=\"隐藏菜单\" name=\"hiddenMenu\" valuePropName=\"checked\">\n              <Switch />\n            </FormItem>\n            <FormItem label=\"隐藏页头\" name=\"hiddenHeader\" valuePropName=\"checked\">\n              <Switch />\n            </FormItem>\n            <FormItem label=\"菜单开关 Top\" name=\"menuIconTop\" placeholder>\n              <InputNumber min={0} />\n            </FormItem>\n            <FormItem label=\"页头开关 Right\" name=\"headerIconRight\" placeholder>\n              <InputNumber min={0} />\n            </FormItem>\n          </Form>\n        </ConfigProvider>\n      </Drawer>\n      {hiddenHeader && (\n        <div className={`transition ${style.showHeader}`} onClick={onShowHeader} style={{ right: headerIconRight }}>\n          <MobileOutlined className={style.icon} />\n        </div>\n      )}\n    </Layout.Header>\n  );\n});\n\ntype TMenuSwitchProps = {\n  style?: React.CSSProperties;\n  className?: string;\n};\n\n/**\n * 菜单开关按钮\n */\nexport const MenuSwitch = combine<TMenuSwitchProps>(({ stores, ...props }) => {\n  const { isMobile, collapsed, siderOnChange } = stores.view;\n\n  return React.cloneElement(isMobile !== collapsed ? <MenuUnfoldOutlined /> : <MenuFoldOutlined />, {\n    onClick: siderOnChange,\n    ...props,\n  });\n});\n\ntype TFullscreenProps = TMenuSwitchProps & {\n  getElement?: () => Element;\n};\n\n/**\n * 全屏\n */\nexport const Fullscreen: React.FC<TFullscreenProps> = ({ getElement = () => document.documentElement, ...props }) => {\n  const [isFullscreen, setIsFullscreen] = useState(false);\n  const s = screenfull as Screenfull;\n\n  const onClick = useCallback(() => {\n    if (!s.isEnabled) {\n      Modal.error({ title: '不支持全屏', content: '该浏览器不支持全屏 API' });\n      return;\n    }\n\n    if (s.isFullscreen) {\n      s.exit();\n    } else {\n      s.request(getElement());\n    }\n    setIsFullscreen(!s.isFullscreen);\n  }, []);\n\n  return React.cloneElement(isFullscreen ? <FullscreenExitOutlined /> : <FullscreenOutlined />, {\n    onClick,\n    ...props,\n  });\n};\n","import React from 'react';\nimport { Layout } from 'antd';\nimport { combine } from 'common';\nimport { defaultTitle, menuNavData } from 'configs';\nimport { MenuNav, TMenuNavProps } from './menu_nav';\nimport classNames from 'classnames';\nimport style from './style.module.less';\nimport { MenuSwitch } from './header';\n\nexport const Sider = combine<Partial<TMenuNavProps>>(({ stores, ...props }) => {\n  const { isMobile, pageConfig, collapsed } = stores.view;\n  const isCollapsed = !isMobile && collapsed;\n  const { theme, hiddenHeader, menuIconTop } = pageConfig;\n\n  return (\n    <Layout.Sider\n      className={classNames(style.sider, { [style.hidden]: isMobile && !collapsed })}\n      collapsed={isCollapsed}\n      theme={theme}\n    >\n      <div className={`center transition ${style.logo}`}>\n        <img src={require('images/logo.ico')} alt=\"\" className=\"transition\" />\n        <h1 hidden={isCollapsed} className=\"transition\">\n          {defaultTitle}\n        </h1>\n      </div>\n      <MenuNav data={menuNavData} mode=\"inline\" inlineCollapsed={isCollapsed} theme={theme} {...props} />\n      {hiddenHeader && <MenuSwitch className={`center transition ${style.menuIcon}`} style={{ top: menuIconTop }} />}\n    </Layout.Sider>\n  );\n});\n","import React, { useState, useEffect, useCallback } from 'react';\nimport { ConfigProvider, Layout } from 'antd';\nimport { combine } from 'common';\nimport { Sider } from './sider';\nimport { Header } from './header';\nimport style from './style.module.less';\n\n/**\n * 设置为中文简体\n */\nimport zh_CN from 'antd/es/locale-provider/zh_CN';\nimport moment from 'moment';\nimport 'moment/locale/zh-cn';\nmoment.locale('zh-cn');\n\nconst { Content } = Layout;\n\nexport const LayoutBox = combine(({ children, stores }) => {\n  const [key, setKey] = useState(0);\n  const { theme } = stores.view.pageConfig;\n\n  useEffect(() => {\n    window.document.body.setAttribute('data-theme', theme);\n  }, [theme]);\n\n  // 菜单导航重复点击当前\n  const reload = useCallback(() => setKey(key => key + 1), []);\n\n  return (\n    <ConfigProvider locale={zh_CN}>\n      <Layout className=\"fill\">\n        <Sider reload={reload} />\n        <Layout>\n          <Header />\n          <Content key={key} className={style.content}>\n            {children}\n          </Content>\n        </Layout>\n      </Layout>\n    </ConfigProvider>\n  );\n});\n","import React, { useMemo } from 'react';\nimport { useLocation, useHistory } from 'react-router-dom';\nimport { PageHeader } from 'antd';\nimport { PageHeaderProps } from 'antd/es/page-header';\nimport { Breadcrumb, TBreadcrumbProps } from 'common';\nimport { getMenuNavDataTitle, getMenuNavDatas } from '../layout';\nimport { menuNavData } from 'configs';\n\ntype TRouterTitleProps = React.HTMLProps<HTMLSpanElement> & { before?: string; after?: string };\n\n/**\n * 路由标题\n */\nexport const RouterTitle: React.FC<TRouterTitleProps> = ({ before, after, ...props }) => {\n  const { pathname } = useLocation();\n\n  const title = useMemo(() => getMenuNavDataTitle(menuNavData, pathname), [pathname]);\n\n  return (\n    <span {...props}>\n      {before}\n      {title}\n      {after}\n    </span>\n  );\n};\n\n/**\n * 路由面包屑\n */\nexport const RouterBreadcrumb: React.FC<Partial<TBreadcrumbProps>> = ({ ...props }) => {\n  const { pathname } = useLocation();\n\n  const data = useMemo(() => {\n    const datas = getMenuNavDatas(menuNavData, pathname).map(i => ({ to: i.to, children: i.title }));\n    datas[datas.length - 1].to = undefined; // 最后一个不需要跳转\n    return datas;\n  }, [pathname]);\n\n  return <Breadcrumb data={data} {...props} />;\n};\n\ntype TRouterPageHeaderProps = Partial<Omit<PageHeaderProps, 'onBack'>> & {\n  onBack?: true | PageHeaderProps['onBack'];\n};\n\n/**\n * 标题栏\n */\nexport const RouterPageHeader: React.FC<TRouterPageHeaderProps> = ({ onBack, ...props }) => {\n  const { goBack } = useHistory();\n\n  return <PageHeader title={<RouterTitle />} onBack={onBack === true ? goBack : onBack} {...props} />;\n};\n\n/**\n * 标题栏\n */\nexport const Header = RouterPageHeader;\n","import React, { useRef } from 'react';\nimport { ConfigProvider, BackTop, Spin } from 'antd';\nimport { RouterBreadcrumb } from './router_component';\nimport style from './style.module.less';\n\nexport type TPageProps = {\n  loading?: boolean | string;\n};\n\nexport const Page: React.FC<TPageProps> = ({ loading, children }) => {\n  const box = useRef(null);\n\n  return (\n    <ConfigProvider getPopupContainer={() => box.current || document.body}>\n      <div className={`fill overflow ${style.page}`} ref={box}>\n        {box.current && <BackTop target={() => box.current!} style={{ right: 50 }} />}\n        <RouterBreadcrumb />\n        <Spin spinning={!!loading} tip={typeof loading === 'string' ? loading : undefined}>\n          {children}\n        </Spin>\n      </div>\n    </ConfigProvider>\n  );\n};\n","export * from './layout'; // 页面布局\nexport * from './content'; // 页面内容\n","import React from 'react';\nimport { matchPath, HashRouter, HashRouterProps, BrowserRouter, BrowserRouterProps } from 'react-router-dom';\nimport { createHashHistory, createBrowserHistory } from 'history';\nimport { routers, routersOptions } from 'configs/routers';\nimport Routers from '@dyb881/router';\nimport '@dyb881/router/lib/style.css';\n\n/**\n * 单个路由属性\n */\nexport type TRouter = {\n  to: string; // 路由地址\n  path?: string; // 绑定组件路径，默认为 /src/pages 下的文件或文件夹\n  component?: React.ComponentType<any>; // 绑定组件，优先度低于 path\n  [key: string]: any;\n};\n\n/**\n * 路由配置数组\n */\nexport type TRouters = TRouter[];\n\n/**\n * 路由选项\n */\nexport type TRoutersOptions = {\n  app?: boolean; // 是否打包成APP，既启用app模拟跳转\n  transition?: boolean; // 开启跳转动画\n  type: 'hash' | 'browser'; // 路由类型\n  listen?: (router: TRouter) => void; // 路由监听\n};\n\n/**\n * 匹配路由响应监听\n */\nconst createMatch = (routers: TRouters) => (pathname: string, listen: TRoutersOptions['listen']) => {\n  if(!listen) return;\n\n  for (const router of routers) {\n    if (matchPath(pathname, { path: router.to, exact: true })) {\n      // 匹配并响应对应路由配置\n      listen(router);\n      break;\n    }\n  }\n};\n\n/**\n * 路由配置生成组件配置\n */\nconst createRouters = (routers: TRouters, { type, listen, ...routersProps }: TRoutersOptions) => {\n  // 路由组件配置\n  const routersConfig: { [key: string]: React.ComponentType<any> } = {};\n\n  // 引用页面并写入路由\n  routers.forEach(({ to, path, component }) => {\n    if (path) routersConfig[to] = require('pages/' + path).default;\n    else if (component) routersConfig[to] = component;\n  });\n\n  // 创建比较方法\n  const match = createMatch(routers);\n  // 创建路由\n  const history = type === 'hash' ? createHashHistory() : createBrowserHistory();\n\n  // 初次匹配\n  match(history.location.pathname, listen);\n\n  // 监听地址变动\n  history.listen(({ pathname }) => {\n    match(pathname, listen);\n  });\n\n  /**\n   * 路由注入\n   */\n  const Router: React.FC<HashRouterProps & BrowserRouterProps> = props =>\n    type === 'hash' ? <HashRouter {...props} /> : <BrowserRouter {...props} />;\n\n  /**\n   * 路由页面集合\n   */\n  const Pages: React.FC = () => <Routers routers={routersConfig} {...routersProps} />;\n\n  return { Router, Pages };\n};\n\n/**\n * 路由配置生成\n */\nexport const { Router, Pages } = createRouters(routers, routersOptions);\n","import { TRouters, TRoutersOptions, stores } from 'common';\nimport { getMenuNavDataRouters } from 'components';\nimport { menuNavData } from 'configs';\n\n/**\n * 默认标题\n */\nexport const defaultTitle = 'RA Admin';\n\n/**\n * 路由地址配置\n * 绑定组件路径 path，默认为 /src/pages 下的文件或文件夹\n */\nexport const routers: TRouters = [...getMenuNavDataRouters(menuNavData)];\n\n/**\n * 路由选项配置\n */\nexport const routersOptions: TRoutersOptions = {\n  transition: true,\n  type: 'hash',\n  listen: ({ title }) => {\n    stores.view.setTitle(title ? `${title} - ${defaultTitle}` : defaultTitle);\n  },\n};\n"],"sourceRoot":""}